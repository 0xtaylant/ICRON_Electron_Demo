/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
"use strict";

var $protobuf = require("protobufjs/minimal");

// Common aliases
var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;

// Exported root namespace
var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});

$root.ICRONFunctionCall = (function() {

    /**
     * Properties of a ICRONFunctionCall.
     * @exports IICRONFunctionCall
     * @interface IICRONFunctionCall
     * @property {Uint8Array|null} [username] ICRONFunctionCall username
     * @property {number|null} [ClientID] ICRONFunctionCall ClientID
     * @property {number|null} [serverinstanceid] ICRONFunctionCall serverinstanceid
     * @property {number|Long|null} [requestId] ICRONFunctionCall requestId
     * @property {number|Long|null} [SessionDBID] ICRONFunctionCall SessionDBID
     * @property {number|null} [ExecutionType] ICRONFunctionCall ExecutionType
     * @property {number|null} [ClientType] ICRONFunctionCall ClientType
     * @property {number|null} [scenarioId] ICRONFunctionCall scenarioId
     * @property {Uint8Array|null} ["function"] ICRONFunctionCall function
     * @property {IProto_DataSet|null} [dataset] ICRONFunctionCall dataset
     * @property {Uint8Array|null} [description] ICRONFunctionCall description
     * @property {number|null} [RequestCommandType] ICRONFunctionCall RequestCommandType
     * @property {Uint8Array|null} [BinaryData] ICRONFunctionCall BinaryData
     * @property {number|null} [ClientRequestID] ICRONFunctionCall ClientRequestID
     * @property {Uint8Array|null} [ActionTag] ICRONFunctionCall ActionTag
     * @property {IProto_DataSetRequest|null} [datasetrequest] ICRONFunctionCall datasetrequest
     * @property {IProto_KeyStringMap|null} [stringmap] ICRONFunctionCall stringmap
     * @property {Uint8Array|null} [SessionCode] ICRONFunctionCall SessionCode
     * @property {Uint8Array|null} [ScenarioCode] ICRONFunctionCall ScenarioCode
     * @property {Uint8Array|null} [traceparent] ICRONFunctionCall traceparent
     * @property {IProto_Scenario|null} [Scenario] ICRONFunctionCall Scenario
     * @property {number|Long|null} [DataSetDBID] ICRONFunctionCall DataSetDBID
     * @property {IProto_Release_List|null} [ReleaseList] ICRONFunctionCall ReleaseList
     * @property {IProto_ProcessReleaseData|null} [processreleasedata] ICRONFunctionCall processreleasedata
     * @property {IProto_GUIContext|null} [GUIContext] ICRONFunctionCall GUIContext
     */

    /**
     * Constructs a new ICRONFunctionCall.
     * @exports ICRONFunctionCall
     * @classdesc Represents a ICRONFunctionCall.
     * @implements IICRONFunctionCall
     * @constructor
     * @param {IICRONFunctionCall=} [properties] Properties to set
     */
    function ICRONFunctionCall(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * ICRONFunctionCall username.
     * @member {Uint8Array} username
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.username = $util.newBuffer([]);

    /**
     * ICRONFunctionCall ClientID.
     * @member {number} ClientID
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.ClientID = 0;

    /**
     * ICRONFunctionCall serverinstanceid.
     * @member {number} serverinstanceid
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.serverinstanceid = 0;

    /**
     * ICRONFunctionCall requestId.
     * @member {number|Long} requestId
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.requestId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * ICRONFunctionCall SessionDBID.
     * @member {number|Long} SessionDBID
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.SessionDBID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * ICRONFunctionCall ExecutionType.
     * @member {number} ExecutionType
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.ExecutionType = 0;

    /**
     * ICRONFunctionCall ClientType.
     * @member {number} ClientType
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.ClientType = 0;

    /**
     * ICRONFunctionCall scenarioId.
     * @member {number} scenarioId
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.scenarioId = 0;

    /**
     * ICRONFunctionCall function.
     * @member {Uint8Array} function
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype["function"] = $util.newBuffer([]);

    /**
     * ICRONFunctionCall dataset.
     * @member {IProto_DataSet|null|undefined} dataset
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.dataset = null;

    /**
     * ICRONFunctionCall description.
     * @member {Uint8Array} description
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.description = $util.newBuffer([]);

    /**
     * ICRONFunctionCall RequestCommandType.
     * @member {number} RequestCommandType
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.RequestCommandType = 0;

    /**
     * ICRONFunctionCall BinaryData.
     * @member {Uint8Array} BinaryData
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.BinaryData = $util.newBuffer([]);

    /**
     * ICRONFunctionCall ClientRequestID.
     * @member {number} ClientRequestID
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.ClientRequestID = 0;

    /**
     * ICRONFunctionCall ActionTag.
     * @member {Uint8Array} ActionTag
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.ActionTag = $util.newBuffer([]);

    /**
     * ICRONFunctionCall datasetrequest.
     * @member {IProto_DataSetRequest|null|undefined} datasetrequest
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.datasetrequest = null;

    /**
     * ICRONFunctionCall stringmap.
     * @member {IProto_KeyStringMap|null|undefined} stringmap
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.stringmap = null;

    /**
     * ICRONFunctionCall SessionCode.
     * @member {Uint8Array} SessionCode
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.SessionCode = $util.newBuffer([]);

    /**
     * ICRONFunctionCall ScenarioCode.
     * @member {Uint8Array} ScenarioCode
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.ScenarioCode = $util.newBuffer([]);

    /**
     * ICRONFunctionCall traceparent.
     * @member {Uint8Array} traceparent
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.traceparent = $util.newBuffer([]);

    /**
     * ICRONFunctionCall Scenario.
     * @member {IProto_Scenario|null|undefined} Scenario
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.Scenario = null;

    /**
     * ICRONFunctionCall DataSetDBID.
     * @member {number|Long} DataSetDBID
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.DataSetDBID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * ICRONFunctionCall ReleaseList.
     * @member {IProto_Release_List|null|undefined} ReleaseList
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.ReleaseList = null;

    /**
     * ICRONFunctionCall processreleasedata.
     * @member {IProto_ProcessReleaseData|null|undefined} processreleasedata
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.processreleasedata = null;

    /**
     * ICRONFunctionCall GUIContext.
     * @member {IProto_GUIContext|null|undefined} GUIContext
     * @memberof ICRONFunctionCall
     * @instance
     */
    ICRONFunctionCall.prototype.GUIContext = null;

    /**
     * Creates a new ICRONFunctionCall instance using the specified properties.
     * @function create
     * @memberof ICRONFunctionCall
     * @static
     * @param {IICRONFunctionCall=} [properties] Properties to set
     * @returns {ICRONFunctionCall} ICRONFunctionCall instance
     */
    ICRONFunctionCall.create = function create(properties) {
        return new ICRONFunctionCall(properties);
    };

    /**
     * Encodes the specified ICRONFunctionCall message. Does not implicitly {@link ICRONFunctionCall.verify|verify} messages.
     * @function encode
     * @memberof ICRONFunctionCall
     * @static
     * @param {IICRONFunctionCall} message ICRONFunctionCall message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    ICRONFunctionCall.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.username != null && Object.hasOwnProperty.call(message, "username"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.username);
        if (message.ClientID != null && Object.hasOwnProperty.call(message, "ClientID"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ClientID);
        if (message.serverinstanceid != null && Object.hasOwnProperty.call(message, "serverinstanceid"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.serverinstanceid);
        if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.requestId);
        if (message.SessionDBID != null && Object.hasOwnProperty.call(message, "SessionDBID"))
            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.SessionDBID);
        if (message.ExecutionType != null && Object.hasOwnProperty.call(message, "ExecutionType"))
            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.ExecutionType);
        if (message.ClientType != null && Object.hasOwnProperty.call(message, "ClientType"))
            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.ClientType);
        if (message.scenarioId != null && Object.hasOwnProperty.call(message, "scenarioId"))
            writer.uint32(/* id 12, wireType 0 =*/96).int32(message.scenarioId);
        if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
            writer.uint32(/* id 13, wireType 2 =*/106).bytes(message["function"]);
        if (message.dataset != null && Object.hasOwnProperty.call(message, "dataset"))
            $root.Proto_DataSet.encode(message.dataset, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
        if (message.description != null && Object.hasOwnProperty.call(message, "description"))
            writer.uint32(/* id 15, wireType 2 =*/122).bytes(message.description);
        if (message.RequestCommandType != null && Object.hasOwnProperty.call(message, "RequestCommandType"))
            writer.uint32(/* id 16, wireType 0 =*/128).int32(message.RequestCommandType);
        if (message.BinaryData != null && Object.hasOwnProperty.call(message, "BinaryData"))
            writer.uint32(/* id 17, wireType 2 =*/138).bytes(message.BinaryData);
        if (message.ClientRequestID != null && Object.hasOwnProperty.call(message, "ClientRequestID"))
            writer.uint32(/* id 19, wireType 0 =*/152).int32(message.ClientRequestID);
        if (message.ActionTag != null && Object.hasOwnProperty.call(message, "ActionTag"))
            writer.uint32(/* id 20, wireType 2 =*/162).bytes(message.ActionTag);
        if (message.datasetrequest != null && Object.hasOwnProperty.call(message, "datasetrequest"))
            $root.Proto_DataSetRequest.encode(message.datasetrequest, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();
        if (message.stringmap != null && Object.hasOwnProperty.call(message, "stringmap"))
            $root.Proto_KeyStringMap.encode(message.stringmap, writer.uint32(/* id 31, wireType 2 =*/250).fork()).ldelim();
        if (message.SessionCode != null && Object.hasOwnProperty.call(message, "SessionCode"))
            writer.uint32(/* id 40, wireType 2 =*/322).bytes(message.SessionCode);
        if (message.ScenarioCode != null && Object.hasOwnProperty.call(message, "ScenarioCode"))
            writer.uint32(/* id 41, wireType 2 =*/330).bytes(message.ScenarioCode);
        if (message.traceparent != null && Object.hasOwnProperty.call(message, "traceparent"))
            writer.uint32(/* id 50, wireType 2 =*/402).bytes(message.traceparent);
        if (message.Scenario != null && Object.hasOwnProperty.call(message, "Scenario"))
            $root.Proto_Scenario.encode(message.Scenario, writer.uint32(/* id 60, wireType 2 =*/482).fork()).ldelim();
        if (message.DataSetDBID != null && Object.hasOwnProperty.call(message, "DataSetDBID"))
            writer.uint32(/* id 61, wireType 0 =*/488).int64(message.DataSetDBID);
        if (message.ReleaseList != null && Object.hasOwnProperty.call(message, "ReleaseList"))
            $root.Proto_Release_List.encode(message.ReleaseList, writer.uint32(/* id 62, wireType 2 =*/498).fork()).ldelim();
        if (message.processreleasedata != null && Object.hasOwnProperty.call(message, "processreleasedata"))
            $root.Proto_ProcessReleaseData.encode(message.processreleasedata, writer.uint32(/* id 70, wireType 2 =*/562).fork()).ldelim();
        if (message.GUIContext != null && Object.hasOwnProperty.call(message, "GUIContext"))
            $root.Proto_GUIContext.encode(message.GUIContext, writer.uint32(/* id 80, wireType 2 =*/642).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified ICRONFunctionCall message, length delimited. Does not implicitly {@link ICRONFunctionCall.verify|verify} messages.
     * @function encodeDelimited
     * @memberof ICRONFunctionCall
     * @static
     * @param {IICRONFunctionCall} message ICRONFunctionCall message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    ICRONFunctionCall.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a ICRONFunctionCall message from the specified reader or buffer.
     * @function decode
     * @memberof ICRONFunctionCall
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {ICRONFunctionCall} ICRONFunctionCall
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    ICRONFunctionCall.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.ICRONFunctionCall();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.username = reader.bytes();
                break;
            case 2:
                message.ClientID = reader.int32();
                break;
            case 3:
                message.serverinstanceid = reader.int32();
                break;
            case 4:
                message.requestId = reader.int64();
                break;
            case 5:
                message.SessionDBID = reader.int64();
                break;
            case 6:
                message.ExecutionType = reader.int32();
                break;
            case 7:
                message.ClientType = reader.int32();
                break;
            case 12:
                message.scenarioId = reader.int32();
                break;
            case 13:
                message["function"] = reader.bytes();
                break;
            case 14:
                message.dataset = $root.Proto_DataSet.decode(reader, reader.uint32());
                break;
            case 15:
                message.description = reader.bytes();
                break;
            case 16:
                message.RequestCommandType = reader.int32();
                break;
            case 17:
                message.BinaryData = reader.bytes();
                break;
            case 19:
                message.ClientRequestID = reader.int32();
                break;
            case 20:
                message.ActionTag = reader.bytes();
                break;
            case 30:
                message.datasetrequest = $root.Proto_DataSetRequest.decode(reader, reader.uint32());
                break;
            case 31:
                message.stringmap = $root.Proto_KeyStringMap.decode(reader, reader.uint32());
                break;
            case 40:
                message.SessionCode = reader.bytes();
                break;
            case 41:
                message.ScenarioCode = reader.bytes();
                break;
            case 50:
                message.traceparent = reader.bytes();
                break;
            case 60:
                message.Scenario = $root.Proto_Scenario.decode(reader, reader.uint32());
                break;
            case 61:
                message.DataSetDBID = reader.int64();
                break;
            case 62:
                message.ReleaseList = $root.Proto_Release_List.decode(reader, reader.uint32());
                break;
            case 70:
                message.processreleasedata = $root.Proto_ProcessReleaseData.decode(reader, reader.uint32());
                break;
            case 80:
                message.GUIContext = $root.Proto_GUIContext.decode(reader, reader.uint32());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a ICRONFunctionCall message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof ICRONFunctionCall
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {ICRONFunctionCall} ICRONFunctionCall
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    ICRONFunctionCall.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a ICRONFunctionCall message.
     * @function verify
     * @memberof ICRONFunctionCall
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    ICRONFunctionCall.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.username != null && message.hasOwnProperty("username"))
            if (!(message.username && typeof message.username.length === "number" || $util.isString(message.username)))
                return "username: buffer expected";
        if (message.ClientID != null && message.hasOwnProperty("ClientID"))
            if (!$util.isInteger(message.ClientID))
                return "ClientID: integer expected";
        if (message.serverinstanceid != null && message.hasOwnProperty("serverinstanceid"))
            if (!$util.isInteger(message.serverinstanceid))
                return "serverinstanceid: integer expected";
        if (message.requestId != null && message.hasOwnProperty("requestId"))
            if (!$util.isInteger(message.requestId) && !(message.requestId && $util.isInteger(message.requestId.low) && $util.isInteger(message.requestId.high)))
                return "requestId: integer|Long expected";
        if (message.SessionDBID != null && message.hasOwnProperty("SessionDBID"))
            if (!$util.isInteger(message.SessionDBID) && !(message.SessionDBID && $util.isInteger(message.SessionDBID.low) && $util.isInteger(message.SessionDBID.high)))
                return "SessionDBID: integer|Long expected";
        if (message.ExecutionType != null && message.hasOwnProperty("ExecutionType"))
            if (!$util.isInteger(message.ExecutionType))
                return "ExecutionType: integer expected";
        if (message.ClientType != null && message.hasOwnProperty("ClientType"))
            if (!$util.isInteger(message.ClientType))
                return "ClientType: integer expected";
        if (message.scenarioId != null && message.hasOwnProperty("scenarioId"))
            if (!$util.isInteger(message.scenarioId))
                return "scenarioId: integer expected";
        if (message["function"] != null && message.hasOwnProperty("function"))
            if (!(message["function"] && typeof message["function"].length === "number" || $util.isString(message["function"])))
                return "function: buffer expected";
        if (message.dataset != null && message.hasOwnProperty("dataset")) {
            var error = $root.Proto_DataSet.verify(message.dataset);
            if (error)
                return "dataset." + error;
        }
        if (message.description != null && message.hasOwnProperty("description"))
            if (!(message.description && typeof message.description.length === "number" || $util.isString(message.description)))
                return "description: buffer expected";
        if (message.RequestCommandType != null && message.hasOwnProperty("RequestCommandType"))
            if (!$util.isInteger(message.RequestCommandType))
                return "RequestCommandType: integer expected";
        if (message.BinaryData != null && message.hasOwnProperty("BinaryData"))
            if (!(message.BinaryData && typeof message.BinaryData.length === "number" || $util.isString(message.BinaryData)))
                return "BinaryData: buffer expected";
        if (message.ClientRequestID != null && message.hasOwnProperty("ClientRequestID"))
            if (!$util.isInteger(message.ClientRequestID))
                return "ClientRequestID: integer expected";
        if (message.ActionTag != null && message.hasOwnProperty("ActionTag"))
            if (!(message.ActionTag && typeof message.ActionTag.length === "number" || $util.isString(message.ActionTag)))
                return "ActionTag: buffer expected";
        if (message.datasetrequest != null && message.hasOwnProperty("datasetrequest")) {
            var error = $root.Proto_DataSetRequest.verify(message.datasetrequest);
            if (error)
                return "datasetrequest." + error;
        }
        if (message.stringmap != null && message.hasOwnProperty("stringmap")) {
            var error = $root.Proto_KeyStringMap.verify(message.stringmap);
            if (error)
                return "stringmap." + error;
        }
        if (message.SessionCode != null && message.hasOwnProperty("SessionCode"))
            if (!(message.SessionCode && typeof message.SessionCode.length === "number" || $util.isString(message.SessionCode)))
                return "SessionCode: buffer expected";
        if (message.ScenarioCode != null && message.hasOwnProperty("ScenarioCode"))
            if (!(message.ScenarioCode && typeof message.ScenarioCode.length === "number" || $util.isString(message.ScenarioCode)))
                return "ScenarioCode: buffer expected";
        if (message.traceparent != null && message.hasOwnProperty("traceparent"))
            if (!(message.traceparent && typeof message.traceparent.length === "number" || $util.isString(message.traceparent)))
                return "traceparent: buffer expected";
        if (message.Scenario != null && message.hasOwnProperty("Scenario")) {
            var error = $root.Proto_Scenario.verify(message.Scenario);
            if (error)
                return "Scenario." + error;
        }
        if (message.DataSetDBID != null && message.hasOwnProperty("DataSetDBID"))
            if (!$util.isInteger(message.DataSetDBID) && !(message.DataSetDBID && $util.isInteger(message.DataSetDBID.low) && $util.isInteger(message.DataSetDBID.high)))
                return "DataSetDBID: integer|Long expected";
        if (message.ReleaseList != null && message.hasOwnProperty("ReleaseList")) {
            var error = $root.Proto_Release_List.verify(message.ReleaseList);
            if (error)
                return "ReleaseList." + error;
        }
        if (message.processreleasedata != null && message.hasOwnProperty("processreleasedata")) {
            var error = $root.Proto_ProcessReleaseData.verify(message.processreleasedata);
            if (error)
                return "processreleasedata." + error;
        }
        if (message.GUIContext != null && message.hasOwnProperty("GUIContext")) {
            var error = $root.Proto_GUIContext.verify(message.GUIContext);
            if (error)
                return "GUIContext." + error;
        }
        return null;
    };

    /**
     * Creates a ICRONFunctionCall message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof ICRONFunctionCall
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {ICRONFunctionCall} ICRONFunctionCall
     */
    ICRONFunctionCall.fromObject = function fromObject(object) {
        if (object instanceof $root.ICRONFunctionCall)
            return object;
        var message = new $root.ICRONFunctionCall();
        if (object.username != null)
            if (typeof object.username === "string")
                $util.base64.decode(object.username, message.username = $util.newBuffer($util.base64.length(object.username)), 0);
            else if (object.username.length)
                message.username = object.username;
        if (object.ClientID != null)
            message.ClientID = object.ClientID | 0;
        if (object.serverinstanceid != null)
            message.serverinstanceid = object.serverinstanceid | 0;
        if (object.requestId != null)
            if ($util.Long)
                (message.requestId = $util.Long.fromValue(object.requestId)).unsigned = false;
            else if (typeof object.requestId === "string")
                message.requestId = parseInt(object.requestId, 10);
            else if (typeof object.requestId === "number")
                message.requestId = object.requestId;
            else if (typeof object.requestId === "object")
                message.requestId = new $util.LongBits(object.requestId.low >>> 0, object.requestId.high >>> 0).toNumber();
        if (object.SessionDBID != null)
            if ($util.Long)
                (message.SessionDBID = $util.Long.fromValue(object.SessionDBID)).unsigned = false;
            else if (typeof object.SessionDBID === "string")
                message.SessionDBID = parseInt(object.SessionDBID, 10);
            else if (typeof object.SessionDBID === "number")
                message.SessionDBID = object.SessionDBID;
            else if (typeof object.SessionDBID === "object")
                message.SessionDBID = new $util.LongBits(object.SessionDBID.low >>> 0, object.SessionDBID.high >>> 0).toNumber();
        if (object.ExecutionType != null)
            message.ExecutionType = object.ExecutionType | 0;
        if (object.ClientType != null)
            message.ClientType = object.ClientType | 0;
        if (object.scenarioId != null)
            message.scenarioId = object.scenarioId | 0;
        if (object["function"] != null)
            if (typeof object["function"] === "string")
                $util.base64.decode(object["function"], message["function"] = $util.newBuffer($util.base64.length(object["function"])), 0);
            else if (object["function"].length)
                message["function"] = object["function"];
        if (object.dataset != null) {
            if (typeof object.dataset !== "object")
                throw TypeError(".ICRONFunctionCall.dataset: object expected");
            message.dataset = $root.Proto_DataSet.fromObject(object.dataset);
        }
        if (object.description != null)
            if (typeof object.description === "string")
                $util.base64.decode(object.description, message.description = $util.newBuffer($util.base64.length(object.description)), 0);
            else if (object.description.length)
                message.description = object.description;
        if (object.RequestCommandType != null)
            message.RequestCommandType = object.RequestCommandType | 0;
        if (object.BinaryData != null)
            if (typeof object.BinaryData === "string")
                $util.base64.decode(object.BinaryData, message.BinaryData = $util.newBuffer($util.base64.length(object.BinaryData)), 0);
            else if (object.BinaryData.length)
                message.BinaryData = object.BinaryData;
        if (object.ClientRequestID != null)
            message.ClientRequestID = object.ClientRequestID | 0;
        if (object.ActionTag != null)
            if (typeof object.ActionTag === "string")
                $util.base64.decode(object.ActionTag, message.ActionTag = $util.newBuffer($util.base64.length(object.ActionTag)), 0);
            else if (object.ActionTag.length)
                message.ActionTag = object.ActionTag;
        if (object.datasetrequest != null) {
            if (typeof object.datasetrequest !== "object")
                throw TypeError(".ICRONFunctionCall.datasetrequest: object expected");
            message.datasetrequest = $root.Proto_DataSetRequest.fromObject(object.datasetrequest);
        }
        if (object.stringmap != null) {
            if (typeof object.stringmap !== "object")
                throw TypeError(".ICRONFunctionCall.stringmap: object expected");
            message.stringmap = $root.Proto_KeyStringMap.fromObject(object.stringmap);
        }
        if (object.SessionCode != null)
            if (typeof object.SessionCode === "string")
                $util.base64.decode(object.SessionCode, message.SessionCode = $util.newBuffer($util.base64.length(object.SessionCode)), 0);
            else if (object.SessionCode.length)
                message.SessionCode = object.SessionCode;
        if (object.ScenarioCode != null)
            if (typeof object.ScenarioCode === "string")
                $util.base64.decode(object.ScenarioCode, message.ScenarioCode = $util.newBuffer($util.base64.length(object.ScenarioCode)), 0);
            else if (object.ScenarioCode.length)
                message.ScenarioCode = object.ScenarioCode;
        if (object.traceparent != null)
            if (typeof object.traceparent === "string")
                $util.base64.decode(object.traceparent, message.traceparent = $util.newBuffer($util.base64.length(object.traceparent)), 0);
            else if (object.traceparent.length)
                message.traceparent = object.traceparent;
        if (object.Scenario != null) {
            if (typeof object.Scenario !== "object")
                throw TypeError(".ICRONFunctionCall.Scenario: object expected");
            message.Scenario = $root.Proto_Scenario.fromObject(object.Scenario);
        }
        if (object.DataSetDBID != null)
            if ($util.Long)
                (message.DataSetDBID = $util.Long.fromValue(object.DataSetDBID)).unsigned = false;
            else if (typeof object.DataSetDBID === "string")
                message.DataSetDBID = parseInt(object.DataSetDBID, 10);
            else if (typeof object.DataSetDBID === "number")
                message.DataSetDBID = object.DataSetDBID;
            else if (typeof object.DataSetDBID === "object")
                message.DataSetDBID = new $util.LongBits(object.DataSetDBID.low >>> 0, object.DataSetDBID.high >>> 0).toNumber();
        if (object.ReleaseList != null) {
            if (typeof object.ReleaseList !== "object")
                throw TypeError(".ICRONFunctionCall.ReleaseList: object expected");
            message.ReleaseList = $root.Proto_Release_List.fromObject(object.ReleaseList);
        }
        if (object.processreleasedata != null) {
            if (typeof object.processreleasedata !== "object")
                throw TypeError(".ICRONFunctionCall.processreleasedata: object expected");
            message.processreleasedata = $root.Proto_ProcessReleaseData.fromObject(object.processreleasedata);
        }
        if (object.GUIContext != null) {
            if (typeof object.GUIContext !== "object")
                throw TypeError(".ICRONFunctionCall.GUIContext: object expected");
            message.GUIContext = $root.Proto_GUIContext.fromObject(object.GUIContext);
        }
        return message;
    };

    /**
     * Creates a plain object from a ICRONFunctionCall message. Also converts values to other types if specified.
     * @function toObject
     * @memberof ICRONFunctionCall
     * @static
     * @param {ICRONFunctionCall} message ICRONFunctionCall
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    ICRONFunctionCall.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.username = "";
            else {
                object.username = [];
                if (options.bytes !== Array)
                    object.username = $util.newBuffer(object.username);
            }
            object.ClientID = 0;
            object.serverinstanceid = 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.requestId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.requestId = options.longs === String ? "0" : 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.SessionDBID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.SessionDBID = options.longs === String ? "0" : 0;
            object.ExecutionType = 0;
            object.ClientType = 0;
            object.scenarioId = 0;
            if (options.bytes === String)
                object["function"] = "";
            else {
                object["function"] = [];
                if (options.bytes !== Array)
                    object["function"] = $util.newBuffer(object["function"]);
            }
            object.dataset = null;
            if (options.bytes === String)
                object.description = "";
            else {
                object.description = [];
                if (options.bytes !== Array)
                    object.description = $util.newBuffer(object.description);
            }
            object.RequestCommandType = 0;
            if (options.bytes === String)
                object.BinaryData = "";
            else {
                object.BinaryData = [];
                if (options.bytes !== Array)
                    object.BinaryData = $util.newBuffer(object.BinaryData);
            }
            object.ClientRequestID = 0;
            if (options.bytes === String)
                object.ActionTag = "";
            else {
                object.ActionTag = [];
                if (options.bytes !== Array)
                    object.ActionTag = $util.newBuffer(object.ActionTag);
            }
            object.datasetrequest = null;
            object.stringmap = null;
            if (options.bytes === String)
                object.SessionCode = "";
            else {
                object.SessionCode = [];
                if (options.bytes !== Array)
                    object.SessionCode = $util.newBuffer(object.SessionCode);
            }
            if (options.bytes === String)
                object.ScenarioCode = "";
            else {
                object.ScenarioCode = [];
                if (options.bytes !== Array)
                    object.ScenarioCode = $util.newBuffer(object.ScenarioCode);
            }
            if (options.bytes === String)
                object.traceparent = "";
            else {
                object.traceparent = [];
                if (options.bytes !== Array)
                    object.traceparent = $util.newBuffer(object.traceparent);
            }
            object.Scenario = null;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.DataSetDBID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.DataSetDBID = options.longs === String ? "0" : 0;
            object.ReleaseList = null;
            object.processreleasedata = null;
            object.GUIContext = null;
        }
        if (message.username != null && message.hasOwnProperty("username"))
            object.username = options.bytes === String ? $util.base64.encode(message.username, 0, message.username.length) : options.bytes === Array ? Array.prototype.slice.call(message.username) : message.username;
        if (message.ClientID != null && message.hasOwnProperty("ClientID"))
            object.ClientID = message.ClientID;
        if (message.serverinstanceid != null && message.hasOwnProperty("serverinstanceid"))
            object.serverinstanceid = message.serverinstanceid;
        if (message.requestId != null && message.hasOwnProperty("requestId"))
            if (typeof message.requestId === "number")
                object.requestId = options.longs === String ? String(message.requestId) : message.requestId;
            else
                object.requestId = options.longs === String ? $util.Long.prototype.toString.call(message.requestId) : options.longs === Number ? new $util.LongBits(message.requestId.low >>> 0, message.requestId.high >>> 0).toNumber() : message.requestId;
        if (message.SessionDBID != null && message.hasOwnProperty("SessionDBID"))
            if (typeof message.SessionDBID === "number")
                object.SessionDBID = options.longs === String ? String(message.SessionDBID) : message.SessionDBID;
            else
                object.SessionDBID = options.longs === String ? $util.Long.prototype.toString.call(message.SessionDBID) : options.longs === Number ? new $util.LongBits(message.SessionDBID.low >>> 0, message.SessionDBID.high >>> 0).toNumber() : message.SessionDBID;
        if (message.ExecutionType != null && message.hasOwnProperty("ExecutionType"))
            object.ExecutionType = message.ExecutionType;
        if (message.ClientType != null && message.hasOwnProperty("ClientType"))
            object.ClientType = message.ClientType;
        if (message.scenarioId != null && message.hasOwnProperty("scenarioId"))
            object.scenarioId = message.scenarioId;
        if (message["function"] != null && message.hasOwnProperty("function"))
            object["function"] = options.bytes === String ? $util.base64.encode(message["function"], 0, message["function"].length) : options.bytes === Array ? Array.prototype.slice.call(message["function"]) : message["function"];
        if (message.dataset != null && message.hasOwnProperty("dataset"))
            object.dataset = $root.Proto_DataSet.toObject(message.dataset, options);
        if (message.description != null && message.hasOwnProperty("description"))
            object.description = options.bytes === String ? $util.base64.encode(message.description, 0, message.description.length) : options.bytes === Array ? Array.prototype.slice.call(message.description) : message.description;
        if (message.RequestCommandType != null && message.hasOwnProperty("RequestCommandType"))
            object.RequestCommandType = message.RequestCommandType;
        if (message.BinaryData != null && message.hasOwnProperty("BinaryData"))
            object.BinaryData = options.bytes === String ? $util.base64.encode(message.BinaryData, 0, message.BinaryData.length) : options.bytes === Array ? Array.prototype.slice.call(message.BinaryData) : message.BinaryData;
        if (message.ClientRequestID != null && message.hasOwnProperty("ClientRequestID"))
            object.ClientRequestID = message.ClientRequestID;
        if (message.ActionTag != null && message.hasOwnProperty("ActionTag"))
            object.ActionTag = options.bytes === String ? $util.base64.encode(message.ActionTag, 0, message.ActionTag.length) : options.bytes === Array ? Array.prototype.slice.call(message.ActionTag) : message.ActionTag;
        if (message.datasetrequest != null && message.hasOwnProperty("datasetrequest"))
            object.datasetrequest = $root.Proto_DataSetRequest.toObject(message.datasetrequest, options);
        if (message.stringmap != null && message.hasOwnProperty("stringmap"))
            object.stringmap = $root.Proto_KeyStringMap.toObject(message.stringmap, options);
        if (message.SessionCode != null && message.hasOwnProperty("SessionCode"))
            object.SessionCode = options.bytes === String ? $util.base64.encode(message.SessionCode, 0, message.SessionCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.SessionCode) : message.SessionCode;
        if (message.ScenarioCode != null && message.hasOwnProperty("ScenarioCode"))
            object.ScenarioCode = options.bytes === String ? $util.base64.encode(message.ScenarioCode, 0, message.ScenarioCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ScenarioCode) : message.ScenarioCode;
        if (message.traceparent != null && message.hasOwnProperty("traceparent"))
            object.traceparent = options.bytes === String ? $util.base64.encode(message.traceparent, 0, message.traceparent.length) : options.bytes === Array ? Array.prototype.slice.call(message.traceparent) : message.traceparent;
        if (message.Scenario != null && message.hasOwnProperty("Scenario"))
            object.Scenario = $root.Proto_Scenario.toObject(message.Scenario, options);
        if (message.DataSetDBID != null && message.hasOwnProperty("DataSetDBID"))
            if (typeof message.DataSetDBID === "number")
                object.DataSetDBID = options.longs === String ? String(message.DataSetDBID) : message.DataSetDBID;
            else
                object.DataSetDBID = options.longs === String ? $util.Long.prototype.toString.call(message.DataSetDBID) : options.longs === Number ? new $util.LongBits(message.DataSetDBID.low >>> 0, message.DataSetDBID.high >>> 0).toNumber() : message.DataSetDBID;
        if (message.ReleaseList != null && message.hasOwnProperty("ReleaseList"))
            object.ReleaseList = $root.Proto_Release_List.toObject(message.ReleaseList, options);
        if (message.processreleasedata != null && message.hasOwnProperty("processreleasedata"))
            object.processreleasedata = $root.Proto_ProcessReleaseData.toObject(message.processreleasedata, options);
        if (message.GUIContext != null && message.hasOwnProperty("GUIContext"))
            object.GUIContext = $root.Proto_GUIContext.toObject(message.GUIContext, options);
        return object;
    };

    /**
     * Converts this ICRONFunctionCall to JSON.
     * @function toJSON
     * @memberof ICRONFunctionCall
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    ICRONFunctionCall.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return ICRONFunctionCall;
})();

$root.Proto_GUIContext = (function() {

    /**
     * Properties of a Proto_GUIContext.
     * @exports IProto_GUIContext
     * @interface IProto_GUIContext
     * @property {number|null} [WindowIndex] Proto_GUIContext WindowIndex
     * @property {Uint8Array|null} [WSName] Proto_GUIContext WSName
     * @property {Uint8Array|null} [PresetName] Proto_GUIContext PresetName
     * @property {Uint8Array|null} [GroupPresetName] Proto_GUIContext GroupPresetName
     * @property {IProto_ReferenceIDWithCN|null} [GUIParameterObjectReferenceIDWithCN] Proto_GUIContext GUIParameterObjectReferenceIDWithCN
     */

    /**
     * Constructs a new Proto_GUIContext.
     * @exports Proto_GUIContext
     * @classdesc Represents a Proto_GUIContext.
     * @implements IProto_GUIContext
     * @constructor
     * @param {IProto_GUIContext=} [properties] Properties to set
     */
    function Proto_GUIContext(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GUIContext WindowIndex.
     * @member {number} WindowIndex
     * @memberof Proto_GUIContext
     * @instance
     */
    Proto_GUIContext.prototype.WindowIndex = 0;

    /**
     * Proto_GUIContext WSName.
     * @member {Uint8Array} WSName
     * @memberof Proto_GUIContext
     * @instance
     */
    Proto_GUIContext.prototype.WSName = $util.newBuffer([]);

    /**
     * Proto_GUIContext PresetName.
     * @member {Uint8Array} PresetName
     * @memberof Proto_GUIContext
     * @instance
     */
    Proto_GUIContext.prototype.PresetName = $util.newBuffer([]);

    /**
     * Proto_GUIContext GroupPresetName.
     * @member {Uint8Array} GroupPresetName
     * @memberof Proto_GUIContext
     * @instance
     */
    Proto_GUIContext.prototype.GroupPresetName = $util.newBuffer([]);

    /**
     * Proto_GUIContext GUIParameterObjectReferenceIDWithCN.
     * @member {IProto_ReferenceIDWithCN|null|undefined} GUIParameterObjectReferenceIDWithCN
     * @memberof Proto_GUIContext
     * @instance
     */
    Proto_GUIContext.prototype.GUIParameterObjectReferenceIDWithCN = null;

    /**
     * Creates a new Proto_GUIContext instance using the specified properties.
     * @function create
     * @memberof Proto_GUIContext
     * @static
     * @param {IProto_GUIContext=} [properties] Properties to set
     * @returns {Proto_GUIContext} Proto_GUIContext instance
     */
    Proto_GUIContext.create = function create(properties) {
        return new Proto_GUIContext(properties);
    };

    /**
     * Encodes the specified Proto_GUIContext message. Does not implicitly {@link Proto_GUIContext.verify|verify} messages.
     * @function encode
     * @memberof Proto_GUIContext
     * @static
     * @param {IProto_GUIContext} message Proto_GUIContext message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUIContext.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.WindowIndex != null && Object.hasOwnProperty.call(message, "WindowIndex"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.WindowIndex);
        if (message.WSName != null && Object.hasOwnProperty.call(message, "WSName"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.WSName);
        if (message.PresetName != null && Object.hasOwnProperty.call(message, "PresetName"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.PresetName);
        if (message.GroupPresetName != null && Object.hasOwnProperty.call(message, "GroupPresetName"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.GroupPresetName);
        if (message.GUIParameterObjectReferenceIDWithCN != null && Object.hasOwnProperty.call(message, "GUIParameterObjectReferenceIDWithCN"))
            $root.Proto_ReferenceIDWithCN.encode(message.GUIParameterObjectReferenceIDWithCN, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_GUIContext message, length delimited. Does not implicitly {@link Proto_GUIContext.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GUIContext
     * @static
     * @param {IProto_GUIContext} message Proto_GUIContext message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUIContext.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GUIContext message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GUIContext
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GUIContext} Proto_GUIContext
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUIContext.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GUIContext();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.WindowIndex = reader.int32();
                break;
            case 2:
                message.WSName = reader.bytes();
                break;
            case 3:
                message.PresetName = reader.bytes();
                break;
            case 4:
                message.GroupPresetName = reader.bytes();
                break;
            case 10:
                message.GUIParameterObjectReferenceIDWithCN = $root.Proto_ReferenceIDWithCN.decode(reader, reader.uint32());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GUIContext message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GUIContext
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GUIContext} Proto_GUIContext
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUIContext.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GUIContext message.
     * @function verify
     * @memberof Proto_GUIContext
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GUIContext.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.WindowIndex != null && message.hasOwnProperty("WindowIndex"))
            if (!$util.isInteger(message.WindowIndex))
                return "WindowIndex: integer expected";
        if (message.WSName != null && message.hasOwnProperty("WSName"))
            if (!(message.WSName && typeof message.WSName.length === "number" || $util.isString(message.WSName)))
                return "WSName: buffer expected";
        if (message.PresetName != null && message.hasOwnProperty("PresetName"))
            if (!(message.PresetName && typeof message.PresetName.length === "number" || $util.isString(message.PresetName)))
                return "PresetName: buffer expected";
        if (message.GroupPresetName != null && message.hasOwnProperty("GroupPresetName"))
            if (!(message.GroupPresetName && typeof message.GroupPresetName.length === "number" || $util.isString(message.GroupPresetName)))
                return "GroupPresetName: buffer expected";
        if (message.GUIParameterObjectReferenceIDWithCN != null && message.hasOwnProperty("GUIParameterObjectReferenceIDWithCN")) {
            var error = $root.Proto_ReferenceIDWithCN.verify(message.GUIParameterObjectReferenceIDWithCN);
            if (error)
                return "GUIParameterObjectReferenceIDWithCN." + error;
        }
        return null;
    };

    /**
     * Creates a Proto_GUIContext message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GUIContext
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GUIContext} Proto_GUIContext
     */
    Proto_GUIContext.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GUIContext)
            return object;
        var message = new $root.Proto_GUIContext();
        if (object.WindowIndex != null)
            message.WindowIndex = object.WindowIndex | 0;
        if (object.WSName != null)
            if (typeof object.WSName === "string")
                $util.base64.decode(object.WSName, message.WSName = $util.newBuffer($util.base64.length(object.WSName)), 0);
            else if (object.WSName.length)
                message.WSName = object.WSName;
        if (object.PresetName != null)
            if (typeof object.PresetName === "string")
                $util.base64.decode(object.PresetName, message.PresetName = $util.newBuffer($util.base64.length(object.PresetName)), 0);
            else if (object.PresetName.length)
                message.PresetName = object.PresetName;
        if (object.GroupPresetName != null)
            if (typeof object.GroupPresetName === "string")
                $util.base64.decode(object.GroupPresetName, message.GroupPresetName = $util.newBuffer($util.base64.length(object.GroupPresetName)), 0);
            else if (object.GroupPresetName.length)
                message.GroupPresetName = object.GroupPresetName;
        if (object.GUIParameterObjectReferenceIDWithCN != null) {
            if (typeof object.GUIParameterObjectReferenceIDWithCN !== "object")
                throw TypeError(".Proto_GUIContext.GUIParameterObjectReferenceIDWithCN: object expected");
            message.GUIParameterObjectReferenceIDWithCN = $root.Proto_ReferenceIDWithCN.fromObject(object.GUIParameterObjectReferenceIDWithCN);
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_GUIContext message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GUIContext
     * @static
     * @param {Proto_GUIContext} message Proto_GUIContext
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GUIContext.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.WindowIndex = 0;
            if (options.bytes === String)
                object.WSName = "";
            else {
                object.WSName = [];
                if (options.bytes !== Array)
                    object.WSName = $util.newBuffer(object.WSName);
            }
            if (options.bytes === String)
                object.PresetName = "";
            else {
                object.PresetName = [];
                if (options.bytes !== Array)
                    object.PresetName = $util.newBuffer(object.PresetName);
            }
            if (options.bytes === String)
                object.GroupPresetName = "";
            else {
                object.GroupPresetName = [];
                if (options.bytes !== Array)
                    object.GroupPresetName = $util.newBuffer(object.GroupPresetName);
            }
            object.GUIParameterObjectReferenceIDWithCN = null;
        }
        if (message.WindowIndex != null && message.hasOwnProperty("WindowIndex"))
            object.WindowIndex = message.WindowIndex;
        if (message.WSName != null && message.hasOwnProperty("WSName"))
            object.WSName = options.bytes === String ? $util.base64.encode(message.WSName, 0, message.WSName.length) : options.bytes === Array ? Array.prototype.slice.call(message.WSName) : message.WSName;
        if (message.PresetName != null && message.hasOwnProperty("PresetName"))
            object.PresetName = options.bytes === String ? $util.base64.encode(message.PresetName, 0, message.PresetName.length) : options.bytes === Array ? Array.prototype.slice.call(message.PresetName) : message.PresetName;
        if (message.GroupPresetName != null && message.hasOwnProperty("GroupPresetName"))
            object.GroupPresetName = options.bytes === String ? $util.base64.encode(message.GroupPresetName, 0, message.GroupPresetName.length) : options.bytes === Array ? Array.prototype.slice.call(message.GroupPresetName) : message.GroupPresetName;
        if (message.GUIParameterObjectReferenceIDWithCN != null && message.hasOwnProperty("GUIParameterObjectReferenceIDWithCN"))
            object.GUIParameterObjectReferenceIDWithCN = $root.Proto_ReferenceIDWithCN.toObject(message.GUIParameterObjectReferenceIDWithCN, options);
        return object;
    };

    /**
     * Converts this Proto_GUIContext to JSON.
     * @function toJSON
     * @memberof Proto_GUIContext
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GUIContext.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GUIContext;
})();

$root.Proto_ReferenceIDWithCN = (function() {

    /**
     * Properties of a Proto_ReferenceIDWithCN.
     * @exports IProto_ReferenceIDWithCN
     * @interface IProto_ReferenceIDWithCN
     * @property {Uint8Array|null} [ClassName] Proto_ReferenceIDWithCN ClassName
     * @property {number|Long|null} [ReferenceID] Proto_ReferenceIDWithCN ReferenceID
     * @property {number|Long|null} [DBID] Proto_ReferenceIDWithCN DBID
     */

    /**
     * Constructs a new Proto_ReferenceIDWithCN.
     * @exports Proto_ReferenceIDWithCN
     * @classdesc Represents a Proto_ReferenceIDWithCN.
     * @implements IProto_ReferenceIDWithCN
     * @constructor
     * @param {IProto_ReferenceIDWithCN=} [properties] Properties to set
     */
    function Proto_ReferenceIDWithCN(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ReferenceIDWithCN ClassName.
     * @member {Uint8Array} ClassName
     * @memberof Proto_ReferenceIDWithCN
     * @instance
     */
    Proto_ReferenceIDWithCN.prototype.ClassName = $util.newBuffer([]);

    /**
     * Proto_ReferenceIDWithCN ReferenceID.
     * @member {number|Long} ReferenceID
     * @memberof Proto_ReferenceIDWithCN
     * @instance
     */
    Proto_ReferenceIDWithCN.prototype.ReferenceID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ReferenceIDWithCN DBID.
     * @member {number|Long} DBID
     * @memberof Proto_ReferenceIDWithCN
     * @instance
     */
    Proto_ReferenceIDWithCN.prototype.DBID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Creates a new Proto_ReferenceIDWithCN instance using the specified properties.
     * @function create
     * @memberof Proto_ReferenceIDWithCN
     * @static
     * @param {IProto_ReferenceIDWithCN=} [properties] Properties to set
     * @returns {Proto_ReferenceIDWithCN} Proto_ReferenceIDWithCN instance
     */
    Proto_ReferenceIDWithCN.create = function create(properties) {
        return new Proto_ReferenceIDWithCN(properties);
    };

    /**
     * Encodes the specified Proto_ReferenceIDWithCN message. Does not implicitly {@link Proto_ReferenceIDWithCN.verify|verify} messages.
     * @function encode
     * @memberof Proto_ReferenceIDWithCN
     * @static
     * @param {IProto_ReferenceIDWithCN} message Proto_ReferenceIDWithCN message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReferenceIDWithCN.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ClassName != null && Object.hasOwnProperty.call(message, "ClassName"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.ClassName);
        if (message.ReferenceID != null && Object.hasOwnProperty.call(message, "ReferenceID"))
            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.ReferenceID);
        if (message.DBID != null && Object.hasOwnProperty.call(message, "DBID"))
            writer.uint32(/* id 6, wireType 0 =*/48).int64(message.DBID);
        return writer;
    };

    /**
     * Encodes the specified Proto_ReferenceIDWithCN message, length delimited. Does not implicitly {@link Proto_ReferenceIDWithCN.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ReferenceIDWithCN
     * @static
     * @param {IProto_ReferenceIDWithCN} message Proto_ReferenceIDWithCN message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReferenceIDWithCN.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ReferenceIDWithCN message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ReferenceIDWithCN
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ReferenceIDWithCN} Proto_ReferenceIDWithCN
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReferenceIDWithCN.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ReferenceIDWithCN();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 4:
                message.ClassName = reader.bytes();
                break;
            case 5:
                message.ReferenceID = reader.int64();
                break;
            case 6:
                message.DBID = reader.int64();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ReferenceIDWithCN message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ReferenceIDWithCN
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ReferenceIDWithCN} Proto_ReferenceIDWithCN
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReferenceIDWithCN.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ReferenceIDWithCN message.
     * @function verify
     * @memberof Proto_ReferenceIDWithCN
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ReferenceIDWithCN.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            if (!(message.ClassName && typeof message.ClassName.length === "number" || $util.isString(message.ClassName)))
                return "ClassName: buffer expected";
        if (message.ReferenceID != null && message.hasOwnProperty("ReferenceID"))
            if (!$util.isInteger(message.ReferenceID) && !(message.ReferenceID && $util.isInteger(message.ReferenceID.low) && $util.isInteger(message.ReferenceID.high)))
                return "ReferenceID: integer|Long expected";
        if (message.DBID != null && message.hasOwnProperty("DBID"))
            if (!$util.isInteger(message.DBID) && !(message.DBID && $util.isInteger(message.DBID.low) && $util.isInteger(message.DBID.high)))
                return "DBID: integer|Long expected";
        return null;
    };

    /**
     * Creates a Proto_ReferenceIDWithCN message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ReferenceIDWithCN
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ReferenceIDWithCN} Proto_ReferenceIDWithCN
     */
    Proto_ReferenceIDWithCN.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ReferenceIDWithCN)
            return object;
        var message = new $root.Proto_ReferenceIDWithCN();
        if (object.ClassName != null)
            if (typeof object.ClassName === "string")
                $util.base64.decode(object.ClassName, message.ClassName = $util.newBuffer($util.base64.length(object.ClassName)), 0);
            else if (object.ClassName.length)
                message.ClassName = object.ClassName;
        if (object.ReferenceID != null)
            if ($util.Long)
                (message.ReferenceID = $util.Long.fromValue(object.ReferenceID)).unsigned = false;
            else if (typeof object.ReferenceID === "string")
                message.ReferenceID = parseInt(object.ReferenceID, 10);
            else if (typeof object.ReferenceID === "number")
                message.ReferenceID = object.ReferenceID;
            else if (typeof object.ReferenceID === "object")
                message.ReferenceID = new $util.LongBits(object.ReferenceID.low >>> 0, object.ReferenceID.high >>> 0).toNumber();
        if (object.DBID != null)
            if ($util.Long)
                (message.DBID = $util.Long.fromValue(object.DBID)).unsigned = false;
            else if (typeof object.DBID === "string")
                message.DBID = parseInt(object.DBID, 10);
            else if (typeof object.DBID === "number")
                message.DBID = object.DBID;
            else if (typeof object.DBID === "object")
                message.DBID = new $util.LongBits(object.DBID.low >>> 0, object.DBID.high >>> 0).toNumber();
        return message;
    };

    /**
     * Creates a plain object from a Proto_ReferenceIDWithCN message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ReferenceIDWithCN
     * @static
     * @param {Proto_ReferenceIDWithCN} message Proto_ReferenceIDWithCN
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ReferenceIDWithCN.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ClassName = "";
            else {
                object.ClassName = [];
                if (options.bytes !== Array)
                    object.ClassName = $util.newBuffer(object.ClassName);
            }
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.ReferenceID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.ReferenceID = options.longs === String ? "0" : 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.DBID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.DBID = options.longs === String ? "0" : 0;
        }
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            object.ClassName = options.bytes === String ? $util.base64.encode(message.ClassName, 0, message.ClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ClassName) : message.ClassName;
        if (message.ReferenceID != null && message.hasOwnProperty("ReferenceID"))
            if (typeof message.ReferenceID === "number")
                object.ReferenceID = options.longs === String ? String(message.ReferenceID) : message.ReferenceID;
            else
                object.ReferenceID = options.longs === String ? $util.Long.prototype.toString.call(message.ReferenceID) : options.longs === Number ? new $util.LongBits(message.ReferenceID.low >>> 0, message.ReferenceID.high >>> 0).toNumber() : message.ReferenceID;
        if (message.DBID != null && message.hasOwnProperty("DBID"))
            if (typeof message.DBID === "number")
                object.DBID = options.longs === String ? String(message.DBID) : message.DBID;
            else
                object.DBID = options.longs === String ? $util.Long.prototype.toString.call(message.DBID) : options.longs === Number ? new $util.LongBits(message.DBID.low >>> 0, message.DBID.high >>> 0).toNumber() : message.DBID;
        return object;
    };

    /**
     * Converts this Proto_ReferenceIDWithCN to JSON.
     * @function toJSON
     * @memberof Proto_ReferenceIDWithCN
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ReferenceIDWithCN.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ReferenceIDWithCN;
})();

$root.Proto_ProductTour = (function() {

    /**
     * Properties of a Proto_ProductTour.
     * @exports IProto_ProductTour
     * @interface IProto_ProductTour
     * @property {Uint8Array|null} [ProductTourName] Proto_ProductTour ProductTourName
     * @property {Uint8Array|null} [ContextCode] Proto_ProductTour ContextCode
     * @property {number|null} [TourActivationType] Proto_ProductTour TourActivationType
     * @property {number|null} [TourDisplayType] Proto_ProductTour TourDisplayType
     * @property {number|null} [ProductTourLastStepIndex] Proto_ProductTour ProductTourLastStepIndex
     * @property {number|null} [ProductTourState] Proto_ProductTour ProductTourState
     * @property {Array.<IProto_ProductTourStep>|null} [ProductTourStep] Proto_ProductTour ProductTourStep
     */

    /**
     * Constructs a new Proto_ProductTour.
     * @exports Proto_ProductTour
     * @classdesc Represents a Proto_ProductTour.
     * @implements IProto_ProductTour
     * @constructor
     * @param {IProto_ProductTour=} [properties] Properties to set
     */
    function Proto_ProductTour(properties) {
        this.ProductTourStep = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ProductTour ProductTourName.
     * @member {Uint8Array} ProductTourName
     * @memberof Proto_ProductTour
     * @instance
     */
    Proto_ProductTour.prototype.ProductTourName = $util.newBuffer([]);

    /**
     * Proto_ProductTour ContextCode.
     * @member {Uint8Array} ContextCode
     * @memberof Proto_ProductTour
     * @instance
     */
    Proto_ProductTour.prototype.ContextCode = $util.newBuffer([]);

    /**
     * Proto_ProductTour TourActivationType.
     * @member {number} TourActivationType
     * @memberof Proto_ProductTour
     * @instance
     */
    Proto_ProductTour.prototype.TourActivationType = 0;

    /**
     * Proto_ProductTour TourDisplayType.
     * @member {number} TourDisplayType
     * @memberof Proto_ProductTour
     * @instance
     */
    Proto_ProductTour.prototype.TourDisplayType = 0;

    /**
     * Proto_ProductTour ProductTourLastStepIndex.
     * @member {number} ProductTourLastStepIndex
     * @memberof Proto_ProductTour
     * @instance
     */
    Proto_ProductTour.prototype.ProductTourLastStepIndex = 0;

    /**
     * Proto_ProductTour ProductTourState.
     * @member {number} ProductTourState
     * @memberof Proto_ProductTour
     * @instance
     */
    Proto_ProductTour.prototype.ProductTourState = 0;

    /**
     * Proto_ProductTour ProductTourStep.
     * @member {Array.<IProto_ProductTourStep>} ProductTourStep
     * @memberof Proto_ProductTour
     * @instance
     */
    Proto_ProductTour.prototype.ProductTourStep = $util.emptyArray;

    /**
     * Creates a new Proto_ProductTour instance using the specified properties.
     * @function create
     * @memberof Proto_ProductTour
     * @static
     * @param {IProto_ProductTour=} [properties] Properties to set
     * @returns {Proto_ProductTour} Proto_ProductTour instance
     */
    Proto_ProductTour.create = function create(properties) {
        return new Proto_ProductTour(properties);
    };

    /**
     * Encodes the specified Proto_ProductTour message. Does not implicitly {@link Proto_ProductTour.verify|verify} messages.
     * @function encode
     * @memberof Proto_ProductTour
     * @static
     * @param {IProto_ProductTour} message Proto_ProductTour message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ProductTour.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ProductTourName != null && Object.hasOwnProperty.call(message, "ProductTourName"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ProductTourName);
        if (message.ContextCode != null && Object.hasOwnProperty.call(message, "ContextCode"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.ContextCode);
        if (message.TourActivationType != null && Object.hasOwnProperty.call(message, "TourActivationType"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.TourActivationType);
        if (message.TourDisplayType != null && Object.hasOwnProperty.call(message, "TourDisplayType"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.TourDisplayType);
        if (message.ProductTourLastStepIndex != null && Object.hasOwnProperty.call(message, "ProductTourLastStepIndex"))
            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.ProductTourLastStepIndex);
        if (message.ProductTourState != null && Object.hasOwnProperty.call(message, "ProductTourState"))
            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.ProductTourState);
        if (message.ProductTourStep != null && message.ProductTourStep.length)
            for (var i = 0; i < message.ProductTourStep.length; ++i)
                $root.Proto_ProductTourStep.encode(message.ProductTourStep[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_ProductTour message, length delimited. Does not implicitly {@link Proto_ProductTour.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ProductTour
     * @static
     * @param {IProto_ProductTour} message Proto_ProductTour message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ProductTour.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ProductTour message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ProductTour
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ProductTour} Proto_ProductTour
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ProductTour.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ProductTour();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ProductTourName = reader.bytes();
                break;
            case 2:
                message.ContextCode = reader.bytes();
                break;
            case 3:
                message.TourActivationType = reader.int32();
                break;
            case 4:
                message.TourDisplayType = reader.int32();
                break;
            case 5:
                message.ProductTourLastStepIndex = reader.int32();
                break;
            case 6:
                message.ProductTourState = reader.int32();
                break;
            case 10:
                if (!(message.ProductTourStep && message.ProductTourStep.length))
                    message.ProductTourStep = [];
                message.ProductTourStep.push($root.Proto_ProductTourStep.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ProductTour message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ProductTour
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ProductTour} Proto_ProductTour
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ProductTour.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ProductTour message.
     * @function verify
     * @memberof Proto_ProductTour
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ProductTour.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ProductTourName != null && message.hasOwnProperty("ProductTourName"))
            if (!(message.ProductTourName && typeof message.ProductTourName.length === "number" || $util.isString(message.ProductTourName)))
                return "ProductTourName: buffer expected";
        if (message.ContextCode != null && message.hasOwnProperty("ContextCode"))
            if (!(message.ContextCode && typeof message.ContextCode.length === "number" || $util.isString(message.ContextCode)))
                return "ContextCode: buffer expected";
        if (message.TourActivationType != null && message.hasOwnProperty("TourActivationType"))
            if (!$util.isInteger(message.TourActivationType))
                return "TourActivationType: integer expected";
        if (message.TourDisplayType != null && message.hasOwnProperty("TourDisplayType"))
            if (!$util.isInteger(message.TourDisplayType))
                return "TourDisplayType: integer expected";
        if (message.ProductTourLastStepIndex != null && message.hasOwnProperty("ProductTourLastStepIndex"))
            if (!$util.isInteger(message.ProductTourLastStepIndex))
                return "ProductTourLastStepIndex: integer expected";
        if (message.ProductTourState != null && message.hasOwnProperty("ProductTourState"))
            if (!$util.isInteger(message.ProductTourState))
                return "ProductTourState: integer expected";
        if (message.ProductTourStep != null && message.hasOwnProperty("ProductTourStep")) {
            if (!Array.isArray(message.ProductTourStep))
                return "ProductTourStep: array expected";
            for (var i = 0; i < message.ProductTourStep.length; ++i) {
                var error = $root.Proto_ProductTourStep.verify(message.ProductTourStep[i]);
                if (error)
                    return "ProductTourStep." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_ProductTour message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ProductTour
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ProductTour} Proto_ProductTour
     */
    Proto_ProductTour.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ProductTour)
            return object;
        var message = new $root.Proto_ProductTour();
        if (object.ProductTourName != null)
            if (typeof object.ProductTourName === "string")
                $util.base64.decode(object.ProductTourName, message.ProductTourName = $util.newBuffer($util.base64.length(object.ProductTourName)), 0);
            else if (object.ProductTourName.length)
                message.ProductTourName = object.ProductTourName;
        if (object.ContextCode != null)
            if (typeof object.ContextCode === "string")
                $util.base64.decode(object.ContextCode, message.ContextCode = $util.newBuffer($util.base64.length(object.ContextCode)), 0);
            else if (object.ContextCode.length)
                message.ContextCode = object.ContextCode;
        if (object.TourActivationType != null)
            message.TourActivationType = object.TourActivationType | 0;
        if (object.TourDisplayType != null)
            message.TourDisplayType = object.TourDisplayType | 0;
        if (object.ProductTourLastStepIndex != null)
            message.ProductTourLastStepIndex = object.ProductTourLastStepIndex | 0;
        if (object.ProductTourState != null)
            message.ProductTourState = object.ProductTourState | 0;
        if (object.ProductTourStep) {
            if (!Array.isArray(object.ProductTourStep))
                throw TypeError(".Proto_ProductTour.ProductTourStep: array expected");
            message.ProductTourStep = [];
            for (var i = 0; i < object.ProductTourStep.length; ++i) {
                if (typeof object.ProductTourStep[i] !== "object")
                    throw TypeError(".Proto_ProductTour.ProductTourStep: object expected");
                message.ProductTourStep[i] = $root.Proto_ProductTourStep.fromObject(object.ProductTourStep[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_ProductTour message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ProductTour
     * @static
     * @param {Proto_ProductTour} message Proto_ProductTour
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ProductTour.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.ProductTourStep = [];
        if (options.defaults) {
            if (options.bytes === String)
                object.ProductTourName = "";
            else {
                object.ProductTourName = [];
                if (options.bytes !== Array)
                    object.ProductTourName = $util.newBuffer(object.ProductTourName);
            }
            if (options.bytes === String)
                object.ContextCode = "";
            else {
                object.ContextCode = [];
                if (options.bytes !== Array)
                    object.ContextCode = $util.newBuffer(object.ContextCode);
            }
            object.TourActivationType = 0;
            object.TourDisplayType = 0;
            object.ProductTourLastStepIndex = 0;
            object.ProductTourState = 0;
        }
        if (message.ProductTourName != null && message.hasOwnProperty("ProductTourName"))
            object.ProductTourName = options.bytes === String ? $util.base64.encode(message.ProductTourName, 0, message.ProductTourName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProductTourName) : message.ProductTourName;
        if (message.ContextCode != null && message.hasOwnProperty("ContextCode"))
            object.ContextCode = options.bytes === String ? $util.base64.encode(message.ContextCode, 0, message.ContextCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ContextCode) : message.ContextCode;
        if (message.TourActivationType != null && message.hasOwnProperty("TourActivationType"))
            object.TourActivationType = message.TourActivationType;
        if (message.TourDisplayType != null && message.hasOwnProperty("TourDisplayType"))
            object.TourDisplayType = message.TourDisplayType;
        if (message.ProductTourLastStepIndex != null && message.hasOwnProperty("ProductTourLastStepIndex"))
            object.ProductTourLastStepIndex = message.ProductTourLastStepIndex;
        if (message.ProductTourState != null && message.hasOwnProperty("ProductTourState"))
            object.ProductTourState = message.ProductTourState;
        if (message.ProductTourStep && message.ProductTourStep.length) {
            object.ProductTourStep = [];
            for (var j = 0; j < message.ProductTourStep.length; ++j)
                object.ProductTourStep[j] = $root.Proto_ProductTourStep.toObject(message.ProductTourStep[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_ProductTour to JSON.
     * @function toJSON
     * @memberof Proto_ProductTour
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ProductTour.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ProductTour;
})();

$root.Proto_ProductTourStep = (function() {

    /**
     * Properties of a Proto_ProductTourStep.
     * @exports IProto_ProductTourStep
     * @interface IProto_ProductTourStep
     * @property {number|null} [ProductTourStepIndex] Proto_ProductTourStep ProductTourStepIndex
     * @property {Uint8Array|null} [GUIElementCode] Proto_ProductTourStep GUIElementCode
     * @property {Uint8Array|null} [HelpURL] Proto_ProductTourStep HelpURL
     */

    /**
     * Constructs a new Proto_ProductTourStep.
     * @exports Proto_ProductTourStep
     * @classdesc Represents a Proto_ProductTourStep.
     * @implements IProto_ProductTourStep
     * @constructor
     * @param {IProto_ProductTourStep=} [properties] Properties to set
     */
    function Proto_ProductTourStep(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ProductTourStep ProductTourStepIndex.
     * @member {number} ProductTourStepIndex
     * @memberof Proto_ProductTourStep
     * @instance
     */
    Proto_ProductTourStep.prototype.ProductTourStepIndex = 0;

    /**
     * Proto_ProductTourStep GUIElementCode.
     * @member {Uint8Array} GUIElementCode
     * @memberof Proto_ProductTourStep
     * @instance
     */
    Proto_ProductTourStep.prototype.GUIElementCode = $util.newBuffer([]);

    /**
     * Proto_ProductTourStep HelpURL.
     * @member {Uint8Array} HelpURL
     * @memberof Proto_ProductTourStep
     * @instance
     */
    Proto_ProductTourStep.prototype.HelpURL = $util.newBuffer([]);

    /**
     * Creates a new Proto_ProductTourStep instance using the specified properties.
     * @function create
     * @memberof Proto_ProductTourStep
     * @static
     * @param {IProto_ProductTourStep=} [properties] Properties to set
     * @returns {Proto_ProductTourStep} Proto_ProductTourStep instance
     */
    Proto_ProductTourStep.create = function create(properties) {
        return new Proto_ProductTourStep(properties);
    };

    /**
     * Encodes the specified Proto_ProductTourStep message. Does not implicitly {@link Proto_ProductTourStep.verify|verify} messages.
     * @function encode
     * @memberof Proto_ProductTourStep
     * @static
     * @param {IProto_ProductTourStep} message Proto_ProductTourStep message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ProductTourStep.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ProductTourStepIndex != null && Object.hasOwnProperty.call(message, "ProductTourStepIndex"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ProductTourStepIndex);
        if (message.GUIElementCode != null && Object.hasOwnProperty.call(message, "GUIElementCode"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.GUIElementCode);
        if (message.HelpURL != null && Object.hasOwnProperty.call(message, "HelpURL"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.HelpURL);
        return writer;
    };

    /**
     * Encodes the specified Proto_ProductTourStep message, length delimited. Does not implicitly {@link Proto_ProductTourStep.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ProductTourStep
     * @static
     * @param {IProto_ProductTourStep} message Proto_ProductTourStep message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ProductTourStep.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ProductTourStep message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ProductTourStep
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ProductTourStep} Proto_ProductTourStep
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ProductTourStep.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ProductTourStep();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ProductTourStepIndex = reader.int32();
                break;
            case 2:
                message.GUIElementCode = reader.bytes();
                break;
            case 3:
                message.HelpURL = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ProductTourStep message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ProductTourStep
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ProductTourStep} Proto_ProductTourStep
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ProductTourStep.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ProductTourStep message.
     * @function verify
     * @memberof Proto_ProductTourStep
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ProductTourStep.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ProductTourStepIndex != null && message.hasOwnProperty("ProductTourStepIndex"))
            if (!$util.isInteger(message.ProductTourStepIndex))
                return "ProductTourStepIndex: integer expected";
        if (message.GUIElementCode != null && message.hasOwnProperty("GUIElementCode"))
            if (!(message.GUIElementCode && typeof message.GUIElementCode.length === "number" || $util.isString(message.GUIElementCode)))
                return "GUIElementCode: buffer expected";
        if (message.HelpURL != null && message.hasOwnProperty("HelpURL"))
            if (!(message.HelpURL && typeof message.HelpURL.length === "number" || $util.isString(message.HelpURL)))
                return "HelpURL: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_ProductTourStep message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ProductTourStep
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ProductTourStep} Proto_ProductTourStep
     */
    Proto_ProductTourStep.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ProductTourStep)
            return object;
        var message = new $root.Proto_ProductTourStep();
        if (object.ProductTourStepIndex != null)
            message.ProductTourStepIndex = object.ProductTourStepIndex | 0;
        if (object.GUIElementCode != null)
            if (typeof object.GUIElementCode === "string")
                $util.base64.decode(object.GUIElementCode, message.GUIElementCode = $util.newBuffer($util.base64.length(object.GUIElementCode)), 0);
            else if (object.GUIElementCode.length)
                message.GUIElementCode = object.GUIElementCode;
        if (object.HelpURL != null)
            if (typeof object.HelpURL === "string")
                $util.base64.decode(object.HelpURL, message.HelpURL = $util.newBuffer($util.base64.length(object.HelpURL)), 0);
            else if (object.HelpURL.length)
                message.HelpURL = object.HelpURL;
        return message;
    };

    /**
     * Creates a plain object from a Proto_ProductTourStep message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ProductTourStep
     * @static
     * @param {Proto_ProductTourStep} message Proto_ProductTourStep
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ProductTourStep.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.ProductTourStepIndex = 0;
            if (options.bytes === String)
                object.GUIElementCode = "";
            else {
                object.GUIElementCode = [];
                if (options.bytes !== Array)
                    object.GUIElementCode = $util.newBuffer(object.GUIElementCode);
            }
            if (options.bytes === String)
                object.HelpURL = "";
            else {
                object.HelpURL = [];
                if (options.bytes !== Array)
                    object.HelpURL = $util.newBuffer(object.HelpURL);
            }
        }
        if (message.ProductTourStepIndex != null && message.hasOwnProperty("ProductTourStepIndex"))
            object.ProductTourStepIndex = message.ProductTourStepIndex;
        if (message.GUIElementCode != null && message.hasOwnProperty("GUIElementCode"))
            object.GUIElementCode = options.bytes === String ? $util.base64.encode(message.GUIElementCode, 0, message.GUIElementCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.GUIElementCode) : message.GUIElementCode;
        if (message.HelpURL != null && message.hasOwnProperty("HelpURL"))
            object.HelpURL = options.bytes === String ? $util.base64.encode(message.HelpURL, 0, message.HelpURL.length) : options.bytes === Array ? Array.prototype.slice.call(message.HelpURL) : message.HelpURL;
        return object;
    };

    /**
     * Converts this Proto_ProductTourStep to JSON.
     * @function toJSON
     * @memberof Proto_ProductTourStep
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ProductTourStep.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ProductTourStep;
})();

$root.Proto_CyclicSessionGivenCT = (function() {

    /**
     * Properties of a Proto_CyclicSessionGivenCT.
     * @exports IProto_CyclicSessionGivenCT
     * @interface IProto_CyclicSessionGivenCT
     * @property {Uint8Array|null} [ProcessCode] Proto_CyclicSessionGivenCT ProcessCode
     * @property {number|Long|null} [CalendarTime] Proto_CyclicSessionGivenCT CalendarTime
     */

    /**
     * Constructs a new Proto_CyclicSessionGivenCT.
     * @exports Proto_CyclicSessionGivenCT
     * @classdesc Represents a Proto_CyclicSessionGivenCT.
     * @implements IProto_CyclicSessionGivenCT
     * @constructor
     * @param {IProto_CyclicSessionGivenCT=} [properties] Properties to set
     */
    function Proto_CyclicSessionGivenCT(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_CyclicSessionGivenCT ProcessCode.
     * @member {Uint8Array} ProcessCode
     * @memberof Proto_CyclicSessionGivenCT
     * @instance
     */
    Proto_CyclicSessionGivenCT.prototype.ProcessCode = $util.newBuffer([]);

    /**
     * Proto_CyclicSessionGivenCT CalendarTime.
     * @member {number|Long} CalendarTime
     * @memberof Proto_CyclicSessionGivenCT
     * @instance
     */
    Proto_CyclicSessionGivenCT.prototype.CalendarTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Creates a new Proto_CyclicSessionGivenCT instance using the specified properties.
     * @function create
     * @memberof Proto_CyclicSessionGivenCT
     * @static
     * @param {IProto_CyclicSessionGivenCT=} [properties] Properties to set
     * @returns {Proto_CyclicSessionGivenCT} Proto_CyclicSessionGivenCT instance
     */
    Proto_CyclicSessionGivenCT.create = function create(properties) {
        return new Proto_CyclicSessionGivenCT(properties);
    };

    /**
     * Encodes the specified Proto_CyclicSessionGivenCT message. Does not implicitly {@link Proto_CyclicSessionGivenCT.verify|verify} messages.
     * @function encode
     * @memberof Proto_CyclicSessionGivenCT
     * @static
     * @param {IProto_CyclicSessionGivenCT} message Proto_CyclicSessionGivenCT message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_CyclicSessionGivenCT.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ProcessCode != null && Object.hasOwnProperty.call(message, "ProcessCode"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ProcessCode);
        if (message.CalendarTime != null && Object.hasOwnProperty.call(message, "CalendarTime"))
            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.CalendarTime);
        return writer;
    };

    /**
     * Encodes the specified Proto_CyclicSessionGivenCT message, length delimited. Does not implicitly {@link Proto_CyclicSessionGivenCT.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_CyclicSessionGivenCT
     * @static
     * @param {IProto_CyclicSessionGivenCT} message Proto_CyclicSessionGivenCT message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_CyclicSessionGivenCT.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_CyclicSessionGivenCT message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_CyclicSessionGivenCT
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_CyclicSessionGivenCT} Proto_CyclicSessionGivenCT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_CyclicSessionGivenCT.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_CyclicSessionGivenCT();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ProcessCode = reader.bytes();
                break;
            case 2:
                message.CalendarTime = reader.int64();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_CyclicSessionGivenCT message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_CyclicSessionGivenCT
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_CyclicSessionGivenCT} Proto_CyclicSessionGivenCT
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_CyclicSessionGivenCT.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_CyclicSessionGivenCT message.
     * @function verify
     * @memberof Proto_CyclicSessionGivenCT
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_CyclicSessionGivenCT.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ProcessCode != null && message.hasOwnProperty("ProcessCode"))
            if (!(message.ProcessCode && typeof message.ProcessCode.length === "number" || $util.isString(message.ProcessCode)))
                return "ProcessCode: buffer expected";
        if (message.CalendarTime != null && message.hasOwnProperty("CalendarTime"))
            if (!$util.isInteger(message.CalendarTime) && !(message.CalendarTime && $util.isInteger(message.CalendarTime.low) && $util.isInteger(message.CalendarTime.high)))
                return "CalendarTime: integer|Long expected";
        return null;
    };

    /**
     * Creates a Proto_CyclicSessionGivenCT message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_CyclicSessionGivenCT
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_CyclicSessionGivenCT} Proto_CyclicSessionGivenCT
     */
    Proto_CyclicSessionGivenCT.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_CyclicSessionGivenCT)
            return object;
        var message = new $root.Proto_CyclicSessionGivenCT();
        if (object.ProcessCode != null)
            if (typeof object.ProcessCode === "string")
                $util.base64.decode(object.ProcessCode, message.ProcessCode = $util.newBuffer($util.base64.length(object.ProcessCode)), 0);
            else if (object.ProcessCode.length)
                message.ProcessCode = object.ProcessCode;
        if (object.CalendarTime != null)
            if ($util.Long)
                (message.CalendarTime = $util.Long.fromValue(object.CalendarTime)).unsigned = false;
            else if (typeof object.CalendarTime === "string")
                message.CalendarTime = parseInt(object.CalendarTime, 10);
            else if (typeof object.CalendarTime === "number")
                message.CalendarTime = object.CalendarTime;
            else if (typeof object.CalendarTime === "object")
                message.CalendarTime = new $util.LongBits(object.CalendarTime.low >>> 0, object.CalendarTime.high >>> 0).toNumber();
        return message;
    };

    /**
     * Creates a plain object from a Proto_CyclicSessionGivenCT message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_CyclicSessionGivenCT
     * @static
     * @param {Proto_CyclicSessionGivenCT} message Proto_CyclicSessionGivenCT
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_CyclicSessionGivenCT.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ProcessCode = "";
            else {
                object.ProcessCode = [];
                if (options.bytes !== Array)
                    object.ProcessCode = $util.newBuffer(object.ProcessCode);
            }
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.CalendarTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.CalendarTime = options.longs === String ? "0" : 0;
        }
        if (message.ProcessCode != null && message.hasOwnProperty("ProcessCode"))
            object.ProcessCode = options.bytes === String ? $util.base64.encode(message.ProcessCode, 0, message.ProcessCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProcessCode) : message.ProcessCode;
        if (message.CalendarTime != null && message.hasOwnProperty("CalendarTime"))
            if (typeof message.CalendarTime === "number")
                object.CalendarTime = options.longs === String ? String(message.CalendarTime) : message.CalendarTime;
            else
                object.CalendarTime = options.longs === String ? $util.Long.prototype.toString.call(message.CalendarTime) : options.longs === Number ? new $util.LongBits(message.CalendarTime.low >>> 0, message.CalendarTime.high >>> 0).toNumber() : message.CalendarTime;
        return object;
    };

    /**
     * Converts this Proto_CyclicSessionGivenCT to JSON.
     * @function toJSON
     * @memberof Proto_CyclicSessionGivenCT
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_CyclicSessionGivenCT.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_CyclicSessionGivenCT;
})();

$root.Proto_Session = (function() {

    /**
     * Properties of a Proto_Session.
     * @exports IProto_Session
     * @interface IProto_Session
     * @property {Uint8Array|null} [ContinuousSessionProcessCode] Proto_Session ContinuousSessionProcessCode
     * @property {IProto_CyclicSessionGivenCT|null} [CyclicSessionGivenCT] Proto_Session CyclicSessionGivenCT
     * @property {Uint8Array|null} [CyclicSessionCode] Proto_Session CyclicSessionCode
     * @property {Uint8Array|null} [LatestCyclicSessionProcessCode] Proto_Session LatestCyclicSessionProcessCode
     */

    /**
     * Constructs a new Proto_Session.
     * @exports Proto_Session
     * @classdesc Represents a Proto_Session.
     * @implements IProto_Session
     * @constructor
     * @param {IProto_Session=} [properties] Properties to set
     */
    function Proto_Session(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Session ContinuousSessionProcessCode.
     * @member {Uint8Array|null|undefined} ContinuousSessionProcessCode
     * @memberof Proto_Session
     * @instance
     */
    Proto_Session.prototype.ContinuousSessionProcessCode = null;

    /**
     * Proto_Session CyclicSessionGivenCT.
     * @member {IProto_CyclicSessionGivenCT|null|undefined} CyclicSessionGivenCT
     * @memberof Proto_Session
     * @instance
     */
    Proto_Session.prototype.CyclicSessionGivenCT = null;

    /**
     * Proto_Session CyclicSessionCode.
     * @member {Uint8Array|null|undefined} CyclicSessionCode
     * @memberof Proto_Session
     * @instance
     */
    Proto_Session.prototype.CyclicSessionCode = null;

    /**
     * Proto_Session LatestCyclicSessionProcessCode.
     * @member {Uint8Array|null|undefined} LatestCyclicSessionProcessCode
     * @memberof Proto_Session
     * @instance
     */
    Proto_Session.prototype.LatestCyclicSessionProcessCode = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_Session value.
     * @member {"ContinuousSessionProcessCode"|"CyclicSessionGivenCT"|"CyclicSessionCode"|"LatestCyclicSessionProcessCode"|undefined} value
     * @memberof Proto_Session
     * @instance
     */
    Object.defineProperty(Proto_Session.prototype, "value", {
        get: $util.oneOfGetter($oneOfFields = ["ContinuousSessionProcessCode", "CyclicSessionGivenCT", "CyclicSessionCode", "LatestCyclicSessionProcessCode"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_Session instance using the specified properties.
     * @function create
     * @memberof Proto_Session
     * @static
     * @param {IProto_Session=} [properties] Properties to set
     * @returns {Proto_Session} Proto_Session instance
     */
    Proto_Session.create = function create(properties) {
        return new Proto_Session(properties);
    };

    /**
     * Encodes the specified Proto_Session message. Does not implicitly {@link Proto_Session.verify|verify} messages.
     * @function encode
     * @memberof Proto_Session
     * @static
     * @param {IProto_Session} message Proto_Session message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Session.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ContinuousSessionProcessCode != null && Object.hasOwnProperty.call(message, "ContinuousSessionProcessCode"))
            writer.uint32(/* id 10, wireType 2 =*/82).bytes(message.ContinuousSessionProcessCode);
        if (message.CyclicSessionGivenCT != null && Object.hasOwnProperty.call(message, "CyclicSessionGivenCT"))
            $root.Proto_CyclicSessionGivenCT.encode(message.CyclicSessionGivenCT, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
        if (message.CyclicSessionCode != null && Object.hasOwnProperty.call(message, "CyclicSessionCode"))
            writer.uint32(/* id 12, wireType 2 =*/98).bytes(message.CyclicSessionCode);
        if (message.LatestCyclicSessionProcessCode != null && Object.hasOwnProperty.call(message, "LatestCyclicSessionProcessCode"))
            writer.uint32(/* id 13, wireType 2 =*/106).bytes(message.LatestCyclicSessionProcessCode);
        return writer;
    };

    /**
     * Encodes the specified Proto_Session message, length delimited. Does not implicitly {@link Proto_Session.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Session
     * @static
     * @param {IProto_Session} message Proto_Session message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Session.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Session message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Session
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Session} Proto_Session
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Session.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Session();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 10:
                message.ContinuousSessionProcessCode = reader.bytes();
                break;
            case 11:
                message.CyclicSessionGivenCT = $root.Proto_CyclicSessionGivenCT.decode(reader, reader.uint32());
                break;
            case 12:
                message.CyclicSessionCode = reader.bytes();
                break;
            case 13:
                message.LatestCyclicSessionProcessCode = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Session message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Session
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Session} Proto_Session
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Session.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Session message.
     * @function verify
     * @memberof Proto_Session
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Session.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.ContinuousSessionProcessCode != null && message.hasOwnProperty("ContinuousSessionProcessCode")) {
            properties.value = 1;
            if (!(message.ContinuousSessionProcessCode && typeof message.ContinuousSessionProcessCode.length === "number" || $util.isString(message.ContinuousSessionProcessCode)))
                return "ContinuousSessionProcessCode: buffer expected";
        }
        if (message.CyclicSessionGivenCT != null && message.hasOwnProperty("CyclicSessionGivenCT")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_CyclicSessionGivenCT.verify(message.CyclicSessionGivenCT);
                if (error)
                    return "CyclicSessionGivenCT." + error;
            }
        }
        if (message.CyclicSessionCode != null && message.hasOwnProperty("CyclicSessionCode")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!(message.CyclicSessionCode && typeof message.CyclicSessionCode.length === "number" || $util.isString(message.CyclicSessionCode)))
                return "CyclicSessionCode: buffer expected";
        }
        if (message.LatestCyclicSessionProcessCode != null && message.hasOwnProperty("LatestCyclicSessionProcessCode")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!(message.LatestCyclicSessionProcessCode && typeof message.LatestCyclicSessionProcessCode.length === "number" || $util.isString(message.LatestCyclicSessionProcessCode)))
                return "LatestCyclicSessionProcessCode: buffer expected";
        }
        return null;
    };

    /**
     * Creates a Proto_Session message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Session
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Session} Proto_Session
     */
    Proto_Session.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Session)
            return object;
        var message = new $root.Proto_Session();
        if (object.ContinuousSessionProcessCode != null)
            if (typeof object.ContinuousSessionProcessCode === "string")
                $util.base64.decode(object.ContinuousSessionProcessCode, message.ContinuousSessionProcessCode = $util.newBuffer($util.base64.length(object.ContinuousSessionProcessCode)), 0);
            else if (object.ContinuousSessionProcessCode.length)
                message.ContinuousSessionProcessCode = object.ContinuousSessionProcessCode;
        if (object.CyclicSessionGivenCT != null) {
            if (typeof object.CyclicSessionGivenCT !== "object")
                throw TypeError(".Proto_Session.CyclicSessionGivenCT: object expected");
            message.CyclicSessionGivenCT = $root.Proto_CyclicSessionGivenCT.fromObject(object.CyclicSessionGivenCT);
        }
        if (object.CyclicSessionCode != null)
            if (typeof object.CyclicSessionCode === "string")
                $util.base64.decode(object.CyclicSessionCode, message.CyclicSessionCode = $util.newBuffer($util.base64.length(object.CyclicSessionCode)), 0);
            else if (object.CyclicSessionCode.length)
                message.CyclicSessionCode = object.CyclicSessionCode;
        if (object.LatestCyclicSessionProcessCode != null)
            if (typeof object.LatestCyclicSessionProcessCode === "string")
                $util.base64.decode(object.LatestCyclicSessionProcessCode, message.LatestCyclicSessionProcessCode = $util.newBuffer($util.base64.length(object.LatestCyclicSessionProcessCode)), 0);
            else if (object.LatestCyclicSessionProcessCode.length)
                message.LatestCyclicSessionProcessCode = object.LatestCyclicSessionProcessCode;
        return message;
    };

    /**
     * Creates a plain object from a Proto_Session message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Session
     * @static
     * @param {Proto_Session} message Proto_Session
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Session.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (message.ContinuousSessionProcessCode != null && message.hasOwnProperty("ContinuousSessionProcessCode")) {
            object.ContinuousSessionProcessCode = options.bytes === String ? $util.base64.encode(message.ContinuousSessionProcessCode, 0, message.ContinuousSessionProcessCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ContinuousSessionProcessCode) : message.ContinuousSessionProcessCode;
            if (options.oneofs)
                object.value = "ContinuousSessionProcessCode";
        }
        if (message.CyclicSessionGivenCT != null && message.hasOwnProperty("CyclicSessionGivenCT")) {
            object.CyclicSessionGivenCT = $root.Proto_CyclicSessionGivenCT.toObject(message.CyclicSessionGivenCT, options);
            if (options.oneofs)
                object.value = "CyclicSessionGivenCT";
        }
        if (message.CyclicSessionCode != null && message.hasOwnProperty("CyclicSessionCode")) {
            object.CyclicSessionCode = options.bytes === String ? $util.base64.encode(message.CyclicSessionCode, 0, message.CyclicSessionCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.CyclicSessionCode) : message.CyclicSessionCode;
            if (options.oneofs)
                object.value = "CyclicSessionCode";
        }
        if (message.LatestCyclicSessionProcessCode != null && message.hasOwnProperty("LatestCyclicSessionProcessCode")) {
            object.LatestCyclicSessionProcessCode = options.bytes === String ? $util.base64.encode(message.LatestCyclicSessionProcessCode, 0, message.LatestCyclicSessionProcessCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.LatestCyclicSessionProcessCode) : message.LatestCyclicSessionProcessCode;
            if (options.oneofs)
                object.value = "LatestCyclicSessionProcessCode";
        }
        return object;
    };

    /**
     * Converts this Proto_Session to JSON.
     * @function toJSON
     * @memberof Proto_Session
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Session.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Session;
})();

$root.Proto_WhatifScenario = (function() {

    /**
     * Properties of a Proto_WhatifScenario.
     * @exports IProto_WhatifScenario
     * @interface IProto_WhatifScenario
     * @property {Uint8Array|null} [ScenarioCode] Proto_WhatifScenario ScenarioCode
     * @property {IProto_Session|null} [Session] Proto_WhatifScenario Session
     */

    /**
     * Constructs a new Proto_WhatifScenario.
     * @exports Proto_WhatifScenario
     * @classdesc Represents a Proto_WhatifScenario.
     * @implements IProto_WhatifScenario
     * @constructor
     * @param {IProto_WhatifScenario=} [properties] Properties to set
     */
    function Proto_WhatifScenario(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_WhatifScenario ScenarioCode.
     * @member {Uint8Array} ScenarioCode
     * @memberof Proto_WhatifScenario
     * @instance
     */
    Proto_WhatifScenario.prototype.ScenarioCode = $util.newBuffer([]);

    /**
     * Proto_WhatifScenario Session.
     * @member {IProto_Session|null|undefined} Session
     * @memberof Proto_WhatifScenario
     * @instance
     */
    Proto_WhatifScenario.prototype.Session = null;

    /**
     * Creates a new Proto_WhatifScenario instance using the specified properties.
     * @function create
     * @memberof Proto_WhatifScenario
     * @static
     * @param {IProto_WhatifScenario=} [properties] Properties to set
     * @returns {Proto_WhatifScenario} Proto_WhatifScenario instance
     */
    Proto_WhatifScenario.create = function create(properties) {
        return new Proto_WhatifScenario(properties);
    };

    /**
     * Encodes the specified Proto_WhatifScenario message. Does not implicitly {@link Proto_WhatifScenario.verify|verify} messages.
     * @function encode
     * @memberof Proto_WhatifScenario
     * @static
     * @param {IProto_WhatifScenario} message Proto_WhatifScenario message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_WhatifScenario.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ScenarioCode != null && Object.hasOwnProperty.call(message, "ScenarioCode"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ScenarioCode);
        if (message.Session != null && Object.hasOwnProperty.call(message, "Session"))
            $root.Proto_Session.encode(message.Session, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_WhatifScenario message, length delimited. Does not implicitly {@link Proto_WhatifScenario.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_WhatifScenario
     * @static
     * @param {IProto_WhatifScenario} message Proto_WhatifScenario message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_WhatifScenario.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_WhatifScenario message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_WhatifScenario
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_WhatifScenario} Proto_WhatifScenario
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_WhatifScenario.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_WhatifScenario();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ScenarioCode = reader.bytes();
                break;
            case 2:
                message.Session = $root.Proto_Session.decode(reader, reader.uint32());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_WhatifScenario message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_WhatifScenario
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_WhatifScenario} Proto_WhatifScenario
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_WhatifScenario.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_WhatifScenario message.
     * @function verify
     * @memberof Proto_WhatifScenario
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_WhatifScenario.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ScenarioCode != null && message.hasOwnProperty("ScenarioCode"))
            if (!(message.ScenarioCode && typeof message.ScenarioCode.length === "number" || $util.isString(message.ScenarioCode)))
                return "ScenarioCode: buffer expected";
        if (message.Session != null && message.hasOwnProperty("Session")) {
            var error = $root.Proto_Session.verify(message.Session);
            if (error)
                return "Session." + error;
        }
        return null;
    };

    /**
     * Creates a Proto_WhatifScenario message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_WhatifScenario
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_WhatifScenario} Proto_WhatifScenario
     */
    Proto_WhatifScenario.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_WhatifScenario)
            return object;
        var message = new $root.Proto_WhatifScenario();
        if (object.ScenarioCode != null)
            if (typeof object.ScenarioCode === "string")
                $util.base64.decode(object.ScenarioCode, message.ScenarioCode = $util.newBuffer($util.base64.length(object.ScenarioCode)), 0);
            else if (object.ScenarioCode.length)
                message.ScenarioCode = object.ScenarioCode;
        if (object.Session != null) {
            if (typeof object.Session !== "object")
                throw TypeError(".Proto_WhatifScenario.Session: object expected");
            message.Session = $root.Proto_Session.fromObject(object.Session);
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_WhatifScenario message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_WhatifScenario
     * @static
     * @param {Proto_WhatifScenario} message Proto_WhatifScenario
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_WhatifScenario.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ScenarioCode = "";
            else {
                object.ScenarioCode = [];
                if (options.bytes !== Array)
                    object.ScenarioCode = $util.newBuffer(object.ScenarioCode);
            }
            object.Session = null;
        }
        if (message.ScenarioCode != null && message.hasOwnProperty("ScenarioCode"))
            object.ScenarioCode = options.bytes === String ? $util.base64.encode(message.ScenarioCode, 0, message.ScenarioCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ScenarioCode) : message.ScenarioCode;
        if (message.Session != null && message.hasOwnProperty("Session"))
            object.Session = $root.Proto_Session.toObject(message.Session, options);
        return object;
    };

    /**
     * Converts this Proto_WhatifScenario to JSON.
     * @function toJSON
     * @memberof Proto_WhatifScenario
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_WhatifScenario.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_WhatifScenario;
})();

$root.Proto_ScenarioInfo = (function() {

    /**
     * Properties of a Proto_ScenarioInfo.
     * @exports IProto_ScenarioInfo
     * @interface IProto_ScenarioInfo
     * @property {number|null} [ScenarioID] Proto_ScenarioInfo ScenarioID
     * @property {number|null} [ScenarioType] Proto_ScenarioInfo ScenarioType
     * @property {number|null} [ProcessType] Proto_ScenarioInfo ProcessType
     * @property {Uint8Array|null} [ScenarioCode] Proto_ScenarioInfo ScenarioCode
     * @property {Uint8Array|null} [SessionCode] Proto_ScenarioInfo SessionCode
     * @property {Uint8Array|null} [ProcessCode] Proto_ScenarioInfo ProcessCode
     * @property {number|Long|null} [ScenarioDBID] Proto_ScenarioInfo ScenarioDBID
     * @property {number|Long|null} [SessionDBID] Proto_ScenarioInfo SessionDBID
     * @property {boolean|null} [CanEditOnScenario] Proto_ScenarioInfo CanEditOnScenario
     */

    /**
     * Constructs a new Proto_ScenarioInfo.
     * @exports Proto_ScenarioInfo
     * @classdesc Represents a Proto_ScenarioInfo.
     * @implements IProto_ScenarioInfo
     * @constructor
     * @param {IProto_ScenarioInfo=} [properties] Properties to set
     */
    function Proto_ScenarioInfo(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ScenarioInfo ScenarioID.
     * @member {number} ScenarioID
     * @memberof Proto_ScenarioInfo
     * @instance
     */
    Proto_ScenarioInfo.prototype.ScenarioID = 0;

    /**
     * Proto_ScenarioInfo ScenarioType.
     * @member {number} ScenarioType
     * @memberof Proto_ScenarioInfo
     * @instance
     */
    Proto_ScenarioInfo.prototype.ScenarioType = 0;

    /**
     * Proto_ScenarioInfo ProcessType.
     * @member {number} ProcessType
     * @memberof Proto_ScenarioInfo
     * @instance
     */
    Proto_ScenarioInfo.prototype.ProcessType = 0;

    /**
     * Proto_ScenarioInfo ScenarioCode.
     * @member {Uint8Array} ScenarioCode
     * @memberof Proto_ScenarioInfo
     * @instance
     */
    Proto_ScenarioInfo.prototype.ScenarioCode = $util.newBuffer([]);

    /**
     * Proto_ScenarioInfo SessionCode.
     * @member {Uint8Array} SessionCode
     * @memberof Proto_ScenarioInfo
     * @instance
     */
    Proto_ScenarioInfo.prototype.SessionCode = $util.newBuffer([]);

    /**
     * Proto_ScenarioInfo ProcessCode.
     * @member {Uint8Array} ProcessCode
     * @memberof Proto_ScenarioInfo
     * @instance
     */
    Proto_ScenarioInfo.prototype.ProcessCode = $util.newBuffer([]);

    /**
     * Proto_ScenarioInfo ScenarioDBID.
     * @member {number|Long} ScenarioDBID
     * @memberof Proto_ScenarioInfo
     * @instance
     */
    Proto_ScenarioInfo.prototype.ScenarioDBID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ScenarioInfo SessionDBID.
     * @member {number|Long} SessionDBID
     * @memberof Proto_ScenarioInfo
     * @instance
     */
    Proto_ScenarioInfo.prototype.SessionDBID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ScenarioInfo CanEditOnScenario.
     * @member {boolean} CanEditOnScenario
     * @memberof Proto_ScenarioInfo
     * @instance
     */
    Proto_ScenarioInfo.prototype.CanEditOnScenario = false;

    /**
     * Creates a new Proto_ScenarioInfo instance using the specified properties.
     * @function create
     * @memberof Proto_ScenarioInfo
     * @static
     * @param {IProto_ScenarioInfo=} [properties] Properties to set
     * @returns {Proto_ScenarioInfo} Proto_ScenarioInfo instance
     */
    Proto_ScenarioInfo.create = function create(properties) {
        return new Proto_ScenarioInfo(properties);
    };

    /**
     * Encodes the specified Proto_ScenarioInfo message. Does not implicitly {@link Proto_ScenarioInfo.verify|verify} messages.
     * @function encode
     * @memberof Proto_ScenarioInfo
     * @static
     * @param {IProto_ScenarioInfo} message Proto_ScenarioInfo message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ScenarioInfo.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ScenarioID != null && Object.hasOwnProperty.call(message, "ScenarioID"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ScenarioID);
        if (message.ScenarioType != null && Object.hasOwnProperty.call(message, "ScenarioType"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ScenarioType);
        if (message.ProcessType != null && Object.hasOwnProperty.call(message, "ProcessType"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.ProcessType);
        if (message.ScenarioCode != null && Object.hasOwnProperty.call(message, "ScenarioCode"))
            writer.uint32(/* id 10, wireType 2 =*/82).bytes(message.ScenarioCode);
        if (message.SessionCode != null && Object.hasOwnProperty.call(message, "SessionCode"))
            writer.uint32(/* id 11, wireType 2 =*/90).bytes(message.SessionCode);
        if (message.ProcessCode != null && Object.hasOwnProperty.call(message, "ProcessCode"))
            writer.uint32(/* id 12, wireType 2 =*/98).bytes(message.ProcessCode);
        if (message.ScenarioDBID != null && Object.hasOwnProperty.call(message, "ScenarioDBID"))
            writer.uint32(/* id 20, wireType 0 =*/160).int64(message.ScenarioDBID);
        if (message.SessionDBID != null && Object.hasOwnProperty.call(message, "SessionDBID"))
            writer.uint32(/* id 21, wireType 0 =*/168).int64(message.SessionDBID);
        if (message.CanEditOnScenario != null && Object.hasOwnProperty.call(message, "CanEditOnScenario"))
            writer.uint32(/* id 30, wireType 0 =*/240).bool(message.CanEditOnScenario);
        return writer;
    };

    /**
     * Encodes the specified Proto_ScenarioInfo message, length delimited. Does not implicitly {@link Proto_ScenarioInfo.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ScenarioInfo
     * @static
     * @param {IProto_ScenarioInfo} message Proto_ScenarioInfo message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ScenarioInfo.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ScenarioInfo message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ScenarioInfo
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ScenarioInfo} Proto_ScenarioInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ScenarioInfo.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ScenarioInfo();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ScenarioID = reader.int32();
                break;
            case 2:
                message.ScenarioType = reader.int32();
                break;
            case 3:
                message.ProcessType = reader.int32();
                break;
            case 10:
                message.ScenarioCode = reader.bytes();
                break;
            case 11:
                message.SessionCode = reader.bytes();
                break;
            case 12:
                message.ProcessCode = reader.bytes();
                break;
            case 20:
                message.ScenarioDBID = reader.int64();
                break;
            case 21:
                message.SessionDBID = reader.int64();
                break;
            case 30:
                message.CanEditOnScenario = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ScenarioInfo message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ScenarioInfo
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ScenarioInfo} Proto_ScenarioInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ScenarioInfo.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ScenarioInfo message.
     * @function verify
     * @memberof Proto_ScenarioInfo
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ScenarioInfo.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ScenarioID != null && message.hasOwnProperty("ScenarioID"))
            if (!$util.isInteger(message.ScenarioID))
                return "ScenarioID: integer expected";
        if (message.ScenarioType != null && message.hasOwnProperty("ScenarioType"))
            if (!$util.isInteger(message.ScenarioType))
                return "ScenarioType: integer expected";
        if (message.ProcessType != null && message.hasOwnProperty("ProcessType"))
            if (!$util.isInteger(message.ProcessType))
                return "ProcessType: integer expected";
        if (message.ScenarioCode != null && message.hasOwnProperty("ScenarioCode"))
            if (!(message.ScenarioCode && typeof message.ScenarioCode.length === "number" || $util.isString(message.ScenarioCode)))
                return "ScenarioCode: buffer expected";
        if (message.SessionCode != null && message.hasOwnProperty("SessionCode"))
            if (!(message.SessionCode && typeof message.SessionCode.length === "number" || $util.isString(message.SessionCode)))
                return "SessionCode: buffer expected";
        if (message.ProcessCode != null && message.hasOwnProperty("ProcessCode"))
            if (!(message.ProcessCode && typeof message.ProcessCode.length === "number" || $util.isString(message.ProcessCode)))
                return "ProcessCode: buffer expected";
        if (message.ScenarioDBID != null && message.hasOwnProperty("ScenarioDBID"))
            if (!$util.isInteger(message.ScenarioDBID) && !(message.ScenarioDBID && $util.isInteger(message.ScenarioDBID.low) && $util.isInteger(message.ScenarioDBID.high)))
                return "ScenarioDBID: integer|Long expected";
        if (message.SessionDBID != null && message.hasOwnProperty("SessionDBID"))
            if (!$util.isInteger(message.SessionDBID) && !(message.SessionDBID && $util.isInteger(message.SessionDBID.low) && $util.isInteger(message.SessionDBID.high)))
                return "SessionDBID: integer|Long expected";
        if (message.CanEditOnScenario != null && message.hasOwnProperty("CanEditOnScenario"))
            if (typeof message.CanEditOnScenario !== "boolean")
                return "CanEditOnScenario: boolean expected";
        return null;
    };

    /**
     * Creates a Proto_ScenarioInfo message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ScenarioInfo
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ScenarioInfo} Proto_ScenarioInfo
     */
    Proto_ScenarioInfo.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ScenarioInfo)
            return object;
        var message = new $root.Proto_ScenarioInfo();
        if (object.ScenarioID != null)
            message.ScenarioID = object.ScenarioID | 0;
        if (object.ScenarioType != null)
            message.ScenarioType = object.ScenarioType | 0;
        if (object.ProcessType != null)
            message.ProcessType = object.ProcessType | 0;
        if (object.ScenarioCode != null)
            if (typeof object.ScenarioCode === "string")
                $util.base64.decode(object.ScenarioCode, message.ScenarioCode = $util.newBuffer($util.base64.length(object.ScenarioCode)), 0);
            else if (object.ScenarioCode.length)
                message.ScenarioCode = object.ScenarioCode;
        if (object.SessionCode != null)
            if (typeof object.SessionCode === "string")
                $util.base64.decode(object.SessionCode, message.SessionCode = $util.newBuffer($util.base64.length(object.SessionCode)), 0);
            else if (object.SessionCode.length)
                message.SessionCode = object.SessionCode;
        if (object.ProcessCode != null)
            if (typeof object.ProcessCode === "string")
                $util.base64.decode(object.ProcessCode, message.ProcessCode = $util.newBuffer($util.base64.length(object.ProcessCode)), 0);
            else if (object.ProcessCode.length)
                message.ProcessCode = object.ProcessCode;
        if (object.ScenarioDBID != null)
            if ($util.Long)
                (message.ScenarioDBID = $util.Long.fromValue(object.ScenarioDBID)).unsigned = false;
            else if (typeof object.ScenarioDBID === "string")
                message.ScenarioDBID = parseInt(object.ScenarioDBID, 10);
            else if (typeof object.ScenarioDBID === "number")
                message.ScenarioDBID = object.ScenarioDBID;
            else if (typeof object.ScenarioDBID === "object")
                message.ScenarioDBID = new $util.LongBits(object.ScenarioDBID.low >>> 0, object.ScenarioDBID.high >>> 0).toNumber();
        if (object.SessionDBID != null)
            if ($util.Long)
                (message.SessionDBID = $util.Long.fromValue(object.SessionDBID)).unsigned = false;
            else if (typeof object.SessionDBID === "string")
                message.SessionDBID = parseInt(object.SessionDBID, 10);
            else if (typeof object.SessionDBID === "number")
                message.SessionDBID = object.SessionDBID;
            else if (typeof object.SessionDBID === "object")
                message.SessionDBID = new $util.LongBits(object.SessionDBID.low >>> 0, object.SessionDBID.high >>> 0).toNumber();
        if (object.CanEditOnScenario != null)
            message.CanEditOnScenario = Boolean(object.CanEditOnScenario);
        return message;
    };

    /**
     * Creates a plain object from a Proto_ScenarioInfo message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ScenarioInfo
     * @static
     * @param {Proto_ScenarioInfo} message Proto_ScenarioInfo
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ScenarioInfo.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.ScenarioID = 0;
            object.ScenarioType = 0;
            object.ProcessType = 0;
            if (options.bytes === String)
                object.ScenarioCode = "";
            else {
                object.ScenarioCode = [];
                if (options.bytes !== Array)
                    object.ScenarioCode = $util.newBuffer(object.ScenarioCode);
            }
            if (options.bytes === String)
                object.SessionCode = "";
            else {
                object.SessionCode = [];
                if (options.bytes !== Array)
                    object.SessionCode = $util.newBuffer(object.SessionCode);
            }
            if (options.bytes === String)
                object.ProcessCode = "";
            else {
                object.ProcessCode = [];
                if (options.bytes !== Array)
                    object.ProcessCode = $util.newBuffer(object.ProcessCode);
            }
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.ScenarioDBID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.ScenarioDBID = options.longs === String ? "0" : 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.SessionDBID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.SessionDBID = options.longs === String ? "0" : 0;
            object.CanEditOnScenario = false;
        }
        if (message.ScenarioID != null && message.hasOwnProperty("ScenarioID"))
            object.ScenarioID = message.ScenarioID;
        if (message.ScenarioType != null && message.hasOwnProperty("ScenarioType"))
            object.ScenarioType = message.ScenarioType;
        if (message.ProcessType != null && message.hasOwnProperty("ProcessType"))
            object.ProcessType = message.ProcessType;
        if (message.ScenarioCode != null && message.hasOwnProperty("ScenarioCode"))
            object.ScenarioCode = options.bytes === String ? $util.base64.encode(message.ScenarioCode, 0, message.ScenarioCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ScenarioCode) : message.ScenarioCode;
        if (message.SessionCode != null && message.hasOwnProperty("SessionCode"))
            object.SessionCode = options.bytes === String ? $util.base64.encode(message.SessionCode, 0, message.SessionCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.SessionCode) : message.SessionCode;
        if (message.ProcessCode != null && message.hasOwnProperty("ProcessCode"))
            object.ProcessCode = options.bytes === String ? $util.base64.encode(message.ProcessCode, 0, message.ProcessCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProcessCode) : message.ProcessCode;
        if (message.ScenarioDBID != null && message.hasOwnProperty("ScenarioDBID"))
            if (typeof message.ScenarioDBID === "number")
                object.ScenarioDBID = options.longs === String ? String(message.ScenarioDBID) : message.ScenarioDBID;
            else
                object.ScenarioDBID = options.longs === String ? $util.Long.prototype.toString.call(message.ScenarioDBID) : options.longs === Number ? new $util.LongBits(message.ScenarioDBID.low >>> 0, message.ScenarioDBID.high >>> 0).toNumber() : message.ScenarioDBID;
        if (message.SessionDBID != null && message.hasOwnProperty("SessionDBID"))
            if (typeof message.SessionDBID === "number")
                object.SessionDBID = options.longs === String ? String(message.SessionDBID) : message.SessionDBID;
            else
                object.SessionDBID = options.longs === String ? $util.Long.prototype.toString.call(message.SessionDBID) : options.longs === Number ? new $util.LongBits(message.SessionDBID.low >>> 0, message.SessionDBID.high >>> 0).toNumber() : message.SessionDBID;
        if (message.CanEditOnScenario != null && message.hasOwnProperty("CanEditOnScenario"))
            object.CanEditOnScenario = message.CanEditOnScenario;
        return object;
    };

    /**
     * Converts this Proto_ScenarioInfo to JSON.
     * @function toJSON
     * @memberof Proto_ScenarioInfo
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ScenarioInfo.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ScenarioInfo;
})();

$root.Proto_Scenario = (function() {

    /**
     * Properties of a Proto_Scenario.
     * @exports IProto_Scenario
     * @interface IProto_Scenario
     * @property {number|null} [ScenarioID] Proto_Scenario ScenarioID
     * @property {IProto_Session|null} [SessionScenario] Proto_Scenario SessionScenario
     * @property {IProto_Session|null} [UserScenario] Proto_Scenario UserScenario
     * @property {IProto_Session|null} [LastEditableScenario] Proto_Scenario LastEditableScenario
     * @property {IProto_WhatifScenario|null} [WhatifScenario] Proto_Scenario WhatifScenario
     * @property {Uint8Array|null} [ScenarioLocatorExpression] Proto_Scenario ScenarioLocatorExpression
     */

    /**
     * Constructs a new Proto_Scenario.
     * @exports Proto_Scenario
     * @classdesc Represents a Proto_Scenario.
     * @implements IProto_Scenario
     * @constructor
     * @param {IProto_Scenario=} [properties] Properties to set
     */
    function Proto_Scenario(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Scenario ScenarioID.
     * @member {number|null|undefined} ScenarioID
     * @memberof Proto_Scenario
     * @instance
     */
    Proto_Scenario.prototype.ScenarioID = null;

    /**
     * Proto_Scenario SessionScenario.
     * @member {IProto_Session|null|undefined} SessionScenario
     * @memberof Proto_Scenario
     * @instance
     */
    Proto_Scenario.prototype.SessionScenario = null;

    /**
     * Proto_Scenario UserScenario.
     * @member {IProto_Session|null|undefined} UserScenario
     * @memberof Proto_Scenario
     * @instance
     */
    Proto_Scenario.prototype.UserScenario = null;

    /**
     * Proto_Scenario LastEditableScenario.
     * @member {IProto_Session|null|undefined} LastEditableScenario
     * @memberof Proto_Scenario
     * @instance
     */
    Proto_Scenario.prototype.LastEditableScenario = null;

    /**
     * Proto_Scenario WhatifScenario.
     * @member {IProto_WhatifScenario|null|undefined} WhatifScenario
     * @memberof Proto_Scenario
     * @instance
     */
    Proto_Scenario.prototype.WhatifScenario = null;

    /**
     * Proto_Scenario ScenarioLocatorExpression.
     * @member {Uint8Array|null|undefined} ScenarioLocatorExpression
     * @memberof Proto_Scenario
     * @instance
     */
    Proto_Scenario.prototype.ScenarioLocatorExpression = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_Scenario value.
     * @member {"ScenarioID"|"SessionScenario"|"UserScenario"|"LastEditableScenario"|"WhatifScenario"|"ScenarioLocatorExpression"|undefined} value
     * @memberof Proto_Scenario
     * @instance
     */
    Object.defineProperty(Proto_Scenario.prototype, "value", {
        get: $util.oneOfGetter($oneOfFields = ["ScenarioID", "SessionScenario", "UserScenario", "LastEditableScenario", "WhatifScenario", "ScenarioLocatorExpression"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_Scenario instance using the specified properties.
     * @function create
     * @memberof Proto_Scenario
     * @static
     * @param {IProto_Scenario=} [properties] Properties to set
     * @returns {Proto_Scenario} Proto_Scenario instance
     */
    Proto_Scenario.create = function create(properties) {
        return new Proto_Scenario(properties);
    };

    /**
     * Encodes the specified Proto_Scenario message. Does not implicitly {@link Proto_Scenario.verify|verify} messages.
     * @function encode
     * @memberof Proto_Scenario
     * @static
     * @param {IProto_Scenario} message Proto_Scenario message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Scenario.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ScenarioID != null && Object.hasOwnProperty.call(message, "ScenarioID"))
            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.ScenarioID);
        if (message.SessionScenario != null && Object.hasOwnProperty.call(message, "SessionScenario"))
            $root.Proto_Session.encode(message.SessionScenario, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
        if (message.UserScenario != null && Object.hasOwnProperty.call(message, "UserScenario"))
            $root.Proto_Session.encode(message.UserScenario, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
        if (message.LastEditableScenario != null && Object.hasOwnProperty.call(message, "LastEditableScenario"))
            $root.Proto_Session.encode(message.LastEditableScenario, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
        if (message.WhatifScenario != null && Object.hasOwnProperty.call(message, "WhatifScenario"))
            $root.Proto_WhatifScenario.encode(message.WhatifScenario, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
        if (message.ScenarioLocatorExpression != null && Object.hasOwnProperty.call(message, "ScenarioLocatorExpression"))
            writer.uint32(/* id 15, wireType 2 =*/122).bytes(message.ScenarioLocatorExpression);
        return writer;
    };

    /**
     * Encodes the specified Proto_Scenario message, length delimited. Does not implicitly {@link Proto_Scenario.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Scenario
     * @static
     * @param {IProto_Scenario} message Proto_Scenario message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Scenario.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Scenario message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Scenario
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Scenario} Proto_Scenario
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Scenario.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Scenario();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 10:
                message.ScenarioID = reader.int32();
                break;
            case 11:
                message.SessionScenario = $root.Proto_Session.decode(reader, reader.uint32());
                break;
            case 12:
                message.UserScenario = $root.Proto_Session.decode(reader, reader.uint32());
                break;
            case 13:
                message.LastEditableScenario = $root.Proto_Session.decode(reader, reader.uint32());
                break;
            case 14:
                message.WhatifScenario = $root.Proto_WhatifScenario.decode(reader, reader.uint32());
                break;
            case 15:
                message.ScenarioLocatorExpression = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Scenario message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Scenario
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Scenario} Proto_Scenario
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Scenario.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Scenario message.
     * @function verify
     * @memberof Proto_Scenario
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Scenario.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.ScenarioID != null && message.hasOwnProperty("ScenarioID")) {
            properties.value = 1;
            if (!$util.isInteger(message.ScenarioID))
                return "ScenarioID: integer expected";
        }
        if (message.SessionScenario != null && message.hasOwnProperty("SessionScenario")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_Session.verify(message.SessionScenario);
                if (error)
                    return "SessionScenario." + error;
            }
        }
        if (message.UserScenario != null && message.hasOwnProperty("UserScenario")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_Session.verify(message.UserScenario);
                if (error)
                    return "UserScenario." + error;
            }
        }
        if (message.LastEditableScenario != null && message.hasOwnProperty("LastEditableScenario")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_Session.verify(message.LastEditableScenario);
                if (error)
                    return "LastEditableScenario." + error;
            }
        }
        if (message.WhatifScenario != null && message.hasOwnProperty("WhatifScenario")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_WhatifScenario.verify(message.WhatifScenario);
                if (error)
                    return "WhatifScenario." + error;
            }
        }
        if (message.ScenarioLocatorExpression != null && message.hasOwnProperty("ScenarioLocatorExpression")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!(message.ScenarioLocatorExpression && typeof message.ScenarioLocatorExpression.length === "number" || $util.isString(message.ScenarioLocatorExpression)))
                return "ScenarioLocatorExpression: buffer expected";
        }
        return null;
    };

    /**
     * Creates a Proto_Scenario message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Scenario
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Scenario} Proto_Scenario
     */
    Proto_Scenario.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Scenario)
            return object;
        var message = new $root.Proto_Scenario();
        if (object.ScenarioID != null)
            message.ScenarioID = object.ScenarioID | 0;
        if (object.SessionScenario != null) {
            if (typeof object.SessionScenario !== "object")
                throw TypeError(".Proto_Scenario.SessionScenario: object expected");
            message.SessionScenario = $root.Proto_Session.fromObject(object.SessionScenario);
        }
        if (object.UserScenario != null) {
            if (typeof object.UserScenario !== "object")
                throw TypeError(".Proto_Scenario.UserScenario: object expected");
            message.UserScenario = $root.Proto_Session.fromObject(object.UserScenario);
        }
        if (object.LastEditableScenario != null) {
            if (typeof object.LastEditableScenario !== "object")
                throw TypeError(".Proto_Scenario.LastEditableScenario: object expected");
            message.LastEditableScenario = $root.Proto_Session.fromObject(object.LastEditableScenario);
        }
        if (object.WhatifScenario != null) {
            if (typeof object.WhatifScenario !== "object")
                throw TypeError(".Proto_Scenario.WhatifScenario: object expected");
            message.WhatifScenario = $root.Proto_WhatifScenario.fromObject(object.WhatifScenario);
        }
        if (object.ScenarioLocatorExpression != null)
            if (typeof object.ScenarioLocatorExpression === "string")
                $util.base64.decode(object.ScenarioLocatorExpression, message.ScenarioLocatorExpression = $util.newBuffer($util.base64.length(object.ScenarioLocatorExpression)), 0);
            else if (object.ScenarioLocatorExpression.length)
                message.ScenarioLocatorExpression = object.ScenarioLocatorExpression;
        return message;
    };

    /**
     * Creates a plain object from a Proto_Scenario message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Scenario
     * @static
     * @param {Proto_Scenario} message Proto_Scenario
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Scenario.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (message.ScenarioID != null && message.hasOwnProperty("ScenarioID")) {
            object.ScenarioID = message.ScenarioID;
            if (options.oneofs)
                object.value = "ScenarioID";
        }
        if (message.SessionScenario != null && message.hasOwnProperty("SessionScenario")) {
            object.SessionScenario = $root.Proto_Session.toObject(message.SessionScenario, options);
            if (options.oneofs)
                object.value = "SessionScenario";
        }
        if (message.UserScenario != null && message.hasOwnProperty("UserScenario")) {
            object.UserScenario = $root.Proto_Session.toObject(message.UserScenario, options);
            if (options.oneofs)
                object.value = "UserScenario";
        }
        if (message.LastEditableScenario != null && message.hasOwnProperty("LastEditableScenario")) {
            object.LastEditableScenario = $root.Proto_Session.toObject(message.LastEditableScenario, options);
            if (options.oneofs)
                object.value = "LastEditableScenario";
        }
        if (message.WhatifScenario != null && message.hasOwnProperty("WhatifScenario")) {
            object.WhatifScenario = $root.Proto_WhatifScenario.toObject(message.WhatifScenario, options);
            if (options.oneofs)
                object.value = "WhatifScenario";
        }
        if (message.ScenarioLocatorExpression != null && message.hasOwnProperty("ScenarioLocatorExpression")) {
            object.ScenarioLocatorExpression = options.bytes === String ? $util.base64.encode(message.ScenarioLocatorExpression, 0, message.ScenarioLocatorExpression.length) : options.bytes === Array ? Array.prototype.slice.call(message.ScenarioLocatorExpression) : message.ScenarioLocatorExpression;
            if (options.oneofs)
                object.value = "ScenarioLocatorExpression";
        }
        return object;
    };

    /**
     * Converts this Proto_Scenario to JSON.
     * @function toJSON
     * @memberof Proto_Scenario
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Scenario.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Scenario;
})();

$root.Proto_Release_List = (function() {

    /**
     * Properties of a Proto_Release_List.
     * @exports IProto_Release_List
     * @interface IProto_Release_List
     * @property {Uint8Array|null} [ProcessCode] Proto_Release_List ProcessCode
     * @property {Array.<IProto_Release>|null} [Release] Proto_Release_List Release
     */

    /**
     * Constructs a new Proto_Release_List.
     * @exports Proto_Release_List
     * @classdesc Represents a Proto_Release_List.
     * @implements IProto_Release_List
     * @constructor
     * @param {IProto_Release_List=} [properties] Properties to set
     */
    function Proto_Release_List(properties) {
        this.Release = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Release_List ProcessCode.
     * @member {Uint8Array} ProcessCode
     * @memberof Proto_Release_List
     * @instance
     */
    Proto_Release_List.prototype.ProcessCode = $util.newBuffer([]);

    /**
     * Proto_Release_List Release.
     * @member {Array.<IProto_Release>} Release
     * @memberof Proto_Release_List
     * @instance
     */
    Proto_Release_List.prototype.Release = $util.emptyArray;

    /**
     * Creates a new Proto_Release_List instance using the specified properties.
     * @function create
     * @memberof Proto_Release_List
     * @static
     * @param {IProto_Release_List=} [properties] Properties to set
     * @returns {Proto_Release_List} Proto_Release_List instance
     */
    Proto_Release_List.create = function create(properties) {
        return new Proto_Release_List(properties);
    };

    /**
     * Encodes the specified Proto_Release_List message. Does not implicitly {@link Proto_Release_List.verify|verify} messages.
     * @function encode
     * @memberof Proto_Release_List
     * @static
     * @param {IProto_Release_List} message Proto_Release_List message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Release_List.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ProcessCode != null && Object.hasOwnProperty.call(message, "ProcessCode"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ProcessCode);
        if (message.Release != null && message.Release.length)
            for (var i = 0; i < message.Release.length; ++i)
                $root.Proto_Release.encode(message.Release[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_Release_List message, length delimited. Does not implicitly {@link Proto_Release_List.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Release_List
     * @static
     * @param {IProto_Release_List} message Proto_Release_List message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Release_List.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Release_List message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Release_List
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Release_List} Proto_Release_List
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Release_List.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Release_List();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ProcessCode = reader.bytes();
                break;
            case 2:
                if (!(message.Release && message.Release.length))
                    message.Release = [];
                message.Release.push($root.Proto_Release.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Release_List message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Release_List
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Release_List} Proto_Release_List
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Release_List.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Release_List message.
     * @function verify
     * @memberof Proto_Release_List
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Release_List.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ProcessCode != null && message.hasOwnProperty("ProcessCode"))
            if (!(message.ProcessCode && typeof message.ProcessCode.length === "number" || $util.isString(message.ProcessCode)))
                return "ProcessCode: buffer expected";
        if (message.Release != null && message.hasOwnProperty("Release")) {
            if (!Array.isArray(message.Release))
                return "Release: array expected";
            for (var i = 0; i < message.Release.length; ++i) {
                var error = $root.Proto_Release.verify(message.Release[i]);
                if (error)
                    return "Release." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_Release_List message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Release_List
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Release_List} Proto_Release_List
     */
    Proto_Release_List.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Release_List)
            return object;
        var message = new $root.Proto_Release_List();
        if (object.ProcessCode != null)
            if (typeof object.ProcessCode === "string")
                $util.base64.decode(object.ProcessCode, message.ProcessCode = $util.newBuffer($util.base64.length(object.ProcessCode)), 0);
            else if (object.ProcessCode.length)
                message.ProcessCode = object.ProcessCode;
        if (object.Release) {
            if (!Array.isArray(object.Release))
                throw TypeError(".Proto_Release_List.Release: array expected");
            message.Release = [];
            for (var i = 0; i < object.Release.length; ++i) {
                if (typeof object.Release[i] !== "object")
                    throw TypeError(".Proto_Release_List.Release: object expected");
                message.Release[i] = $root.Proto_Release.fromObject(object.Release[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_Release_List message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Release_List
     * @static
     * @param {Proto_Release_List} message Proto_Release_List
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Release_List.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.Release = [];
        if (options.defaults)
            if (options.bytes === String)
                object.ProcessCode = "";
            else {
                object.ProcessCode = [];
                if (options.bytes !== Array)
                    object.ProcessCode = $util.newBuffer(object.ProcessCode);
            }
        if (message.ProcessCode != null && message.hasOwnProperty("ProcessCode"))
            object.ProcessCode = options.bytes === String ? $util.base64.encode(message.ProcessCode, 0, message.ProcessCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProcessCode) : message.ProcessCode;
        if (message.Release && message.Release.length) {
            object.Release = [];
            for (var j = 0; j < message.Release.length; ++j)
                object.Release[j] = $root.Proto_Release.toObject(message.Release[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_Release_List to JSON.
     * @function toJSON
     * @memberof Proto_Release_List
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Release_List.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Release_List;
})();

$root.Proto_Release = (function() {

    /**
     * Properties of a Proto_Release.
     * @exports IProto_Release
     * @interface IProto_Release
     * @property {number|Long|null} [ReleaseReferenceID] Proto_Release ReleaseReferenceID
     * @property {number|null} [ReleaseIndexFromLast] Proto_Release ReleaseIndexFromLast
     * @property {number|Long|null} [ReleaseOfType] Proto_Release ReleaseOfType
     * @property {Uint8Array|null} [ReleaseCode] Proto_Release ReleaseCode
     * @property {Uint8Array|null} [ReleaseName] Proto_Release ReleaseName
     * @property {Uint8Array|null} [ReleaseLocatorExpression] Proto_Release ReleaseLocatorExpression
     */

    /**
     * Constructs a new Proto_Release.
     * @exports Proto_Release
     * @classdesc Represents a Proto_Release.
     * @implements IProto_Release
     * @constructor
     * @param {IProto_Release=} [properties] Properties to set
     */
    function Proto_Release(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Release ReleaseReferenceID.
     * @member {number|Long|null|undefined} ReleaseReferenceID
     * @memberof Proto_Release
     * @instance
     */
    Proto_Release.prototype.ReleaseReferenceID = null;

    /**
     * Proto_Release ReleaseIndexFromLast.
     * @member {number|null|undefined} ReleaseIndexFromLast
     * @memberof Proto_Release
     * @instance
     */
    Proto_Release.prototype.ReleaseIndexFromLast = null;

    /**
     * Proto_Release ReleaseOfType.
     * @member {number|Long|null|undefined} ReleaseOfType
     * @memberof Proto_Release
     * @instance
     */
    Proto_Release.prototype.ReleaseOfType = null;

    /**
     * Proto_Release ReleaseCode.
     * @member {Uint8Array|null|undefined} ReleaseCode
     * @memberof Proto_Release
     * @instance
     */
    Proto_Release.prototype.ReleaseCode = null;

    /**
     * Proto_Release ReleaseName.
     * @member {Uint8Array|null|undefined} ReleaseName
     * @memberof Proto_Release
     * @instance
     */
    Proto_Release.prototype.ReleaseName = null;

    /**
     * Proto_Release ReleaseLocatorExpression.
     * @member {Uint8Array|null|undefined} ReleaseLocatorExpression
     * @memberof Proto_Release
     * @instance
     */
    Proto_Release.prototype.ReleaseLocatorExpression = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_Release value.
     * @member {"ReleaseReferenceID"|"ReleaseIndexFromLast"|"ReleaseOfType"|"ReleaseCode"|"ReleaseName"|"ReleaseLocatorExpression"|undefined} value
     * @memberof Proto_Release
     * @instance
     */
    Object.defineProperty(Proto_Release.prototype, "value", {
        get: $util.oneOfGetter($oneOfFields = ["ReleaseReferenceID", "ReleaseIndexFromLast", "ReleaseOfType", "ReleaseCode", "ReleaseName", "ReleaseLocatorExpression"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_Release instance using the specified properties.
     * @function create
     * @memberof Proto_Release
     * @static
     * @param {IProto_Release=} [properties] Properties to set
     * @returns {Proto_Release} Proto_Release instance
     */
    Proto_Release.create = function create(properties) {
        return new Proto_Release(properties);
    };

    /**
     * Encodes the specified Proto_Release message. Does not implicitly {@link Proto_Release.verify|verify} messages.
     * @function encode
     * @memberof Proto_Release
     * @static
     * @param {IProto_Release} message Proto_Release message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Release.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ReleaseReferenceID != null && Object.hasOwnProperty.call(message, "ReleaseReferenceID"))
            writer.uint32(/* id 10, wireType 0 =*/80).int64(message.ReleaseReferenceID);
        if (message.ReleaseIndexFromLast != null && Object.hasOwnProperty.call(message, "ReleaseIndexFromLast"))
            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.ReleaseIndexFromLast);
        if (message.ReleaseOfType != null && Object.hasOwnProperty.call(message, "ReleaseOfType"))
            writer.uint32(/* id 12, wireType 0 =*/96).int64(message.ReleaseOfType);
        if (message.ReleaseCode != null && Object.hasOwnProperty.call(message, "ReleaseCode"))
            writer.uint32(/* id 13, wireType 2 =*/106).bytes(message.ReleaseCode);
        if (message.ReleaseName != null && Object.hasOwnProperty.call(message, "ReleaseName"))
            writer.uint32(/* id 14, wireType 2 =*/114).bytes(message.ReleaseName);
        if (message.ReleaseLocatorExpression != null && Object.hasOwnProperty.call(message, "ReleaseLocatorExpression"))
            writer.uint32(/* id 15, wireType 2 =*/122).bytes(message.ReleaseLocatorExpression);
        return writer;
    };

    /**
     * Encodes the specified Proto_Release message, length delimited. Does not implicitly {@link Proto_Release.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Release
     * @static
     * @param {IProto_Release} message Proto_Release message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Release.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Release message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Release
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Release} Proto_Release
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Release.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Release();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 10:
                message.ReleaseReferenceID = reader.int64();
                break;
            case 11:
                message.ReleaseIndexFromLast = reader.int32();
                break;
            case 12:
                message.ReleaseOfType = reader.int64();
                break;
            case 13:
                message.ReleaseCode = reader.bytes();
                break;
            case 14:
                message.ReleaseName = reader.bytes();
                break;
            case 15:
                message.ReleaseLocatorExpression = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Release message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Release
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Release} Proto_Release
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Release.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Release message.
     * @function verify
     * @memberof Proto_Release
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Release.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.ReleaseReferenceID != null && message.hasOwnProperty("ReleaseReferenceID")) {
            properties.value = 1;
            if (!$util.isInteger(message.ReleaseReferenceID) && !(message.ReleaseReferenceID && $util.isInteger(message.ReleaseReferenceID.low) && $util.isInteger(message.ReleaseReferenceID.high)))
                return "ReleaseReferenceID: integer|Long expected";
        }
        if (message.ReleaseIndexFromLast != null && message.hasOwnProperty("ReleaseIndexFromLast")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!$util.isInteger(message.ReleaseIndexFromLast))
                return "ReleaseIndexFromLast: integer expected";
        }
        if (message.ReleaseOfType != null && message.hasOwnProperty("ReleaseOfType")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!$util.isInteger(message.ReleaseOfType) && !(message.ReleaseOfType && $util.isInteger(message.ReleaseOfType.low) && $util.isInteger(message.ReleaseOfType.high)))
                return "ReleaseOfType: integer|Long expected";
        }
        if (message.ReleaseCode != null && message.hasOwnProperty("ReleaseCode")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!(message.ReleaseCode && typeof message.ReleaseCode.length === "number" || $util.isString(message.ReleaseCode)))
                return "ReleaseCode: buffer expected";
        }
        if (message.ReleaseName != null && message.hasOwnProperty("ReleaseName")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!(message.ReleaseName && typeof message.ReleaseName.length === "number" || $util.isString(message.ReleaseName)))
                return "ReleaseName: buffer expected";
        }
        if (message.ReleaseLocatorExpression != null && message.hasOwnProperty("ReleaseLocatorExpression")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!(message.ReleaseLocatorExpression && typeof message.ReleaseLocatorExpression.length === "number" || $util.isString(message.ReleaseLocatorExpression)))
                return "ReleaseLocatorExpression: buffer expected";
        }
        return null;
    };

    /**
     * Creates a Proto_Release message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Release
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Release} Proto_Release
     */
    Proto_Release.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Release)
            return object;
        var message = new $root.Proto_Release();
        if (object.ReleaseReferenceID != null)
            if ($util.Long)
                (message.ReleaseReferenceID = $util.Long.fromValue(object.ReleaseReferenceID)).unsigned = false;
            else if (typeof object.ReleaseReferenceID === "string")
                message.ReleaseReferenceID = parseInt(object.ReleaseReferenceID, 10);
            else if (typeof object.ReleaseReferenceID === "number")
                message.ReleaseReferenceID = object.ReleaseReferenceID;
            else if (typeof object.ReleaseReferenceID === "object")
                message.ReleaseReferenceID = new $util.LongBits(object.ReleaseReferenceID.low >>> 0, object.ReleaseReferenceID.high >>> 0).toNumber();
        if (object.ReleaseIndexFromLast != null)
            message.ReleaseIndexFromLast = object.ReleaseIndexFromLast | 0;
        if (object.ReleaseOfType != null)
            if ($util.Long)
                (message.ReleaseOfType = $util.Long.fromValue(object.ReleaseOfType)).unsigned = false;
            else if (typeof object.ReleaseOfType === "string")
                message.ReleaseOfType = parseInt(object.ReleaseOfType, 10);
            else if (typeof object.ReleaseOfType === "number")
                message.ReleaseOfType = object.ReleaseOfType;
            else if (typeof object.ReleaseOfType === "object")
                message.ReleaseOfType = new $util.LongBits(object.ReleaseOfType.low >>> 0, object.ReleaseOfType.high >>> 0).toNumber();
        if (object.ReleaseCode != null)
            if (typeof object.ReleaseCode === "string")
                $util.base64.decode(object.ReleaseCode, message.ReleaseCode = $util.newBuffer($util.base64.length(object.ReleaseCode)), 0);
            else if (object.ReleaseCode.length)
                message.ReleaseCode = object.ReleaseCode;
        if (object.ReleaseName != null)
            if (typeof object.ReleaseName === "string")
                $util.base64.decode(object.ReleaseName, message.ReleaseName = $util.newBuffer($util.base64.length(object.ReleaseName)), 0);
            else if (object.ReleaseName.length)
                message.ReleaseName = object.ReleaseName;
        if (object.ReleaseLocatorExpression != null)
            if (typeof object.ReleaseLocatorExpression === "string")
                $util.base64.decode(object.ReleaseLocatorExpression, message.ReleaseLocatorExpression = $util.newBuffer($util.base64.length(object.ReleaseLocatorExpression)), 0);
            else if (object.ReleaseLocatorExpression.length)
                message.ReleaseLocatorExpression = object.ReleaseLocatorExpression;
        return message;
    };

    /**
     * Creates a plain object from a Proto_Release message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Release
     * @static
     * @param {Proto_Release} message Proto_Release
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Release.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (message.ReleaseReferenceID != null && message.hasOwnProperty("ReleaseReferenceID")) {
            if (typeof message.ReleaseReferenceID === "number")
                object.ReleaseReferenceID = options.longs === String ? String(message.ReleaseReferenceID) : message.ReleaseReferenceID;
            else
                object.ReleaseReferenceID = options.longs === String ? $util.Long.prototype.toString.call(message.ReleaseReferenceID) : options.longs === Number ? new $util.LongBits(message.ReleaseReferenceID.low >>> 0, message.ReleaseReferenceID.high >>> 0).toNumber() : message.ReleaseReferenceID;
            if (options.oneofs)
                object.value = "ReleaseReferenceID";
        }
        if (message.ReleaseIndexFromLast != null && message.hasOwnProperty("ReleaseIndexFromLast")) {
            object.ReleaseIndexFromLast = message.ReleaseIndexFromLast;
            if (options.oneofs)
                object.value = "ReleaseIndexFromLast";
        }
        if (message.ReleaseOfType != null && message.hasOwnProperty("ReleaseOfType")) {
            if (typeof message.ReleaseOfType === "number")
                object.ReleaseOfType = options.longs === String ? String(message.ReleaseOfType) : message.ReleaseOfType;
            else
                object.ReleaseOfType = options.longs === String ? $util.Long.prototype.toString.call(message.ReleaseOfType) : options.longs === Number ? new $util.LongBits(message.ReleaseOfType.low >>> 0, message.ReleaseOfType.high >>> 0).toNumber() : message.ReleaseOfType;
            if (options.oneofs)
                object.value = "ReleaseOfType";
        }
        if (message.ReleaseCode != null && message.hasOwnProperty("ReleaseCode")) {
            object.ReleaseCode = options.bytes === String ? $util.base64.encode(message.ReleaseCode, 0, message.ReleaseCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ReleaseCode) : message.ReleaseCode;
            if (options.oneofs)
                object.value = "ReleaseCode";
        }
        if (message.ReleaseName != null && message.hasOwnProperty("ReleaseName")) {
            object.ReleaseName = options.bytes === String ? $util.base64.encode(message.ReleaseName, 0, message.ReleaseName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ReleaseName) : message.ReleaseName;
            if (options.oneofs)
                object.value = "ReleaseName";
        }
        if (message.ReleaseLocatorExpression != null && message.hasOwnProperty("ReleaseLocatorExpression")) {
            object.ReleaseLocatorExpression = options.bytes === String ? $util.base64.encode(message.ReleaseLocatorExpression, 0, message.ReleaseLocatorExpression.length) : options.bytes === Array ? Array.prototype.slice.call(message.ReleaseLocatorExpression) : message.ReleaseLocatorExpression;
            if (options.oneofs)
                object.value = "ReleaseLocatorExpression";
        }
        return object;
    };

    /**
     * Converts this Proto_Release to JSON.
     * @function toJSON
     * @memberof Proto_Release
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Release.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Release;
})();

$root.Proto_FederatedServers = (function() {

    /**
     * Properties of a Proto_FederatedServers.
     * @exports IProto_FederatedServers
     * @interface IProto_FederatedServers
     * @property {Array.<IProto_ICRONServer>|null} [ICRONServer] Proto_FederatedServers ICRONServer
     */

    /**
     * Constructs a new Proto_FederatedServers.
     * @exports Proto_FederatedServers
     * @classdesc Represents a Proto_FederatedServers.
     * @implements IProto_FederatedServers
     * @constructor
     * @param {IProto_FederatedServers=} [properties] Properties to set
     */
    function Proto_FederatedServers(properties) {
        this.ICRONServer = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_FederatedServers ICRONServer.
     * @member {Array.<IProto_ICRONServer>} ICRONServer
     * @memberof Proto_FederatedServers
     * @instance
     */
    Proto_FederatedServers.prototype.ICRONServer = $util.emptyArray;

    /**
     * Creates a new Proto_FederatedServers instance using the specified properties.
     * @function create
     * @memberof Proto_FederatedServers
     * @static
     * @param {IProto_FederatedServers=} [properties] Properties to set
     * @returns {Proto_FederatedServers} Proto_FederatedServers instance
     */
    Proto_FederatedServers.create = function create(properties) {
        return new Proto_FederatedServers(properties);
    };

    /**
     * Encodes the specified Proto_FederatedServers message. Does not implicitly {@link Proto_FederatedServers.verify|verify} messages.
     * @function encode
     * @memberof Proto_FederatedServers
     * @static
     * @param {IProto_FederatedServers} message Proto_FederatedServers message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_FederatedServers.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ICRONServer != null && message.ICRONServer.length)
            for (var i = 0; i < message.ICRONServer.length; ++i)
                $root.Proto_ICRONServer.encode(message.ICRONServer[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_FederatedServers message, length delimited. Does not implicitly {@link Proto_FederatedServers.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_FederatedServers
     * @static
     * @param {IProto_FederatedServers} message Proto_FederatedServers message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_FederatedServers.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_FederatedServers message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_FederatedServers
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_FederatedServers} Proto_FederatedServers
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_FederatedServers.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_FederatedServers();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.ICRONServer && message.ICRONServer.length))
                    message.ICRONServer = [];
                message.ICRONServer.push($root.Proto_ICRONServer.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_FederatedServers message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_FederatedServers
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_FederatedServers} Proto_FederatedServers
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_FederatedServers.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_FederatedServers message.
     * @function verify
     * @memberof Proto_FederatedServers
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_FederatedServers.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ICRONServer != null && message.hasOwnProperty("ICRONServer")) {
            if (!Array.isArray(message.ICRONServer))
                return "ICRONServer: array expected";
            for (var i = 0; i < message.ICRONServer.length; ++i) {
                var error = $root.Proto_ICRONServer.verify(message.ICRONServer[i]);
                if (error)
                    return "ICRONServer." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_FederatedServers message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_FederatedServers
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_FederatedServers} Proto_FederatedServers
     */
    Proto_FederatedServers.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_FederatedServers)
            return object;
        var message = new $root.Proto_FederatedServers();
        if (object.ICRONServer) {
            if (!Array.isArray(object.ICRONServer))
                throw TypeError(".Proto_FederatedServers.ICRONServer: array expected");
            message.ICRONServer = [];
            for (var i = 0; i < object.ICRONServer.length; ++i) {
                if (typeof object.ICRONServer[i] !== "object")
                    throw TypeError(".Proto_FederatedServers.ICRONServer: object expected");
                message.ICRONServer[i] = $root.Proto_ICRONServer.fromObject(object.ICRONServer[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_FederatedServers message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_FederatedServers
     * @static
     * @param {Proto_FederatedServers} message Proto_FederatedServers
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_FederatedServers.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.ICRONServer = [];
        if (message.ICRONServer && message.ICRONServer.length) {
            object.ICRONServer = [];
            for (var j = 0; j < message.ICRONServer.length; ++j)
                object.ICRONServer[j] = $root.Proto_ICRONServer.toObject(message.ICRONServer[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_FederatedServers to JSON.
     * @function toJSON
     * @memberof Proto_FederatedServers
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_FederatedServers.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_FederatedServers;
})();

$root.Proto_ICRONServer = (function() {

    /**
     * Properties of a Proto_ICRONServer.
     * @exports IProto_ICRONServer
     * @interface IProto_ICRONServer
     * @property {Uint8Array|null} [ServerCode] Proto_ICRONServer ServerCode
     * @property {Uint8Array|null} [ServerIP] Proto_ICRONServer ServerIP
     * @property {number|null} [ServerPort] Proto_ICRONServer ServerPort
     * @property {Uint8Array|null} [ServerAPIURL] Proto_ICRONServer ServerAPIURL
     */

    /**
     * Constructs a new Proto_ICRONServer.
     * @exports Proto_ICRONServer
     * @classdesc Represents a Proto_ICRONServer.
     * @implements IProto_ICRONServer
     * @constructor
     * @param {IProto_ICRONServer=} [properties] Properties to set
     */
    function Proto_ICRONServer(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ICRONServer ServerCode.
     * @member {Uint8Array} ServerCode
     * @memberof Proto_ICRONServer
     * @instance
     */
    Proto_ICRONServer.prototype.ServerCode = $util.newBuffer([]);

    /**
     * Proto_ICRONServer ServerIP.
     * @member {Uint8Array} ServerIP
     * @memberof Proto_ICRONServer
     * @instance
     */
    Proto_ICRONServer.prototype.ServerIP = $util.newBuffer([]);

    /**
     * Proto_ICRONServer ServerPort.
     * @member {number} ServerPort
     * @memberof Proto_ICRONServer
     * @instance
     */
    Proto_ICRONServer.prototype.ServerPort = 0;

    /**
     * Proto_ICRONServer ServerAPIURL.
     * @member {Uint8Array} ServerAPIURL
     * @memberof Proto_ICRONServer
     * @instance
     */
    Proto_ICRONServer.prototype.ServerAPIURL = $util.newBuffer([]);

    /**
     * Creates a new Proto_ICRONServer instance using the specified properties.
     * @function create
     * @memberof Proto_ICRONServer
     * @static
     * @param {IProto_ICRONServer=} [properties] Properties to set
     * @returns {Proto_ICRONServer} Proto_ICRONServer instance
     */
    Proto_ICRONServer.create = function create(properties) {
        return new Proto_ICRONServer(properties);
    };

    /**
     * Encodes the specified Proto_ICRONServer message. Does not implicitly {@link Proto_ICRONServer.verify|verify} messages.
     * @function encode
     * @memberof Proto_ICRONServer
     * @static
     * @param {IProto_ICRONServer} message Proto_ICRONServer message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ICRONServer.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ServerCode != null && Object.hasOwnProperty.call(message, "ServerCode"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ServerCode);
        if (message.ServerIP != null && Object.hasOwnProperty.call(message, "ServerIP"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.ServerIP);
        if (message.ServerPort != null && Object.hasOwnProperty.call(message, "ServerPort"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.ServerPort);
        if (message.ServerAPIURL != null && Object.hasOwnProperty.call(message, "ServerAPIURL"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.ServerAPIURL);
        return writer;
    };

    /**
     * Encodes the specified Proto_ICRONServer message, length delimited. Does not implicitly {@link Proto_ICRONServer.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ICRONServer
     * @static
     * @param {IProto_ICRONServer} message Proto_ICRONServer message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ICRONServer.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ICRONServer message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ICRONServer
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ICRONServer} Proto_ICRONServer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ICRONServer.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ICRONServer();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ServerCode = reader.bytes();
                break;
            case 2:
                message.ServerIP = reader.bytes();
                break;
            case 3:
                message.ServerPort = reader.int32();
                break;
            case 4:
                message.ServerAPIURL = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ICRONServer message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ICRONServer
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ICRONServer} Proto_ICRONServer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ICRONServer.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ICRONServer message.
     * @function verify
     * @memberof Proto_ICRONServer
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ICRONServer.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ServerCode != null && message.hasOwnProperty("ServerCode"))
            if (!(message.ServerCode && typeof message.ServerCode.length === "number" || $util.isString(message.ServerCode)))
                return "ServerCode: buffer expected";
        if (message.ServerIP != null && message.hasOwnProperty("ServerIP"))
            if (!(message.ServerIP && typeof message.ServerIP.length === "number" || $util.isString(message.ServerIP)))
                return "ServerIP: buffer expected";
        if (message.ServerPort != null && message.hasOwnProperty("ServerPort"))
            if (!$util.isInteger(message.ServerPort))
                return "ServerPort: integer expected";
        if (message.ServerAPIURL != null && message.hasOwnProperty("ServerAPIURL"))
            if (!(message.ServerAPIURL && typeof message.ServerAPIURL.length === "number" || $util.isString(message.ServerAPIURL)))
                return "ServerAPIURL: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_ICRONServer message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ICRONServer
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ICRONServer} Proto_ICRONServer
     */
    Proto_ICRONServer.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ICRONServer)
            return object;
        var message = new $root.Proto_ICRONServer();
        if (object.ServerCode != null)
            if (typeof object.ServerCode === "string")
                $util.base64.decode(object.ServerCode, message.ServerCode = $util.newBuffer($util.base64.length(object.ServerCode)), 0);
            else if (object.ServerCode.length)
                message.ServerCode = object.ServerCode;
        if (object.ServerIP != null)
            if (typeof object.ServerIP === "string")
                $util.base64.decode(object.ServerIP, message.ServerIP = $util.newBuffer($util.base64.length(object.ServerIP)), 0);
            else if (object.ServerIP.length)
                message.ServerIP = object.ServerIP;
        if (object.ServerPort != null)
            message.ServerPort = object.ServerPort | 0;
        if (object.ServerAPIURL != null)
            if (typeof object.ServerAPIURL === "string")
                $util.base64.decode(object.ServerAPIURL, message.ServerAPIURL = $util.newBuffer($util.base64.length(object.ServerAPIURL)), 0);
            else if (object.ServerAPIURL.length)
                message.ServerAPIURL = object.ServerAPIURL;
        return message;
    };

    /**
     * Creates a plain object from a Proto_ICRONServer message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ICRONServer
     * @static
     * @param {Proto_ICRONServer} message Proto_ICRONServer
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ICRONServer.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ServerCode = "";
            else {
                object.ServerCode = [];
                if (options.bytes !== Array)
                    object.ServerCode = $util.newBuffer(object.ServerCode);
            }
            if (options.bytes === String)
                object.ServerIP = "";
            else {
                object.ServerIP = [];
                if (options.bytes !== Array)
                    object.ServerIP = $util.newBuffer(object.ServerIP);
            }
            object.ServerPort = 0;
            if (options.bytes === String)
                object.ServerAPIURL = "";
            else {
                object.ServerAPIURL = [];
                if (options.bytes !== Array)
                    object.ServerAPIURL = $util.newBuffer(object.ServerAPIURL);
            }
        }
        if (message.ServerCode != null && message.hasOwnProperty("ServerCode"))
            object.ServerCode = options.bytes === String ? $util.base64.encode(message.ServerCode, 0, message.ServerCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ServerCode) : message.ServerCode;
        if (message.ServerIP != null && message.hasOwnProperty("ServerIP"))
            object.ServerIP = options.bytes === String ? $util.base64.encode(message.ServerIP, 0, message.ServerIP.length) : options.bytes === Array ? Array.prototype.slice.call(message.ServerIP) : message.ServerIP;
        if (message.ServerPort != null && message.hasOwnProperty("ServerPort"))
            object.ServerPort = message.ServerPort;
        if (message.ServerAPIURL != null && message.hasOwnProperty("ServerAPIURL"))
            object.ServerAPIURL = options.bytes === String ? $util.base64.encode(message.ServerAPIURL, 0, message.ServerAPIURL.length) : options.bytes === Array ? Array.prototype.slice.call(message.ServerAPIURL) : message.ServerAPIURL;
        return object;
    };

    /**
     * Converts this Proto_ICRONServer to JSON.
     * @function toJSON
     * @memberof Proto_ICRONServer
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ICRONServer.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ICRONServer;
})();

$root.Proto_GUICommand = (function() {

    /**
     * Properties of a Proto_GUICommand.
     * @exports IProto_GUICommand
     * @interface IProto_GUICommand
     * @property {Uint8Array|null} [ServerCode] Proto_GUICommand ServerCode
     * @property {Uint8Array|null} [ServerIP] Proto_GUICommand ServerIP
     * @property {number|null} [ServerPort] Proto_GUICommand ServerPort
     * @property {Uint8Array|null} [ServerAPIURL] Proto_GUICommand ServerAPIURL
     * @property {Array.<IProto_GUICommand_Item>|null} [GUICommandItem] Proto_GUICommand GUICommandItem
     */

    /**
     * Constructs a new Proto_GUICommand.
     * @exports Proto_GUICommand
     * @classdesc Represents a Proto_GUICommand.
     * @implements IProto_GUICommand
     * @constructor
     * @param {IProto_GUICommand=} [properties] Properties to set
     */
    function Proto_GUICommand(properties) {
        this.GUICommandItem = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GUICommand ServerCode.
     * @member {Uint8Array} ServerCode
     * @memberof Proto_GUICommand
     * @instance
     */
    Proto_GUICommand.prototype.ServerCode = $util.newBuffer([]);

    /**
     * Proto_GUICommand ServerIP.
     * @member {Uint8Array} ServerIP
     * @memberof Proto_GUICommand
     * @instance
     */
    Proto_GUICommand.prototype.ServerIP = $util.newBuffer([]);

    /**
     * Proto_GUICommand ServerPort.
     * @member {number} ServerPort
     * @memberof Proto_GUICommand
     * @instance
     */
    Proto_GUICommand.prototype.ServerPort = 0;

    /**
     * Proto_GUICommand ServerAPIURL.
     * @member {Uint8Array} ServerAPIURL
     * @memberof Proto_GUICommand
     * @instance
     */
    Proto_GUICommand.prototype.ServerAPIURL = $util.newBuffer([]);

    /**
     * Proto_GUICommand GUICommandItem.
     * @member {Array.<IProto_GUICommand_Item>} GUICommandItem
     * @memberof Proto_GUICommand
     * @instance
     */
    Proto_GUICommand.prototype.GUICommandItem = $util.emptyArray;

    /**
     * Creates a new Proto_GUICommand instance using the specified properties.
     * @function create
     * @memberof Proto_GUICommand
     * @static
     * @param {IProto_GUICommand=} [properties] Properties to set
     * @returns {Proto_GUICommand} Proto_GUICommand instance
     */
    Proto_GUICommand.create = function create(properties) {
        return new Proto_GUICommand(properties);
    };

    /**
     * Encodes the specified Proto_GUICommand message. Does not implicitly {@link Proto_GUICommand.verify|verify} messages.
     * @function encode
     * @memberof Proto_GUICommand
     * @static
     * @param {IProto_GUICommand} message Proto_GUICommand message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ServerCode != null && Object.hasOwnProperty.call(message, "ServerCode"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ServerCode);
        if (message.ServerIP != null && Object.hasOwnProperty.call(message, "ServerIP"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.ServerIP);
        if (message.ServerPort != null && Object.hasOwnProperty.call(message, "ServerPort"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.ServerPort);
        if (message.ServerAPIURL != null && Object.hasOwnProperty.call(message, "ServerAPIURL"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.ServerAPIURL);
        if (message.GUICommandItem != null && message.GUICommandItem.length)
            for (var i = 0; i < message.GUICommandItem.length; ++i)
                $root.Proto_GUICommand_Item.encode(message.GUICommandItem[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_GUICommand message, length delimited. Does not implicitly {@link Proto_GUICommand.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GUICommand
     * @static
     * @param {IProto_GUICommand} message Proto_GUICommand message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GUICommand message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GUICommand
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GUICommand} Proto_GUICommand
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GUICommand();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ServerCode = reader.bytes();
                break;
            case 2:
                message.ServerIP = reader.bytes();
                break;
            case 3:
                message.ServerPort = reader.int32();
                break;
            case 4:
                message.ServerAPIURL = reader.bytes();
                break;
            case 10:
                if (!(message.GUICommandItem && message.GUICommandItem.length))
                    message.GUICommandItem = [];
                message.GUICommandItem.push($root.Proto_GUICommand_Item.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GUICommand message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GUICommand
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GUICommand} Proto_GUICommand
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GUICommand message.
     * @function verify
     * @memberof Proto_GUICommand
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GUICommand.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ServerCode != null && message.hasOwnProperty("ServerCode"))
            if (!(message.ServerCode && typeof message.ServerCode.length === "number" || $util.isString(message.ServerCode)))
                return "ServerCode: buffer expected";
        if (message.ServerIP != null && message.hasOwnProperty("ServerIP"))
            if (!(message.ServerIP && typeof message.ServerIP.length === "number" || $util.isString(message.ServerIP)))
                return "ServerIP: buffer expected";
        if (message.ServerPort != null && message.hasOwnProperty("ServerPort"))
            if (!$util.isInteger(message.ServerPort))
                return "ServerPort: integer expected";
        if (message.ServerAPIURL != null && message.hasOwnProperty("ServerAPIURL"))
            if (!(message.ServerAPIURL && typeof message.ServerAPIURL.length === "number" || $util.isString(message.ServerAPIURL)))
                return "ServerAPIURL: buffer expected";
        if (message.GUICommandItem != null && message.hasOwnProperty("GUICommandItem")) {
            if (!Array.isArray(message.GUICommandItem))
                return "GUICommandItem: array expected";
            for (var i = 0; i < message.GUICommandItem.length; ++i) {
                var error = $root.Proto_GUICommand_Item.verify(message.GUICommandItem[i]);
                if (error)
                    return "GUICommandItem." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_GUICommand message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GUICommand
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GUICommand} Proto_GUICommand
     */
    Proto_GUICommand.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GUICommand)
            return object;
        var message = new $root.Proto_GUICommand();
        if (object.ServerCode != null)
            if (typeof object.ServerCode === "string")
                $util.base64.decode(object.ServerCode, message.ServerCode = $util.newBuffer($util.base64.length(object.ServerCode)), 0);
            else if (object.ServerCode.length)
                message.ServerCode = object.ServerCode;
        if (object.ServerIP != null)
            if (typeof object.ServerIP === "string")
                $util.base64.decode(object.ServerIP, message.ServerIP = $util.newBuffer($util.base64.length(object.ServerIP)), 0);
            else if (object.ServerIP.length)
                message.ServerIP = object.ServerIP;
        if (object.ServerPort != null)
            message.ServerPort = object.ServerPort | 0;
        if (object.ServerAPIURL != null)
            if (typeof object.ServerAPIURL === "string")
                $util.base64.decode(object.ServerAPIURL, message.ServerAPIURL = $util.newBuffer($util.base64.length(object.ServerAPIURL)), 0);
            else if (object.ServerAPIURL.length)
                message.ServerAPIURL = object.ServerAPIURL;
        if (object.GUICommandItem) {
            if (!Array.isArray(object.GUICommandItem))
                throw TypeError(".Proto_GUICommand.GUICommandItem: array expected");
            message.GUICommandItem = [];
            for (var i = 0; i < object.GUICommandItem.length; ++i) {
                if (typeof object.GUICommandItem[i] !== "object")
                    throw TypeError(".Proto_GUICommand.GUICommandItem: object expected");
                message.GUICommandItem[i] = $root.Proto_GUICommand_Item.fromObject(object.GUICommandItem[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_GUICommand message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GUICommand
     * @static
     * @param {Proto_GUICommand} message Proto_GUICommand
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GUICommand.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.GUICommandItem = [];
        if (options.defaults) {
            if (options.bytes === String)
                object.ServerCode = "";
            else {
                object.ServerCode = [];
                if (options.bytes !== Array)
                    object.ServerCode = $util.newBuffer(object.ServerCode);
            }
            if (options.bytes === String)
                object.ServerIP = "";
            else {
                object.ServerIP = [];
                if (options.bytes !== Array)
                    object.ServerIP = $util.newBuffer(object.ServerIP);
            }
            object.ServerPort = 0;
            if (options.bytes === String)
                object.ServerAPIURL = "";
            else {
                object.ServerAPIURL = [];
                if (options.bytes !== Array)
                    object.ServerAPIURL = $util.newBuffer(object.ServerAPIURL);
            }
        }
        if (message.ServerCode != null && message.hasOwnProperty("ServerCode"))
            object.ServerCode = options.bytes === String ? $util.base64.encode(message.ServerCode, 0, message.ServerCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ServerCode) : message.ServerCode;
        if (message.ServerIP != null && message.hasOwnProperty("ServerIP"))
            object.ServerIP = options.bytes === String ? $util.base64.encode(message.ServerIP, 0, message.ServerIP.length) : options.bytes === Array ? Array.prototype.slice.call(message.ServerIP) : message.ServerIP;
        if (message.ServerPort != null && message.hasOwnProperty("ServerPort"))
            object.ServerPort = message.ServerPort;
        if (message.ServerAPIURL != null && message.hasOwnProperty("ServerAPIURL"))
            object.ServerAPIURL = options.bytes === String ? $util.base64.encode(message.ServerAPIURL, 0, message.ServerAPIURL.length) : options.bytes === Array ? Array.prototype.slice.call(message.ServerAPIURL) : message.ServerAPIURL;
        if (message.GUICommandItem && message.GUICommandItem.length) {
            object.GUICommandItem = [];
            for (var j = 0; j < message.GUICommandItem.length; ++j)
                object.GUICommandItem[j] = $root.Proto_GUICommand_Item.toObject(message.GUICommandItem[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_GUICommand to JSON.
     * @function toJSON
     * @memberof Proto_GUICommand
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GUICommand.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GUICommand;
})();

$root.Proto_GUICommand_Item = (function() {

    /**
     * Properties of a Proto_GUICommand_Item.
     * @exports IProto_GUICommand_Item
     * @interface IProto_GUICommand_Item
     * @property {number|null} [WindowIndex] Proto_GUICommand_Item WindowIndex
     * @property {IProto_GUICommand_Workspace|null} [Workspace] Proto_GUICommand_Item Workspace
     * @property {IProto_GUICommand_Explorer|null} [Explorer] Proto_GUICommand_Item Explorer
     * @property {IProto_GUICommand_ChildWorkspace|null} [ChildWorkspace] Proto_GUICommand_Item ChildWorkspace
     * @property {IProto_GUICommand_Home|null} [Home] Proto_GUICommand_Item Home
     * @property {IProto_GUICommand_Document|null} [Document] Proto_GUICommand_Item Document
     * @property {IProto_GUICommand_Dashboard|null} [Dashboard] Proto_GUICommand_Item Dashboard
     */

    /**
     * Constructs a new Proto_GUICommand_Item.
     * @exports Proto_GUICommand_Item
     * @classdesc Represents a Proto_GUICommand_Item.
     * @implements IProto_GUICommand_Item
     * @constructor
     * @param {IProto_GUICommand_Item=} [properties] Properties to set
     */
    function Proto_GUICommand_Item(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GUICommand_Item WindowIndex.
     * @member {number} WindowIndex
     * @memberof Proto_GUICommand_Item
     * @instance
     */
    Proto_GUICommand_Item.prototype.WindowIndex = 0;

    /**
     * Proto_GUICommand_Item Workspace.
     * @member {IProto_GUICommand_Workspace|null|undefined} Workspace
     * @memberof Proto_GUICommand_Item
     * @instance
     */
    Proto_GUICommand_Item.prototype.Workspace = null;

    /**
     * Proto_GUICommand_Item Explorer.
     * @member {IProto_GUICommand_Explorer|null|undefined} Explorer
     * @memberof Proto_GUICommand_Item
     * @instance
     */
    Proto_GUICommand_Item.prototype.Explorer = null;

    /**
     * Proto_GUICommand_Item ChildWorkspace.
     * @member {IProto_GUICommand_ChildWorkspace|null|undefined} ChildWorkspace
     * @memberof Proto_GUICommand_Item
     * @instance
     */
    Proto_GUICommand_Item.prototype.ChildWorkspace = null;

    /**
     * Proto_GUICommand_Item Home.
     * @member {IProto_GUICommand_Home|null|undefined} Home
     * @memberof Proto_GUICommand_Item
     * @instance
     */
    Proto_GUICommand_Item.prototype.Home = null;

    /**
     * Proto_GUICommand_Item Document.
     * @member {IProto_GUICommand_Document|null|undefined} Document
     * @memberof Proto_GUICommand_Item
     * @instance
     */
    Proto_GUICommand_Item.prototype.Document = null;

    /**
     * Proto_GUICommand_Item Dashboard.
     * @member {IProto_GUICommand_Dashboard|null|undefined} Dashboard
     * @memberof Proto_GUICommand_Item
     * @instance
     */
    Proto_GUICommand_Item.prototype.Dashboard = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_GUICommand_Item value.
     * @member {"Workspace"|"Explorer"|"ChildWorkspace"|"Home"|"Document"|"Dashboard"|undefined} value
     * @memberof Proto_GUICommand_Item
     * @instance
     */
    Object.defineProperty(Proto_GUICommand_Item.prototype, "value", {
        get: $util.oneOfGetter($oneOfFields = ["Workspace", "Explorer", "ChildWorkspace", "Home", "Document", "Dashboard"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_GUICommand_Item instance using the specified properties.
     * @function create
     * @memberof Proto_GUICommand_Item
     * @static
     * @param {IProto_GUICommand_Item=} [properties] Properties to set
     * @returns {Proto_GUICommand_Item} Proto_GUICommand_Item instance
     */
    Proto_GUICommand_Item.create = function create(properties) {
        return new Proto_GUICommand_Item(properties);
    };

    /**
     * Encodes the specified Proto_GUICommand_Item message. Does not implicitly {@link Proto_GUICommand_Item.verify|verify} messages.
     * @function encode
     * @memberof Proto_GUICommand_Item
     * @static
     * @param {IProto_GUICommand_Item} message Proto_GUICommand_Item message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Item.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.WindowIndex != null && Object.hasOwnProperty.call(message, "WindowIndex"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.WindowIndex);
        if (message.Workspace != null && Object.hasOwnProperty.call(message, "Workspace"))
            $root.Proto_GUICommand_Workspace.encode(message.Workspace, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
        if (message.Explorer != null && Object.hasOwnProperty.call(message, "Explorer"))
            $root.Proto_GUICommand_Explorer.encode(message.Explorer, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
        if (message.ChildWorkspace != null && Object.hasOwnProperty.call(message, "ChildWorkspace"))
            $root.Proto_GUICommand_ChildWorkspace.encode(message.ChildWorkspace, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
        if (message.Home != null && Object.hasOwnProperty.call(message, "Home"))
            $root.Proto_GUICommand_Home.encode(message.Home, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
        if (message.Document != null && Object.hasOwnProperty.call(message, "Document"))
            $root.Proto_GUICommand_Document.encode(message.Document, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
        if (message.Dashboard != null && Object.hasOwnProperty.call(message, "Dashboard"))
            $root.Proto_GUICommand_Dashboard.encode(message.Dashboard, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_GUICommand_Item message, length delimited. Does not implicitly {@link Proto_GUICommand_Item.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GUICommand_Item
     * @static
     * @param {IProto_GUICommand_Item} message Proto_GUICommand_Item message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Item.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GUICommand_Item message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GUICommand_Item
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GUICommand_Item} Proto_GUICommand_Item
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Item.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GUICommand_Item();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.WindowIndex = reader.int32();
                break;
            case 10:
                message.Workspace = $root.Proto_GUICommand_Workspace.decode(reader, reader.uint32());
                break;
            case 11:
                message.Explorer = $root.Proto_GUICommand_Explorer.decode(reader, reader.uint32());
                break;
            case 12:
                message.ChildWorkspace = $root.Proto_GUICommand_ChildWorkspace.decode(reader, reader.uint32());
                break;
            case 13:
                message.Home = $root.Proto_GUICommand_Home.decode(reader, reader.uint32());
                break;
            case 14:
                message.Document = $root.Proto_GUICommand_Document.decode(reader, reader.uint32());
                break;
            case 15:
                message.Dashboard = $root.Proto_GUICommand_Dashboard.decode(reader, reader.uint32());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GUICommand_Item message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GUICommand_Item
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GUICommand_Item} Proto_GUICommand_Item
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Item.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GUICommand_Item message.
     * @function verify
     * @memberof Proto_GUICommand_Item
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GUICommand_Item.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.WindowIndex != null && message.hasOwnProperty("WindowIndex"))
            if (!$util.isInteger(message.WindowIndex))
                return "WindowIndex: integer expected";
        if (message.Workspace != null && message.hasOwnProperty("Workspace")) {
            properties.value = 1;
            {
                var error = $root.Proto_GUICommand_Workspace.verify(message.Workspace);
                if (error)
                    return "Workspace." + error;
            }
        }
        if (message.Explorer != null && message.hasOwnProperty("Explorer")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_GUICommand_Explorer.verify(message.Explorer);
                if (error)
                    return "Explorer." + error;
            }
        }
        if (message.ChildWorkspace != null && message.hasOwnProperty("ChildWorkspace")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_GUICommand_ChildWorkspace.verify(message.ChildWorkspace);
                if (error)
                    return "ChildWorkspace." + error;
            }
        }
        if (message.Home != null && message.hasOwnProperty("Home")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_GUICommand_Home.verify(message.Home);
                if (error)
                    return "Home." + error;
            }
        }
        if (message.Document != null && message.hasOwnProperty("Document")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_GUICommand_Document.verify(message.Document);
                if (error)
                    return "Document." + error;
            }
        }
        if (message.Dashboard != null && message.hasOwnProperty("Dashboard")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            {
                var error = $root.Proto_GUICommand_Dashboard.verify(message.Dashboard);
                if (error)
                    return "Dashboard." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_GUICommand_Item message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GUICommand_Item
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GUICommand_Item} Proto_GUICommand_Item
     */
    Proto_GUICommand_Item.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GUICommand_Item)
            return object;
        var message = new $root.Proto_GUICommand_Item();
        if (object.WindowIndex != null)
            message.WindowIndex = object.WindowIndex | 0;
        if (object.Workspace != null) {
            if (typeof object.Workspace !== "object")
                throw TypeError(".Proto_GUICommand_Item.Workspace: object expected");
            message.Workspace = $root.Proto_GUICommand_Workspace.fromObject(object.Workspace);
        }
        if (object.Explorer != null) {
            if (typeof object.Explorer !== "object")
                throw TypeError(".Proto_GUICommand_Item.Explorer: object expected");
            message.Explorer = $root.Proto_GUICommand_Explorer.fromObject(object.Explorer);
        }
        if (object.ChildWorkspace != null) {
            if (typeof object.ChildWorkspace !== "object")
                throw TypeError(".Proto_GUICommand_Item.ChildWorkspace: object expected");
            message.ChildWorkspace = $root.Proto_GUICommand_ChildWorkspace.fromObject(object.ChildWorkspace);
        }
        if (object.Home != null) {
            if (typeof object.Home !== "object")
                throw TypeError(".Proto_GUICommand_Item.Home: object expected");
            message.Home = $root.Proto_GUICommand_Home.fromObject(object.Home);
        }
        if (object.Document != null) {
            if (typeof object.Document !== "object")
                throw TypeError(".Proto_GUICommand_Item.Document: object expected");
            message.Document = $root.Proto_GUICommand_Document.fromObject(object.Document);
        }
        if (object.Dashboard != null) {
            if (typeof object.Dashboard !== "object")
                throw TypeError(".Proto_GUICommand_Item.Dashboard: object expected");
            message.Dashboard = $root.Proto_GUICommand_Dashboard.fromObject(object.Dashboard);
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_GUICommand_Item message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GUICommand_Item
     * @static
     * @param {Proto_GUICommand_Item} message Proto_GUICommand_Item
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GUICommand_Item.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.WindowIndex = 0;
        if (message.WindowIndex != null && message.hasOwnProperty("WindowIndex"))
            object.WindowIndex = message.WindowIndex;
        if (message.Workspace != null && message.hasOwnProperty("Workspace")) {
            object.Workspace = $root.Proto_GUICommand_Workspace.toObject(message.Workspace, options);
            if (options.oneofs)
                object.value = "Workspace";
        }
        if (message.Explorer != null && message.hasOwnProperty("Explorer")) {
            object.Explorer = $root.Proto_GUICommand_Explorer.toObject(message.Explorer, options);
            if (options.oneofs)
                object.value = "Explorer";
        }
        if (message.ChildWorkspace != null && message.hasOwnProperty("ChildWorkspace")) {
            object.ChildWorkspace = $root.Proto_GUICommand_ChildWorkspace.toObject(message.ChildWorkspace, options);
            if (options.oneofs)
                object.value = "ChildWorkspace";
        }
        if (message.Home != null && message.hasOwnProperty("Home")) {
            object.Home = $root.Proto_GUICommand_Home.toObject(message.Home, options);
            if (options.oneofs)
                object.value = "Home";
        }
        if (message.Document != null && message.hasOwnProperty("Document")) {
            object.Document = $root.Proto_GUICommand_Document.toObject(message.Document, options);
            if (options.oneofs)
                object.value = "Document";
        }
        if (message.Dashboard != null && message.hasOwnProperty("Dashboard")) {
            object.Dashboard = $root.Proto_GUICommand_Dashboard.toObject(message.Dashboard, options);
            if (options.oneofs)
                object.value = "Dashboard";
        }
        return object;
    };

    /**
     * Converts this Proto_GUICommand_Item to JSON.
     * @function toJSON
     * @memberof Proto_GUICommand_Item
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GUICommand_Item.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GUICommand_Item;
})();

$root.Proto_GUICommand_Workspace = (function() {

    /**
     * Properties of a Proto_GUICommand_Workspace.
     * @exports IProto_GUICommand_Workspace
     * @interface IProto_GUICommand_Workspace
     * @property {number|null} [Operation] Proto_GUICommand_Workspace Operation
     * @property {Uint8Array|null} [WSName] Proto_GUICommand_Workspace WSName
     * @property {IProto_ReferenceIDWithCN|null} [ParentReferenceIDWithCN] Proto_GUICommand_Workspace ParentReferenceIDWithCN
     * @property {Uint8Array|null} [WSRelation] Proto_GUICommand_Workspace WSRelation
     * @property {Uint8Array|null} [PresetName] Proto_GUICommand_Workspace PresetName
     * @property {Uint8Array|null} [GroupPresetName] Proto_GUICommand_Workspace GroupPresetName
     * @property {IProto_Scenario|null} [WSScenario] Proto_GUICommand_Workspace WSScenario
     * @property {Array.<IProto_ReferenceIDWithCN>|null} [ObjectToSelect] Proto_GUICommand_Workspace ObjectToSelect
     * @property {IProto_ReferenceIDWithCN|null} [GUIParameterObjectReferenceIDWithCN] Proto_GUICommand_Workspace GUIParameterObjectReferenceIDWithCN
     * @property {number|null} [GUIParameterEditOption] Proto_GUICommand_Workspace GUIParameterEditOption
     */

    /**
     * Constructs a new Proto_GUICommand_Workspace.
     * @exports Proto_GUICommand_Workspace
     * @classdesc Represents a Proto_GUICommand_Workspace.
     * @implements IProto_GUICommand_Workspace
     * @constructor
     * @param {IProto_GUICommand_Workspace=} [properties] Properties to set
     */
    function Proto_GUICommand_Workspace(properties) {
        this.ObjectToSelect = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GUICommand_Workspace Operation.
     * @member {number} Operation
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.Operation = 0;

    /**
     * Proto_GUICommand_Workspace WSName.
     * @member {Uint8Array} WSName
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.WSName = $util.newBuffer([]);

    /**
     * Proto_GUICommand_Workspace ParentReferenceIDWithCN.
     * @member {IProto_ReferenceIDWithCN|null|undefined} ParentReferenceIDWithCN
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.ParentReferenceIDWithCN = null;

    /**
     * Proto_GUICommand_Workspace WSRelation.
     * @member {Uint8Array} WSRelation
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.WSRelation = $util.newBuffer([]);

    /**
     * Proto_GUICommand_Workspace PresetName.
     * @member {Uint8Array} PresetName
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.PresetName = $util.newBuffer([]);

    /**
     * Proto_GUICommand_Workspace GroupPresetName.
     * @member {Uint8Array} GroupPresetName
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.GroupPresetName = $util.newBuffer([]);

    /**
     * Proto_GUICommand_Workspace WSScenario.
     * @member {IProto_Scenario|null|undefined} WSScenario
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.WSScenario = null;

    /**
     * Proto_GUICommand_Workspace ObjectToSelect.
     * @member {Array.<IProto_ReferenceIDWithCN>} ObjectToSelect
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.ObjectToSelect = $util.emptyArray;

    /**
     * Proto_GUICommand_Workspace GUIParameterObjectReferenceIDWithCN.
     * @member {IProto_ReferenceIDWithCN|null|undefined} GUIParameterObjectReferenceIDWithCN
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.GUIParameterObjectReferenceIDWithCN = null;

    /**
     * Proto_GUICommand_Workspace GUIParameterEditOption.
     * @member {number} GUIParameterEditOption
     * @memberof Proto_GUICommand_Workspace
     * @instance
     */
    Proto_GUICommand_Workspace.prototype.GUIParameterEditOption = 0;

    /**
     * Creates a new Proto_GUICommand_Workspace instance using the specified properties.
     * @function create
     * @memberof Proto_GUICommand_Workspace
     * @static
     * @param {IProto_GUICommand_Workspace=} [properties] Properties to set
     * @returns {Proto_GUICommand_Workspace} Proto_GUICommand_Workspace instance
     */
    Proto_GUICommand_Workspace.create = function create(properties) {
        return new Proto_GUICommand_Workspace(properties);
    };

    /**
     * Encodes the specified Proto_GUICommand_Workspace message. Does not implicitly {@link Proto_GUICommand_Workspace.verify|verify} messages.
     * @function encode
     * @memberof Proto_GUICommand_Workspace
     * @static
     * @param {IProto_GUICommand_Workspace} message Proto_GUICommand_Workspace message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Workspace.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operation != null && Object.hasOwnProperty.call(message, "Operation"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Operation);
        if (message.WSName != null && Object.hasOwnProperty.call(message, "WSName"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.WSName);
        if (message.ParentReferenceIDWithCN != null && Object.hasOwnProperty.call(message, "ParentReferenceIDWithCN"))
            $root.Proto_ReferenceIDWithCN.encode(message.ParentReferenceIDWithCN, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
        if (message.WSRelation != null && Object.hasOwnProperty.call(message, "WSRelation"))
            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.WSRelation);
        if (message.PresetName != null && Object.hasOwnProperty.call(message, "PresetName"))
            writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.PresetName);
        if (message.GroupPresetName != null && Object.hasOwnProperty.call(message, "GroupPresetName"))
            writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.GroupPresetName);
        if (message.WSScenario != null && Object.hasOwnProperty.call(message, "WSScenario"))
            $root.Proto_Scenario.encode(message.WSScenario, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
        if (message.ObjectToSelect != null && message.ObjectToSelect.length)
            for (var i = 0; i < message.ObjectToSelect.length; ++i)
                $root.Proto_ReferenceIDWithCN.encode(message.ObjectToSelect[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
        if (message.GUIParameterObjectReferenceIDWithCN != null && Object.hasOwnProperty.call(message, "GUIParameterObjectReferenceIDWithCN"))
            $root.Proto_ReferenceIDWithCN.encode(message.GUIParameterObjectReferenceIDWithCN, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
        if (message.GUIParameterEditOption != null && Object.hasOwnProperty.call(message, "GUIParameterEditOption"))
            writer.uint32(/* id 21, wireType 0 =*/168).int32(message.GUIParameterEditOption);
        return writer;
    };

    /**
     * Encodes the specified Proto_GUICommand_Workspace message, length delimited. Does not implicitly {@link Proto_GUICommand_Workspace.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GUICommand_Workspace
     * @static
     * @param {IProto_GUICommand_Workspace} message Proto_GUICommand_Workspace message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Workspace.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GUICommand_Workspace message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GUICommand_Workspace
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GUICommand_Workspace} Proto_GUICommand_Workspace
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Workspace.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GUICommand_Workspace();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 2:
                message.Operation = reader.int32();
                break;
            case 4:
                message.WSName = reader.bytes();
                break;
            case 6:
                message.ParentReferenceIDWithCN = $root.Proto_ReferenceIDWithCN.decode(reader, reader.uint32());
                break;
            case 7:
                message.WSRelation = reader.bytes();
                break;
            case 8:
                message.PresetName = reader.bytes();
                break;
            case 9:
                message.GroupPresetName = reader.bytes();
                break;
            case 10:
                message.WSScenario = $root.Proto_Scenario.decode(reader, reader.uint32());
                break;
            case 15:
                if (!(message.ObjectToSelect && message.ObjectToSelect.length))
                    message.ObjectToSelect = [];
                message.ObjectToSelect.push($root.Proto_ReferenceIDWithCN.decode(reader, reader.uint32()));
                break;
            case 20:
                message.GUIParameterObjectReferenceIDWithCN = $root.Proto_ReferenceIDWithCN.decode(reader, reader.uint32());
                break;
            case 21:
                message.GUIParameterEditOption = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GUICommand_Workspace message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GUICommand_Workspace
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GUICommand_Workspace} Proto_GUICommand_Workspace
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Workspace.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GUICommand_Workspace message.
     * @function verify
     * @memberof Proto_GUICommand_Workspace
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GUICommand_Workspace.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            if (!$util.isInteger(message.Operation))
                return "Operation: integer expected";
        if (message.WSName != null && message.hasOwnProperty("WSName"))
            if (!(message.WSName && typeof message.WSName.length === "number" || $util.isString(message.WSName)))
                return "WSName: buffer expected";
        if (message.ParentReferenceIDWithCN != null && message.hasOwnProperty("ParentReferenceIDWithCN")) {
            var error = $root.Proto_ReferenceIDWithCN.verify(message.ParentReferenceIDWithCN);
            if (error)
                return "ParentReferenceIDWithCN." + error;
        }
        if (message.WSRelation != null && message.hasOwnProperty("WSRelation"))
            if (!(message.WSRelation && typeof message.WSRelation.length === "number" || $util.isString(message.WSRelation)))
                return "WSRelation: buffer expected";
        if (message.PresetName != null && message.hasOwnProperty("PresetName"))
            if (!(message.PresetName && typeof message.PresetName.length === "number" || $util.isString(message.PresetName)))
                return "PresetName: buffer expected";
        if (message.GroupPresetName != null && message.hasOwnProperty("GroupPresetName"))
            if (!(message.GroupPresetName && typeof message.GroupPresetName.length === "number" || $util.isString(message.GroupPresetName)))
                return "GroupPresetName: buffer expected";
        if (message.WSScenario != null && message.hasOwnProperty("WSScenario")) {
            var error = $root.Proto_Scenario.verify(message.WSScenario);
            if (error)
                return "WSScenario." + error;
        }
        if (message.ObjectToSelect != null && message.hasOwnProperty("ObjectToSelect")) {
            if (!Array.isArray(message.ObjectToSelect))
                return "ObjectToSelect: array expected";
            for (var i = 0; i < message.ObjectToSelect.length; ++i) {
                var error = $root.Proto_ReferenceIDWithCN.verify(message.ObjectToSelect[i]);
                if (error)
                    return "ObjectToSelect." + error;
            }
        }
        if (message.GUIParameterObjectReferenceIDWithCN != null && message.hasOwnProperty("GUIParameterObjectReferenceIDWithCN")) {
            var error = $root.Proto_ReferenceIDWithCN.verify(message.GUIParameterObjectReferenceIDWithCN);
            if (error)
                return "GUIParameterObjectReferenceIDWithCN." + error;
        }
        if (message.GUIParameterEditOption != null && message.hasOwnProperty("GUIParameterEditOption"))
            if (!$util.isInteger(message.GUIParameterEditOption))
                return "GUIParameterEditOption: integer expected";
        return null;
    };

    /**
     * Creates a Proto_GUICommand_Workspace message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GUICommand_Workspace
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GUICommand_Workspace} Proto_GUICommand_Workspace
     */
    Proto_GUICommand_Workspace.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GUICommand_Workspace)
            return object;
        var message = new $root.Proto_GUICommand_Workspace();
        if (object.Operation != null)
            message.Operation = object.Operation | 0;
        if (object.WSName != null)
            if (typeof object.WSName === "string")
                $util.base64.decode(object.WSName, message.WSName = $util.newBuffer($util.base64.length(object.WSName)), 0);
            else if (object.WSName.length)
                message.WSName = object.WSName;
        if (object.ParentReferenceIDWithCN != null) {
            if (typeof object.ParentReferenceIDWithCN !== "object")
                throw TypeError(".Proto_GUICommand_Workspace.ParentReferenceIDWithCN: object expected");
            message.ParentReferenceIDWithCN = $root.Proto_ReferenceIDWithCN.fromObject(object.ParentReferenceIDWithCN);
        }
        if (object.WSRelation != null)
            if (typeof object.WSRelation === "string")
                $util.base64.decode(object.WSRelation, message.WSRelation = $util.newBuffer($util.base64.length(object.WSRelation)), 0);
            else if (object.WSRelation.length)
                message.WSRelation = object.WSRelation;
        if (object.PresetName != null)
            if (typeof object.PresetName === "string")
                $util.base64.decode(object.PresetName, message.PresetName = $util.newBuffer($util.base64.length(object.PresetName)), 0);
            else if (object.PresetName.length)
                message.PresetName = object.PresetName;
        if (object.GroupPresetName != null)
            if (typeof object.GroupPresetName === "string")
                $util.base64.decode(object.GroupPresetName, message.GroupPresetName = $util.newBuffer($util.base64.length(object.GroupPresetName)), 0);
            else if (object.GroupPresetName.length)
                message.GroupPresetName = object.GroupPresetName;
        if (object.WSScenario != null) {
            if (typeof object.WSScenario !== "object")
                throw TypeError(".Proto_GUICommand_Workspace.WSScenario: object expected");
            message.WSScenario = $root.Proto_Scenario.fromObject(object.WSScenario);
        }
        if (object.ObjectToSelect) {
            if (!Array.isArray(object.ObjectToSelect))
                throw TypeError(".Proto_GUICommand_Workspace.ObjectToSelect: array expected");
            message.ObjectToSelect = [];
            for (var i = 0; i < object.ObjectToSelect.length; ++i) {
                if (typeof object.ObjectToSelect[i] !== "object")
                    throw TypeError(".Proto_GUICommand_Workspace.ObjectToSelect: object expected");
                message.ObjectToSelect[i] = $root.Proto_ReferenceIDWithCN.fromObject(object.ObjectToSelect[i]);
            }
        }
        if (object.GUIParameterObjectReferenceIDWithCN != null) {
            if (typeof object.GUIParameterObjectReferenceIDWithCN !== "object")
                throw TypeError(".Proto_GUICommand_Workspace.GUIParameterObjectReferenceIDWithCN: object expected");
            message.GUIParameterObjectReferenceIDWithCN = $root.Proto_ReferenceIDWithCN.fromObject(object.GUIParameterObjectReferenceIDWithCN);
        }
        if (object.GUIParameterEditOption != null)
            message.GUIParameterEditOption = object.GUIParameterEditOption | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GUICommand_Workspace message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GUICommand_Workspace
     * @static
     * @param {Proto_GUICommand_Workspace} message Proto_GUICommand_Workspace
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GUICommand_Workspace.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.ObjectToSelect = [];
        if (options.defaults) {
            object.Operation = 0;
            if (options.bytes === String)
                object.WSName = "";
            else {
                object.WSName = [];
                if (options.bytes !== Array)
                    object.WSName = $util.newBuffer(object.WSName);
            }
            object.ParentReferenceIDWithCN = null;
            if (options.bytes === String)
                object.WSRelation = "";
            else {
                object.WSRelation = [];
                if (options.bytes !== Array)
                    object.WSRelation = $util.newBuffer(object.WSRelation);
            }
            if (options.bytes === String)
                object.PresetName = "";
            else {
                object.PresetName = [];
                if (options.bytes !== Array)
                    object.PresetName = $util.newBuffer(object.PresetName);
            }
            if (options.bytes === String)
                object.GroupPresetName = "";
            else {
                object.GroupPresetName = [];
                if (options.bytes !== Array)
                    object.GroupPresetName = $util.newBuffer(object.GroupPresetName);
            }
            object.WSScenario = null;
            object.GUIParameterObjectReferenceIDWithCN = null;
            object.GUIParameterEditOption = 0;
        }
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            object.Operation = message.Operation;
        if (message.WSName != null && message.hasOwnProperty("WSName"))
            object.WSName = options.bytes === String ? $util.base64.encode(message.WSName, 0, message.WSName.length) : options.bytes === Array ? Array.prototype.slice.call(message.WSName) : message.WSName;
        if (message.ParentReferenceIDWithCN != null && message.hasOwnProperty("ParentReferenceIDWithCN"))
            object.ParentReferenceIDWithCN = $root.Proto_ReferenceIDWithCN.toObject(message.ParentReferenceIDWithCN, options);
        if (message.WSRelation != null && message.hasOwnProperty("WSRelation"))
            object.WSRelation = options.bytes === String ? $util.base64.encode(message.WSRelation, 0, message.WSRelation.length) : options.bytes === Array ? Array.prototype.slice.call(message.WSRelation) : message.WSRelation;
        if (message.PresetName != null && message.hasOwnProperty("PresetName"))
            object.PresetName = options.bytes === String ? $util.base64.encode(message.PresetName, 0, message.PresetName.length) : options.bytes === Array ? Array.prototype.slice.call(message.PresetName) : message.PresetName;
        if (message.GroupPresetName != null && message.hasOwnProperty("GroupPresetName"))
            object.GroupPresetName = options.bytes === String ? $util.base64.encode(message.GroupPresetName, 0, message.GroupPresetName.length) : options.bytes === Array ? Array.prototype.slice.call(message.GroupPresetName) : message.GroupPresetName;
        if (message.WSScenario != null && message.hasOwnProperty("WSScenario"))
            object.WSScenario = $root.Proto_Scenario.toObject(message.WSScenario, options);
        if (message.ObjectToSelect && message.ObjectToSelect.length) {
            object.ObjectToSelect = [];
            for (var j = 0; j < message.ObjectToSelect.length; ++j)
                object.ObjectToSelect[j] = $root.Proto_ReferenceIDWithCN.toObject(message.ObjectToSelect[j], options);
        }
        if (message.GUIParameterObjectReferenceIDWithCN != null && message.hasOwnProperty("GUIParameterObjectReferenceIDWithCN"))
            object.GUIParameterObjectReferenceIDWithCN = $root.Proto_ReferenceIDWithCN.toObject(message.GUIParameterObjectReferenceIDWithCN, options);
        if (message.GUIParameterEditOption != null && message.hasOwnProperty("GUIParameterEditOption"))
            object.GUIParameterEditOption = message.GUIParameterEditOption;
        return object;
    };

    /**
     * Converts this Proto_GUICommand_Workspace to JSON.
     * @function toJSON
     * @memberof Proto_GUICommand_Workspace
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GUICommand_Workspace.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GUICommand_Workspace;
})();

$root.Proto_GUICommand_Dashboard = (function() {

    /**
     * Properties of a Proto_GUICommand_Dashboard.
     * @exports IProto_GUICommand_Dashboard
     * @interface IProto_GUICommand_Dashboard
     * @property {number|null} [Operation] Proto_GUICommand_Dashboard Operation
     * @property {Uint8Array|null} [DashboardName] Proto_GUICommand_Dashboard DashboardName
     * @property {IProto_Release_List|null} [DashboardReleaseList] Proto_GUICommand_Dashboard DashboardReleaseList
     */

    /**
     * Constructs a new Proto_GUICommand_Dashboard.
     * @exports Proto_GUICommand_Dashboard
     * @classdesc Represents a Proto_GUICommand_Dashboard.
     * @implements IProto_GUICommand_Dashboard
     * @constructor
     * @param {IProto_GUICommand_Dashboard=} [properties] Properties to set
     */
    function Proto_GUICommand_Dashboard(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GUICommand_Dashboard Operation.
     * @member {number} Operation
     * @memberof Proto_GUICommand_Dashboard
     * @instance
     */
    Proto_GUICommand_Dashboard.prototype.Operation = 0;

    /**
     * Proto_GUICommand_Dashboard DashboardName.
     * @member {Uint8Array} DashboardName
     * @memberof Proto_GUICommand_Dashboard
     * @instance
     */
    Proto_GUICommand_Dashboard.prototype.DashboardName = $util.newBuffer([]);

    /**
     * Proto_GUICommand_Dashboard DashboardReleaseList.
     * @member {IProto_Release_List|null|undefined} DashboardReleaseList
     * @memberof Proto_GUICommand_Dashboard
     * @instance
     */
    Proto_GUICommand_Dashboard.prototype.DashboardReleaseList = null;

    /**
     * Creates a new Proto_GUICommand_Dashboard instance using the specified properties.
     * @function create
     * @memberof Proto_GUICommand_Dashboard
     * @static
     * @param {IProto_GUICommand_Dashboard=} [properties] Properties to set
     * @returns {Proto_GUICommand_Dashboard} Proto_GUICommand_Dashboard instance
     */
    Proto_GUICommand_Dashboard.create = function create(properties) {
        return new Proto_GUICommand_Dashboard(properties);
    };

    /**
     * Encodes the specified Proto_GUICommand_Dashboard message. Does not implicitly {@link Proto_GUICommand_Dashboard.verify|verify} messages.
     * @function encode
     * @memberof Proto_GUICommand_Dashboard
     * @static
     * @param {IProto_GUICommand_Dashboard} message Proto_GUICommand_Dashboard message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Dashboard.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operation != null && Object.hasOwnProperty.call(message, "Operation"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Operation);
        if (message.DashboardName != null && Object.hasOwnProperty.call(message, "DashboardName"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.DashboardName);
        if (message.DashboardReleaseList != null && Object.hasOwnProperty.call(message, "DashboardReleaseList"))
            $root.Proto_Release_List.encode(message.DashboardReleaseList, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_GUICommand_Dashboard message, length delimited. Does not implicitly {@link Proto_GUICommand_Dashboard.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GUICommand_Dashboard
     * @static
     * @param {IProto_GUICommand_Dashboard} message Proto_GUICommand_Dashboard message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Dashboard.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GUICommand_Dashboard message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GUICommand_Dashboard
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GUICommand_Dashboard} Proto_GUICommand_Dashboard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Dashboard.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GUICommand_Dashboard();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 2:
                message.Operation = reader.int32();
                break;
            case 4:
                message.DashboardName = reader.bytes();
                break;
            case 15:
                message.DashboardReleaseList = $root.Proto_Release_List.decode(reader, reader.uint32());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GUICommand_Dashboard message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GUICommand_Dashboard
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GUICommand_Dashboard} Proto_GUICommand_Dashboard
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Dashboard.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GUICommand_Dashboard message.
     * @function verify
     * @memberof Proto_GUICommand_Dashboard
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GUICommand_Dashboard.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            if (!$util.isInteger(message.Operation))
                return "Operation: integer expected";
        if (message.DashboardName != null && message.hasOwnProperty("DashboardName"))
            if (!(message.DashboardName && typeof message.DashboardName.length === "number" || $util.isString(message.DashboardName)))
                return "DashboardName: buffer expected";
        if (message.DashboardReleaseList != null && message.hasOwnProperty("DashboardReleaseList")) {
            var error = $root.Proto_Release_List.verify(message.DashboardReleaseList);
            if (error)
                return "DashboardReleaseList." + error;
        }
        return null;
    };

    /**
     * Creates a Proto_GUICommand_Dashboard message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GUICommand_Dashboard
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GUICommand_Dashboard} Proto_GUICommand_Dashboard
     */
    Proto_GUICommand_Dashboard.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GUICommand_Dashboard)
            return object;
        var message = new $root.Proto_GUICommand_Dashboard();
        if (object.Operation != null)
            message.Operation = object.Operation | 0;
        if (object.DashboardName != null)
            if (typeof object.DashboardName === "string")
                $util.base64.decode(object.DashboardName, message.DashboardName = $util.newBuffer($util.base64.length(object.DashboardName)), 0);
            else if (object.DashboardName.length)
                message.DashboardName = object.DashboardName;
        if (object.DashboardReleaseList != null) {
            if (typeof object.DashboardReleaseList !== "object")
                throw TypeError(".Proto_GUICommand_Dashboard.DashboardReleaseList: object expected");
            message.DashboardReleaseList = $root.Proto_Release_List.fromObject(object.DashboardReleaseList);
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_GUICommand_Dashboard message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GUICommand_Dashboard
     * @static
     * @param {Proto_GUICommand_Dashboard} message Proto_GUICommand_Dashboard
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GUICommand_Dashboard.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.Operation = 0;
            if (options.bytes === String)
                object.DashboardName = "";
            else {
                object.DashboardName = [];
                if (options.bytes !== Array)
                    object.DashboardName = $util.newBuffer(object.DashboardName);
            }
            object.DashboardReleaseList = null;
        }
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            object.Operation = message.Operation;
        if (message.DashboardName != null && message.hasOwnProperty("DashboardName"))
            object.DashboardName = options.bytes === String ? $util.base64.encode(message.DashboardName, 0, message.DashboardName.length) : options.bytes === Array ? Array.prototype.slice.call(message.DashboardName) : message.DashboardName;
        if (message.DashboardReleaseList != null && message.hasOwnProperty("DashboardReleaseList"))
            object.DashboardReleaseList = $root.Proto_Release_List.toObject(message.DashboardReleaseList, options);
        return object;
    };

    /**
     * Converts this Proto_GUICommand_Dashboard to JSON.
     * @function toJSON
     * @memberof Proto_GUICommand_Dashboard
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GUICommand_Dashboard.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GUICommand_Dashboard;
})();

$root.Proto_GUICommand_Explorer = (function() {

    /**
     * Properties of a Proto_GUICommand_Explorer.
     * @exports IProto_GUICommand_Explorer
     * @interface IProto_GUICommand_Explorer
     * @property {number|null} [Operation] Proto_GUICommand_Explorer Operation
     * @property {Uint8Array|null} [ExplorerName] Proto_GUICommand_Explorer ExplorerName
     */

    /**
     * Constructs a new Proto_GUICommand_Explorer.
     * @exports Proto_GUICommand_Explorer
     * @classdesc Represents a Proto_GUICommand_Explorer.
     * @implements IProto_GUICommand_Explorer
     * @constructor
     * @param {IProto_GUICommand_Explorer=} [properties] Properties to set
     */
    function Proto_GUICommand_Explorer(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GUICommand_Explorer Operation.
     * @member {number} Operation
     * @memberof Proto_GUICommand_Explorer
     * @instance
     */
    Proto_GUICommand_Explorer.prototype.Operation = 0;

    /**
     * Proto_GUICommand_Explorer ExplorerName.
     * @member {Uint8Array} ExplorerName
     * @memberof Proto_GUICommand_Explorer
     * @instance
     */
    Proto_GUICommand_Explorer.prototype.ExplorerName = $util.newBuffer([]);

    /**
     * Creates a new Proto_GUICommand_Explorer instance using the specified properties.
     * @function create
     * @memberof Proto_GUICommand_Explorer
     * @static
     * @param {IProto_GUICommand_Explorer=} [properties] Properties to set
     * @returns {Proto_GUICommand_Explorer} Proto_GUICommand_Explorer instance
     */
    Proto_GUICommand_Explorer.create = function create(properties) {
        return new Proto_GUICommand_Explorer(properties);
    };

    /**
     * Encodes the specified Proto_GUICommand_Explorer message. Does not implicitly {@link Proto_GUICommand_Explorer.verify|verify} messages.
     * @function encode
     * @memberof Proto_GUICommand_Explorer
     * @static
     * @param {IProto_GUICommand_Explorer} message Proto_GUICommand_Explorer message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Explorer.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operation != null && Object.hasOwnProperty.call(message, "Operation"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Operation);
        if (message.ExplorerName != null && Object.hasOwnProperty.call(message, "ExplorerName"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.ExplorerName);
        return writer;
    };

    /**
     * Encodes the specified Proto_GUICommand_Explorer message, length delimited. Does not implicitly {@link Proto_GUICommand_Explorer.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GUICommand_Explorer
     * @static
     * @param {IProto_GUICommand_Explorer} message Proto_GUICommand_Explorer message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Explorer.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GUICommand_Explorer message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GUICommand_Explorer
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GUICommand_Explorer} Proto_GUICommand_Explorer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Explorer.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GUICommand_Explorer();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 2:
                message.Operation = reader.int32();
                break;
            case 4:
                message.ExplorerName = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GUICommand_Explorer message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GUICommand_Explorer
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GUICommand_Explorer} Proto_GUICommand_Explorer
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Explorer.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GUICommand_Explorer message.
     * @function verify
     * @memberof Proto_GUICommand_Explorer
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GUICommand_Explorer.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            if (!$util.isInteger(message.Operation))
                return "Operation: integer expected";
        if (message.ExplorerName != null && message.hasOwnProperty("ExplorerName"))
            if (!(message.ExplorerName && typeof message.ExplorerName.length === "number" || $util.isString(message.ExplorerName)))
                return "ExplorerName: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_GUICommand_Explorer message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GUICommand_Explorer
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GUICommand_Explorer} Proto_GUICommand_Explorer
     */
    Proto_GUICommand_Explorer.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GUICommand_Explorer)
            return object;
        var message = new $root.Proto_GUICommand_Explorer();
        if (object.Operation != null)
            message.Operation = object.Operation | 0;
        if (object.ExplorerName != null)
            if (typeof object.ExplorerName === "string")
                $util.base64.decode(object.ExplorerName, message.ExplorerName = $util.newBuffer($util.base64.length(object.ExplorerName)), 0);
            else if (object.ExplorerName.length)
                message.ExplorerName = object.ExplorerName;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GUICommand_Explorer message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GUICommand_Explorer
     * @static
     * @param {Proto_GUICommand_Explorer} message Proto_GUICommand_Explorer
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GUICommand_Explorer.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.Operation = 0;
            if (options.bytes === String)
                object.ExplorerName = "";
            else {
                object.ExplorerName = [];
                if (options.bytes !== Array)
                    object.ExplorerName = $util.newBuffer(object.ExplorerName);
            }
        }
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            object.Operation = message.Operation;
        if (message.ExplorerName != null && message.hasOwnProperty("ExplorerName"))
            object.ExplorerName = options.bytes === String ? $util.base64.encode(message.ExplorerName, 0, message.ExplorerName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ExplorerName) : message.ExplorerName;
        return object;
    };

    /**
     * Converts this Proto_GUICommand_Explorer to JSON.
     * @function toJSON
     * @memberof Proto_GUICommand_Explorer
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GUICommand_Explorer.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GUICommand_Explorer;
})();

$root.Proto_GUICommand_Home = (function() {

    /**
     * Properties of a Proto_GUICommand_Home.
     * @exports IProto_GUICommand_Home
     * @interface IProto_GUICommand_Home
     * @property {number|null} [Operation] Proto_GUICommand_Home Operation
     * @property {Uint8Array|null} [Process] Proto_GUICommand_Home Process
     */

    /**
     * Constructs a new Proto_GUICommand_Home.
     * @exports Proto_GUICommand_Home
     * @classdesc Represents a Proto_GUICommand_Home.
     * @implements IProto_GUICommand_Home
     * @constructor
     * @param {IProto_GUICommand_Home=} [properties] Properties to set
     */
    function Proto_GUICommand_Home(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GUICommand_Home Operation.
     * @member {number} Operation
     * @memberof Proto_GUICommand_Home
     * @instance
     */
    Proto_GUICommand_Home.prototype.Operation = 0;

    /**
     * Proto_GUICommand_Home Process.
     * @member {Uint8Array} Process
     * @memberof Proto_GUICommand_Home
     * @instance
     */
    Proto_GUICommand_Home.prototype.Process = $util.newBuffer([]);

    /**
     * Creates a new Proto_GUICommand_Home instance using the specified properties.
     * @function create
     * @memberof Proto_GUICommand_Home
     * @static
     * @param {IProto_GUICommand_Home=} [properties] Properties to set
     * @returns {Proto_GUICommand_Home} Proto_GUICommand_Home instance
     */
    Proto_GUICommand_Home.create = function create(properties) {
        return new Proto_GUICommand_Home(properties);
    };

    /**
     * Encodes the specified Proto_GUICommand_Home message. Does not implicitly {@link Proto_GUICommand_Home.verify|verify} messages.
     * @function encode
     * @memberof Proto_GUICommand_Home
     * @static
     * @param {IProto_GUICommand_Home} message Proto_GUICommand_Home message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Home.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operation != null && Object.hasOwnProperty.call(message, "Operation"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Operation);
        if (message.Process != null && Object.hasOwnProperty.call(message, "Process"))
            writer.uint32(/* id 11, wireType 2 =*/90).bytes(message.Process);
        return writer;
    };

    /**
     * Encodes the specified Proto_GUICommand_Home message, length delimited. Does not implicitly {@link Proto_GUICommand_Home.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GUICommand_Home
     * @static
     * @param {IProto_GUICommand_Home} message Proto_GUICommand_Home message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Home.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GUICommand_Home message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GUICommand_Home
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GUICommand_Home} Proto_GUICommand_Home
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Home.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GUICommand_Home();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 2:
                message.Operation = reader.int32();
                break;
            case 11:
                message.Process = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GUICommand_Home message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GUICommand_Home
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GUICommand_Home} Proto_GUICommand_Home
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Home.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GUICommand_Home message.
     * @function verify
     * @memberof Proto_GUICommand_Home
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GUICommand_Home.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            if (!$util.isInteger(message.Operation))
                return "Operation: integer expected";
        if (message.Process != null && message.hasOwnProperty("Process"))
            if (!(message.Process && typeof message.Process.length === "number" || $util.isString(message.Process)))
                return "Process: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_GUICommand_Home message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GUICommand_Home
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GUICommand_Home} Proto_GUICommand_Home
     */
    Proto_GUICommand_Home.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GUICommand_Home)
            return object;
        var message = new $root.Proto_GUICommand_Home();
        if (object.Operation != null)
            message.Operation = object.Operation | 0;
        if (object.Process != null)
            if (typeof object.Process === "string")
                $util.base64.decode(object.Process, message.Process = $util.newBuffer($util.base64.length(object.Process)), 0);
            else if (object.Process.length)
                message.Process = object.Process;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GUICommand_Home message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GUICommand_Home
     * @static
     * @param {Proto_GUICommand_Home} message Proto_GUICommand_Home
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GUICommand_Home.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.Operation = 0;
            if (options.bytes === String)
                object.Process = "";
            else {
                object.Process = [];
                if (options.bytes !== Array)
                    object.Process = $util.newBuffer(object.Process);
            }
        }
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            object.Operation = message.Operation;
        if (message.Process != null && message.hasOwnProperty("Process"))
            object.Process = options.bytes === String ? $util.base64.encode(message.Process, 0, message.Process.length) : options.bytes === Array ? Array.prototype.slice.call(message.Process) : message.Process;
        return object;
    };

    /**
     * Converts this Proto_GUICommand_Home to JSON.
     * @function toJSON
     * @memberof Proto_GUICommand_Home
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GUICommand_Home.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GUICommand_Home;
})();

$root.Proto_GUICommand_Document = (function() {

    /**
     * Properties of a Proto_GUICommand_Document.
     * @exports IProto_GUICommand_Document
     * @interface IProto_GUICommand_Document
     * @property {number|null} [Operation] Proto_GUICommand_Document Operation
     * @property {Uint8Array|null} [DocumentTypeName] Proto_GUICommand_Document DocumentTypeName
     * @property {Uint8Array|null} [Key] Proto_GUICommand_Document Key
     */

    /**
     * Constructs a new Proto_GUICommand_Document.
     * @exports Proto_GUICommand_Document
     * @classdesc Represents a Proto_GUICommand_Document.
     * @implements IProto_GUICommand_Document
     * @constructor
     * @param {IProto_GUICommand_Document=} [properties] Properties to set
     */
    function Proto_GUICommand_Document(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GUICommand_Document Operation.
     * @member {number} Operation
     * @memberof Proto_GUICommand_Document
     * @instance
     */
    Proto_GUICommand_Document.prototype.Operation = 0;

    /**
     * Proto_GUICommand_Document DocumentTypeName.
     * @member {Uint8Array} DocumentTypeName
     * @memberof Proto_GUICommand_Document
     * @instance
     */
    Proto_GUICommand_Document.prototype.DocumentTypeName = $util.newBuffer([]);

    /**
     * Proto_GUICommand_Document Key.
     * @member {Uint8Array} Key
     * @memberof Proto_GUICommand_Document
     * @instance
     */
    Proto_GUICommand_Document.prototype.Key = $util.newBuffer([]);

    /**
     * Creates a new Proto_GUICommand_Document instance using the specified properties.
     * @function create
     * @memberof Proto_GUICommand_Document
     * @static
     * @param {IProto_GUICommand_Document=} [properties] Properties to set
     * @returns {Proto_GUICommand_Document} Proto_GUICommand_Document instance
     */
    Proto_GUICommand_Document.create = function create(properties) {
        return new Proto_GUICommand_Document(properties);
    };

    /**
     * Encodes the specified Proto_GUICommand_Document message. Does not implicitly {@link Proto_GUICommand_Document.verify|verify} messages.
     * @function encode
     * @memberof Proto_GUICommand_Document
     * @static
     * @param {IProto_GUICommand_Document} message Proto_GUICommand_Document message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Document.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operation != null && Object.hasOwnProperty.call(message, "Operation"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Operation);
        if (message.DocumentTypeName != null && Object.hasOwnProperty.call(message, "DocumentTypeName"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.DocumentTypeName);
        if (message.Key != null && Object.hasOwnProperty.call(message, "Key"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.Key);
        return writer;
    };

    /**
     * Encodes the specified Proto_GUICommand_Document message, length delimited. Does not implicitly {@link Proto_GUICommand_Document.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GUICommand_Document
     * @static
     * @param {IProto_GUICommand_Document} message Proto_GUICommand_Document message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_Document.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GUICommand_Document message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GUICommand_Document
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GUICommand_Document} Proto_GUICommand_Document
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Document.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GUICommand_Document();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 2:
                message.Operation = reader.int32();
                break;
            case 3:
                message.DocumentTypeName = reader.bytes();
                break;
            case 4:
                message.Key = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GUICommand_Document message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GUICommand_Document
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GUICommand_Document} Proto_GUICommand_Document
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_Document.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GUICommand_Document message.
     * @function verify
     * @memberof Proto_GUICommand_Document
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GUICommand_Document.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            if (!$util.isInteger(message.Operation))
                return "Operation: integer expected";
        if (message.DocumentTypeName != null && message.hasOwnProperty("DocumentTypeName"))
            if (!(message.DocumentTypeName && typeof message.DocumentTypeName.length === "number" || $util.isString(message.DocumentTypeName)))
                return "DocumentTypeName: buffer expected";
        if (message.Key != null && message.hasOwnProperty("Key"))
            if (!(message.Key && typeof message.Key.length === "number" || $util.isString(message.Key)))
                return "Key: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_GUICommand_Document message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GUICommand_Document
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GUICommand_Document} Proto_GUICommand_Document
     */
    Proto_GUICommand_Document.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GUICommand_Document)
            return object;
        var message = new $root.Proto_GUICommand_Document();
        if (object.Operation != null)
            message.Operation = object.Operation | 0;
        if (object.DocumentTypeName != null)
            if (typeof object.DocumentTypeName === "string")
                $util.base64.decode(object.DocumentTypeName, message.DocumentTypeName = $util.newBuffer($util.base64.length(object.DocumentTypeName)), 0);
            else if (object.DocumentTypeName.length)
                message.DocumentTypeName = object.DocumentTypeName;
        if (object.Key != null)
            if (typeof object.Key === "string")
                $util.base64.decode(object.Key, message.Key = $util.newBuffer($util.base64.length(object.Key)), 0);
            else if (object.Key.length)
                message.Key = object.Key;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GUICommand_Document message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GUICommand_Document
     * @static
     * @param {Proto_GUICommand_Document} message Proto_GUICommand_Document
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GUICommand_Document.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.Operation = 0;
            if (options.bytes === String)
                object.DocumentTypeName = "";
            else {
                object.DocumentTypeName = [];
                if (options.bytes !== Array)
                    object.DocumentTypeName = $util.newBuffer(object.DocumentTypeName);
            }
            if (options.bytes === String)
                object.Key = "";
            else {
                object.Key = [];
                if (options.bytes !== Array)
                    object.Key = $util.newBuffer(object.Key);
            }
        }
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            object.Operation = message.Operation;
        if (message.DocumentTypeName != null && message.hasOwnProperty("DocumentTypeName"))
            object.DocumentTypeName = options.bytes === String ? $util.base64.encode(message.DocumentTypeName, 0, message.DocumentTypeName.length) : options.bytes === Array ? Array.prototype.slice.call(message.DocumentTypeName) : message.DocumentTypeName;
        if (message.Key != null && message.hasOwnProperty("Key"))
            object.Key = options.bytes === String ? $util.base64.encode(message.Key, 0, message.Key.length) : options.bytes === Array ? Array.prototype.slice.call(message.Key) : message.Key;
        return object;
    };

    /**
     * Converts this Proto_GUICommand_Document to JSON.
     * @function toJSON
     * @memberof Proto_GUICommand_Document
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GUICommand_Document.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GUICommand_Document;
})();

$root.Proto_GUICommand_ChildWorkspace = (function() {

    /**
     * Properties of a Proto_GUICommand_ChildWorkspace.
     * @exports IProto_GUICommand_ChildWorkspace
     * @interface IProto_GUICommand_ChildWorkspace
     * @property {number|null} [Operation] Proto_GUICommand_ChildWorkspace Operation
     * @property {Uint8Array|null} [WSName] Proto_GUICommand_ChildWorkspace WSName
     * @property {Uint8Array|null} [ParentWSName] Proto_GUICommand_ChildWorkspace ParentWSName
     * @property {Uint8Array|null} [WSRelation] Proto_GUICommand_ChildWorkspace WSRelation
     * @property {Uint8Array|null} [PresetName] Proto_GUICommand_ChildWorkspace PresetName
     * @property {Uint8Array|null} [GroupPresetName] Proto_GUICommand_ChildWorkspace GroupPresetName
     * @property {Uint8Array|null} [ClassNames] Proto_GUICommand_ChildWorkspace ClassNames
     * @property {number|null} [Alignment] Proto_GUICommand_ChildWorkspace Alignment
     * @property {Array.<IProto_ReferenceIDWithCN>|null} [ObjectToSelect] Proto_GUICommand_ChildWorkspace ObjectToSelect
     */

    /**
     * Constructs a new Proto_GUICommand_ChildWorkspace.
     * @exports Proto_GUICommand_ChildWorkspace
     * @classdesc Represents a Proto_GUICommand_ChildWorkspace.
     * @implements IProto_GUICommand_ChildWorkspace
     * @constructor
     * @param {IProto_GUICommand_ChildWorkspace=} [properties] Properties to set
     */
    function Proto_GUICommand_ChildWorkspace(properties) {
        this.ObjectToSelect = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GUICommand_ChildWorkspace Operation.
     * @member {number} Operation
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     */
    Proto_GUICommand_ChildWorkspace.prototype.Operation = 0;

    /**
     * Proto_GUICommand_ChildWorkspace WSName.
     * @member {Uint8Array} WSName
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     */
    Proto_GUICommand_ChildWorkspace.prototype.WSName = $util.newBuffer([]);

    /**
     * Proto_GUICommand_ChildWorkspace ParentWSName.
     * @member {Uint8Array} ParentWSName
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     */
    Proto_GUICommand_ChildWorkspace.prototype.ParentWSName = $util.newBuffer([]);

    /**
     * Proto_GUICommand_ChildWorkspace WSRelation.
     * @member {Uint8Array} WSRelation
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     */
    Proto_GUICommand_ChildWorkspace.prototype.WSRelation = $util.newBuffer([]);

    /**
     * Proto_GUICommand_ChildWorkspace PresetName.
     * @member {Uint8Array} PresetName
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     */
    Proto_GUICommand_ChildWorkspace.prototype.PresetName = $util.newBuffer([]);

    /**
     * Proto_GUICommand_ChildWorkspace GroupPresetName.
     * @member {Uint8Array} GroupPresetName
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     */
    Proto_GUICommand_ChildWorkspace.prototype.GroupPresetName = $util.newBuffer([]);

    /**
     * Proto_GUICommand_ChildWorkspace ClassNames.
     * @member {Uint8Array} ClassNames
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     */
    Proto_GUICommand_ChildWorkspace.prototype.ClassNames = $util.newBuffer([]);

    /**
     * Proto_GUICommand_ChildWorkspace Alignment.
     * @member {number} Alignment
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     */
    Proto_GUICommand_ChildWorkspace.prototype.Alignment = 0;

    /**
     * Proto_GUICommand_ChildWorkspace ObjectToSelect.
     * @member {Array.<IProto_ReferenceIDWithCN>} ObjectToSelect
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     */
    Proto_GUICommand_ChildWorkspace.prototype.ObjectToSelect = $util.emptyArray;

    /**
     * Creates a new Proto_GUICommand_ChildWorkspace instance using the specified properties.
     * @function create
     * @memberof Proto_GUICommand_ChildWorkspace
     * @static
     * @param {IProto_GUICommand_ChildWorkspace=} [properties] Properties to set
     * @returns {Proto_GUICommand_ChildWorkspace} Proto_GUICommand_ChildWorkspace instance
     */
    Proto_GUICommand_ChildWorkspace.create = function create(properties) {
        return new Proto_GUICommand_ChildWorkspace(properties);
    };

    /**
     * Encodes the specified Proto_GUICommand_ChildWorkspace message. Does not implicitly {@link Proto_GUICommand_ChildWorkspace.verify|verify} messages.
     * @function encode
     * @memberof Proto_GUICommand_ChildWorkspace
     * @static
     * @param {IProto_GUICommand_ChildWorkspace} message Proto_GUICommand_ChildWorkspace message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_ChildWorkspace.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operation != null && Object.hasOwnProperty.call(message, "Operation"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Operation);
        if (message.WSName != null && Object.hasOwnProperty.call(message, "WSName"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.WSName);
        if (message.ParentWSName != null && Object.hasOwnProperty.call(message, "ParentWSName"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.ParentWSName);
        if (message.WSRelation != null && Object.hasOwnProperty.call(message, "WSRelation"))
            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.WSRelation);
        if (message.PresetName != null && Object.hasOwnProperty.call(message, "PresetName"))
            writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.PresetName);
        if (message.GroupPresetName != null && Object.hasOwnProperty.call(message, "GroupPresetName"))
            writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.GroupPresetName);
        if (message.ClassNames != null && Object.hasOwnProperty.call(message, "ClassNames"))
            writer.uint32(/* id 10, wireType 2 =*/82).bytes(message.ClassNames);
        if (message.Alignment != null && Object.hasOwnProperty.call(message, "Alignment"))
            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.Alignment);
        if (message.ObjectToSelect != null && message.ObjectToSelect.length)
            for (var i = 0; i < message.ObjectToSelect.length; ++i)
                $root.Proto_ReferenceIDWithCN.encode(message.ObjectToSelect[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_GUICommand_ChildWorkspace message, length delimited. Does not implicitly {@link Proto_GUICommand_ChildWorkspace.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GUICommand_ChildWorkspace
     * @static
     * @param {IProto_GUICommand_ChildWorkspace} message Proto_GUICommand_ChildWorkspace message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GUICommand_ChildWorkspace.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GUICommand_ChildWorkspace message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GUICommand_ChildWorkspace
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GUICommand_ChildWorkspace} Proto_GUICommand_ChildWorkspace
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_ChildWorkspace.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GUICommand_ChildWorkspace();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 2:
                message.Operation = reader.int32();
                break;
            case 4:
                message.WSName = reader.bytes();
                break;
            case 5:
                message.ParentWSName = reader.bytes();
                break;
            case 7:
                message.WSRelation = reader.bytes();
                break;
            case 8:
                message.PresetName = reader.bytes();
                break;
            case 9:
                message.GroupPresetName = reader.bytes();
                break;
            case 10:
                message.ClassNames = reader.bytes();
                break;
            case 11:
                message.Alignment = reader.int32();
                break;
            case 15:
                if (!(message.ObjectToSelect && message.ObjectToSelect.length))
                    message.ObjectToSelect = [];
                message.ObjectToSelect.push($root.Proto_ReferenceIDWithCN.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GUICommand_ChildWorkspace message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GUICommand_ChildWorkspace
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GUICommand_ChildWorkspace} Proto_GUICommand_ChildWorkspace
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GUICommand_ChildWorkspace.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GUICommand_ChildWorkspace message.
     * @function verify
     * @memberof Proto_GUICommand_ChildWorkspace
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GUICommand_ChildWorkspace.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            if (!$util.isInteger(message.Operation))
                return "Operation: integer expected";
        if (message.WSName != null && message.hasOwnProperty("WSName"))
            if (!(message.WSName && typeof message.WSName.length === "number" || $util.isString(message.WSName)))
                return "WSName: buffer expected";
        if (message.ParentWSName != null && message.hasOwnProperty("ParentWSName"))
            if (!(message.ParentWSName && typeof message.ParentWSName.length === "number" || $util.isString(message.ParentWSName)))
                return "ParentWSName: buffer expected";
        if (message.WSRelation != null && message.hasOwnProperty("WSRelation"))
            if (!(message.WSRelation && typeof message.WSRelation.length === "number" || $util.isString(message.WSRelation)))
                return "WSRelation: buffer expected";
        if (message.PresetName != null && message.hasOwnProperty("PresetName"))
            if (!(message.PresetName && typeof message.PresetName.length === "number" || $util.isString(message.PresetName)))
                return "PresetName: buffer expected";
        if (message.GroupPresetName != null && message.hasOwnProperty("GroupPresetName"))
            if (!(message.GroupPresetName && typeof message.GroupPresetName.length === "number" || $util.isString(message.GroupPresetName)))
                return "GroupPresetName: buffer expected";
        if (message.ClassNames != null && message.hasOwnProperty("ClassNames"))
            if (!(message.ClassNames && typeof message.ClassNames.length === "number" || $util.isString(message.ClassNames)))
                return "ClassNames: buffer expected";
        if (message.Alignment != null && message.hasOwnProperty("Alignment"))
            if (!$util.isInteger(message.Alignment))
                return "Alignment: integer expected";
        if (message.ObjectToSelect != null && message.hasOwnProperty("ObjectToSelect")) {
            if (!Array.isArray(message.ObjectToSelect))
                return "ObjectToSelect: array expected";
            for (var i = 0; i < message.ObjectToSelect.length; ++i) {
                var error = $root.Proto_ReferenceIDWithCN.verify(message.ObjectToSelect[i]);
                if (error)
                    return "ObjectToSelect." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_GUICommand_ChildWorkspace message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GUICommand_ChildWorkspace
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GUICommand_ChildWorkspace} Proto_GUICommand_ChildWorkspace
     */
    Proto_GUICommand_ChildWorkspace.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GUICommand_ChildWorkspace)
            return object;
        var message = new $root.Proto_GUICommand_ChildWorkspace();
        if (object.Operation != null)
            message.Operation = object.Operation | 0;
        if (object.WSName != null)
            if (typeof object.WSName === "string")
                $util.base64.decode(object.WSName, message.WSName = $util.newBuffer($util.base64.length(object.WSName)), 0);
            else if (object.WSName.length)
                message.WSName = object.WSName;
        if (object.ParentWSName != null)
            if (typeof object.ParentWSName === "string")
                $util.base64.decode(object.ParentWSName, message.ParentWSName = $util.newBuffer($util.base64.length(object.ParentWSName)), 0);
            else if (object.ParentWSName.length)
                message.ParentWSName = object.ParentWSName;
        if (object.WSRelation != null)
            if (typeof object.WSRelation === "string")
                $util.base64.decode(object.WSRelation, message.WSRelation = $util.newBuffer($util.base64.length(object.WSRelation)), 0);
            else if (object.WSRelation.length)
                message.WSRelation = object.WSRelation;
        if (object.PresetName != null)
            if (typeof object.PresetName === "string")
                $util.base64.decode(object.PresetName, message.PresetName = $util.newBuffer($util.base64.length(object.PresetName)), 0);
            else if (object.PresetName.length)
                message.PresetName = object.PresetName;
        if (object.GroupPresetName != null)
            if (typeof object.GroupPresetName === "string")
                $util.base64.decode(object.GroupPresetName, message.GroupPresetName = $util.newBuffer($util.base64.length(object.GroupPresetName)), 0);
            else if (object.GroupPresetName.length)
                message.GroupPresetName = object.GroupPresetName;
        if (object.ClassNames != null)
            if (typeof object.ClassNames === "string")
                $util.base64.decode(object.ClassNames, message.ClassNames = $util.newBuffer($util.base64.length(object.ClassNames)), 0);
            else if (object.ClassNames.length)
                message.ClassNames = object.ClassNames;
        if (object.Alignment != null)
            message.Alignment = object.Alignment | 0;
        if (object.ObjectToSelect) {
            if (!Array.isArray(object.ObjectToSelect))
                throw TypeError(".Proto_GUICommand_ChildWorkspace.ObjectToSelect: array expected");
            message.ObjectToSelect = [];
            for (var i = 0; i < object.ObjectToSelect.length; ++i) {
                if (typeof object.ObjectToSelect[i] !== "object")
                    throw TypeError(".Proto_GUICommand_ChildWorkspace.ObjectToSelect: object expected");
                message.ObjectToSelect[i] = $root.Proto_ReferenceIDWithCN.fromObject(object.ObjectToSelect[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_GUICommand_ChildWorkspace message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GUICommand_ChildWorkspace
     * @static
     * @param {Proto_GUICommand_ChildWorkspace} message Proto_GUICommand_ChildWorkspace
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GUICommand_ChildWorkspace.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.ObjectToSelect = [];
        if (options.defaults) {
            object.Operation = 0;
            if (options.bytes === String)
                object.WSName = "";
            else {
                object.WSName = [];
                if (options.bytes !== Array)
                    object.WSName = $util.newBuffer(object.WSName);
            }
            if (options.bytes === String)
                object.ParentWSName = "";
            else {
                object.ParentWSName = [];
                if (options.bytes !== Array)
                    object.ParentWSName = $util.newBuffer(object.ParentWSName);
            }
            if (options.bytes === String)
                object.WSRelation = "";
            else {
                object.WSRelation = [];
                if (options.bytes !== Array)
                    object.WSRelation = $util.newBuffer(object.WSRelation);
            }
            if (options.bytes === String)
                object.PresetName = "";
            else {
                object.PresetName = [];
                if (options.bytes !== Array)
                    object.PresetName = $util.newBuffer(object.PresetName);
            }
            if (options.bytes === String)
                object.GroupPresetName = "";
            else {
                object.GroupPresetName = [];
                if (options.bytes !== Array)
                    object.GroupPresetName = $util.newBuffer(object.GroupPresetName);
            }
            if (options.bytes === String)
                object.ClassNames = "";
            else {
                object.ClassNames = [];
                if (options.bytes !== Array)
                    object.ClassNames = $util.newBuffer(object.ClassNames);
            }
            object.Alignment = 0;
        }
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            object.Operation = message.Operation;
        if (message.WSName != null && message.hasOwnProperty("WSName"))
            object.WSName = options.bytes === String ? $util.base64.encode(message.WSName, 0, message.WSName.length) : options.bytes === Array ? Array.prototype.slice.call(message.WSName) : message.WSName;
        if (message.ParentWSName != null && message.hasOwnProperty("ParentWSName"))
            object.ParentWSName = options.bytes === String ? $util.base64.encode(message.ParentWSName, 0, message.ParentWSName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ParentWSName) : message.ParentWSName;
        if (message.WSRelation != null && message.hasOwnProperty("WSRelation"))
            object.WSRelation = options.bytes === String ? $util.base64.encode(message.WSRelation, 0, message.WSRelation.length) : options.bytes === Array ? Array.prototype.slice.call(message.WSRelation) : message.WSRelation;
        if (message.PresetName != null && message.hasOwnProperty("PresetName"))
            object.PresetName = options.bytes === String ? $util.base64.encode(message.PresetName, 0, message.PresetName.length) : options.bytes === Array ? Array.prototype.slice.call(message.PresetName) : message.PresetName;
        if (message.GroupPresetName != null && message.hasOwnProperty("GroupPresetName"))
            object.GroupPresetName = options.bytes === String ? $util.base64.encode(message.GroupPresetName, 0, message.GroupPresetName.length) : options.bytes === Array ? Array.prototype.slice.call(message.GroupPresetName) : message.GroupPresetName;
        if (message.ClassNames != null && message.hasOwnProperty("ClassNames"))
            object.ClassNames = options.bytes === String ? $util.base64.encode(message.ClassNames, 0, message.ClassNames.length) : options.bytes === Array ? Array.prototype.slice.call(message.ClassNames) : message.ClassNames;
        if (message.Alignment != null && message.hasOwnProperty("Alignment"))
            object.Alignment = message.Alignment;
        if (message.ObjectToSelect && message.ObjectToSelect.length) {
            object.ObjectToSelect = [];
            for (var j = 0; j < message.ObjectToSelect.length; ++j)
                object.ObjectToSelect[j] = $root.Proto_ReferenceIDWithCN.toObject(message.ObjectToSelect[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_GUICommand_ChildWorkspace to JSON.
     * @function toJSON
     * @memberof Proto_GUICommand_ChildWorkspace
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GUICommand_ChildWorkspace.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GUICommand_ChildWorkspace;
})();

$root.Proto_ReplyValue = (function() {

    /**
     * Properties of a Proto_ReplyValue.
     * @exports IProto_ReplyValue
     * @interface IProto_ReplyValue
     * @property {Uint8Array|null} [stringvalue] Proto_ReplyValue stringvalue
     * @property {number|Long|null} [timevalue] Proto_ReplyValue timevalue
     * @property {number|null} [numbervalue] Proto_ReplyValue numbervalue
     * @property {number|Long|null} [integervalue] Proto_ReplyValue integervalue
     * @property {number|Long|null} [referenceid] Proto_ReplyValue referenceid
     * @property {boolean|null} [isnullvalue] Proto_ReplyValue isnullvalue
     * @property {number|null} [interfaceresulttype] Proto_ReplyValue interfaceresulttype
     * @property {boolean|null} [successful] Proto_ReplyValue successful
     * @property {number|Long|null} [requestId] Proto_ReplyValue requestId
     * @property {number|null} [requestScenarioId] Proto_ReplyValue requestScenarioId
     * @property {number|null} [requestParentScenarioId] Proto_ReplyValue requestParentScenarioId
     * @property {Uint8Array|null} [ObjectClassName] Proto_ReplyValue ObjectClassName
     * @property {number|Long|null} [ObjectReferenceID] Proto_ReplyValue ObjectReferenceID
     * @property {Uint8Array|null} [Message] Proto_ReplyValue Message
     * @property {number|null} [MessageBoxButtonType] Proto_ReplyValue MessageBoxButtonType
     * @property {Uint8Array|null} [FormName] Proto_ReplyValue FormName
     * @property {number|null} [ClientRequestID] Proto_ReplyValue ClientRequestID
     * @property {Array.<IProto_GUICommand>|null} [GUICommand] Proto_ReplyValue GUICommand
     * @property {IProto_ProcessReleaseData|null} [processreleasedata] Proto_ReplyValue processreleasedata
     * @property {number|null} [serverinstanceid] Proto_ReplyValue serverinstanceid
     */

    /**
     * Constructs a new Proto_ReplyValue.
     * @exports Proto_ReplyValue
     * @classdesc Represents a Proto_ReplyValue.
     * @implements IProto_ReplyValue
     * @constructor
     * @param {IProto_ReplyValue=} [properties] Properties to set
     */
    function Proto_ReplyValue(properties) {
        this.GUICommand = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ReplyValue stringvalue.
     * @member {Uint8Array|null|undefined} stringvalue
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.stringvalue = null;

    /**
     * Proto_ReplyValue timevalue.
     * @member {number|Long|null|undefined} timevalue
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.timevalue = null;

    /**
     * Proto_ReplyValue numbervalue.
     * @member {number|null|undefined} numbervalue
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.numbervalue = null;

    /**
     * Proto_ReplyValue integervalue.
     * @member {number|Long|null|undefined} integervalue
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.integervalue = null;

    /**
     * Proto_ReplyValue referenceid.
     * @member {number|Long|null|undefined} referenceid
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.referenceid = null;

    /**
     * Proto_ReplyValue isnullvalue.
     * @member {boolean|null|undefined} isnullvalue
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.isnullvalue = null;

    /**
     * Proto_ReplyValue interfaceresulttype.
     * @member {number} interfaceresulttype
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.interfaceresulttype = 0;

    /**
     * Proto_ReplyValue successful.
     * @member {boolean} successful
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.successful = false;

    /**
     * Proto_ReplyValue requestId.
     * @member {number|Long} requestId
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.requestId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ReplyValue requestScenarioId.
     * @member {number} requestScenarioId
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.requestScenarioId = 0;

    /**
     * Proto_ReplyValue requestParentScenarioId.
     * @member {number} requestParentScenarioId
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.requestParentScenarioId = 0;

    /**
     * Proto_ReplyValue ObjectClassName.
     * @member {Uint8Array} ObjectClassName
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.ObjectClassName = $util.newBuffer([]);

    /**
     * Proto_ReplyValue ObjectReferenceID.
     * @member {number|Long} ObjectReferenceID
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.ObjectReferenceID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ReplyValue Message.
     * @member {Uint8Array} Message
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.Message = $util.newBuffer([]);

    /**
     * Proto_ReplyValue MessageBoxButtonType.
     * @member {number} MessageBoxButtonType
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.MessageBoxButtonType = 0;

    /**
     * Proto_ReplyValue FormName.
     * @member {Uint8Array} FormName
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.FormName = $util.newBuffer([]);

    /**
     * Proto_ReplyValue ClientRequestID.
     * @member {number} ClientRequestID
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.ClientRequestID = 0;

    /**
     * Proto_ReplyValue GUICommand.
     * @member {Array.<IProto_GUICommand>} GUICommand
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.GUICommand = $util.emptyArray;

    /**
     * Proto_ReplyValue processreleasedata.
     * @member {IProto_ProcessReleaseData|null|undefined} processreleasedata
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.processreleasedata = null;

    /**
     * Proto_ReplyValue serverinstanceid.
     * @member {number} serverinstanceid
     * @memberof Proto_ReplyValue
     * @instance
     */
    Proto_ReplyValue.prototype.serverinstanceid = 0;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_ReplyValue value.
     * @member {"stringvalue"|"timevalue"|"numbervalue"|"integervalue"|"referenceid"|"isnullvalue"|undefined} value
     * @memberof Proto_ReplyValue
     * @instance
     */
    Object.defineProperty(Proto_ReplyValue.prototype, "value", {
        get: $util.oneOfGetter($oneOfFields = ["stringvalue", "timevalue", "numbervalue", "integervalue", "referenceid", "isnullvalue"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_ReplyValue instance using the specified properties.
     * @function create
     * @memberof Proto_ReplyValue
     * @static
     * @param {IProto_ReplyValue=} [properties] Properties to set
     * @returns {Proto_ReplyValue} Proto_ReplyValue instance
     */
    Proto_ReplyValue.create = function create(properties) {
        return new Proto_ReplyValue(properties);
    };

    /**
     * Encodes the specified Proto_ReplyValue message. Does not implicitly {@link Proto_ReplyValue.verify|verify} messages.
     * @function encode
     * @memberof Proto_ReplyValue
     * @static
     * @param {IProto_ReplyValue} message Proto_ReplyValue message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReplyValue.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.stringvalue != null && Object.hasOwnProperty.call(message, "stringvalue"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.stringvalue);
        if (message.timevalue != null && Object.hasOwnProperty.call(message, "timevalue"))
            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.timevalue);
        if (message.numbervalue != null && Object.hasOwnProperty.call(message, "numbervalue"))
            writer.uint32(/* id 3, wireType 1 =*/25).double(message.numbervalue);
        if (message.integervalue != null && Object.hasOwnProperty.call(message, "integervalue"))
            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.integervalue);
        if (message.referenceid != null && Object.hasOwnProperty.call(message, "referenceid"))
            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.referenceid);
        if (message.isnullvalue != null && Object.hasOwnProperty.call(message, "isnullvalue"))
            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.isnullvalue);
        if (message.interfaceresulttype != null && Object.hasOwnProperty.call(message, "interfaceresulttype"))
            writer.uint32(/* id 7, wireType 0 =*/56).int32(message.interfaceresulttype);
        if (message.successful != null && Object.hasOwnProperty.call(message, "successful"))
            writer.uint32(/* id 8, wireType 0 =*/64).bool(message.successful);
        if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
            writer.uint32(/* id 9, wireType 0 =*/72).int64(message.requestId);
        if (message.requestScenarioId != null && Object.hasOwnProperty.call(message, "requestScenarioId"))
            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.requestScenarioId);
        if (message.requestParentScenarioId != null && Object.hasOwnProperty.call(message, "requestParentScenarioId"))
            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.requestParentScenarioId);
        if (message.ObjectClassName != null && Object.hasOwnProperty.call(message, "ObjectClassName"))
            writer.uint32(/* id 20, wireType 2 =*/162).bytes(message.ObjectClassName);
        if (message.ObjectReferenceID != null && Object.hasOwnProperty.call(message, "ObjectReferenceID"))
            writer.uint32(/* id 21, wireType 0 =*/168).int64(message.ObjectReferenceID);
        if (message.Message != null && Object.hasOwnProperty.call(message, "Message"))
            writer.uint32(/* id 22, wireType 2 =*/178).bytes(message.Message);
        if (message.MessageBoxButtonType != null && Object.hasOwnProperty.call(message, "MessageBoxButtonType"))
            writer.uint32(/* id 23, wireType 0 =*/184).int32(message.MessageBoxButtonType);
        if (message.FormName != null && Object.hasOwnProperty.call(message, "FormName"))
            writer.uint32(/* id 24, wireType 2 =*/194).bytes(message.FormName);
        if (message.ClientRequestID != null && Object.hasOwnProperty.call(message, "ClientRequestID"))
            writer.uint32(/* id 30, wireType 0 =*/240).int32(message.ClientRequestID);
        if (message.GUICommand != null && message.GUICommand.length)
            for (var i = 0; i < message.GUICommand.length; ++i)
                $root.Proto_GUICommand.encode(message.GUICommand[i], writer.uint32(/* id 41, wireType 2 =*/330).fork()).ldelim();
        if (message.processreleasedata != null && Object.hasOwnProperty.call(message, "processreleasedata"))
            $root.Proto_ProcessReleaseData.encode(message.processreleasedata, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();
        if (message.serverinstanceid != null && Object.hasOwnProperty.call(message, "serverinstanceid"))
            writer.uint32(/* id 51, wireType 0 =*/408).int32(message.serverinstanceid);
        return writer;
    };

    /**
     * Encodes the specified Proto_ReplyValue message, length delimited. Does not implicitly {@link Proto_ReplyValue.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ReplyValue
     * @static
     * @param {IProto_ReplyValue} message Proto_ReplyValue message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReplyValue.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ReplyValue message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ReplyValue
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ReplyValue} Proto_ReplyValue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReplyValue.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ReplyValue();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.stringvalue = reader.bytes();
                break;
            case 2:
                message.timevalue = reader.int64();
                break;
            case 3:
                message.numbervalue = reader.double();
                break;
            case 4:
                message.integervalue = reader.int64();
                break;
            case 5:
                message.referenceid = reader.int64();
                break;
            case 6:
                message.isnullvalue = reader.bool();
                break;
            case 7:
                message.interfaceresulttype = reader.int32();
                break;
            case 8:
                message.successful = reader.bool();
                break;
            case 9:
                message.requestId = reader.int64();
                break;
            case 10:
                message.requestScenarioId = reader.int32();
                break;
            case 11:
                message.requestParentScenarioId = reader.int32();
                break;
            case 20:
                message.ObjectClassName = reader.bytes();
                break;
            case 21:
                message.ObjectReferenceID = reader.int64();
                break;
            case 22:
                message.Message = reader.bytes();
                break;
            case 23:
                message.MessageBoxButtonType = reader.int32();
                break;
            case 24:
                message.FormName = reader.bytes();
                break;
            case 30:
                message.ClientRequestID = reader.int32();
                break;
            case 41:
                if (!(message.GUICommand && message.GUICommand.length))
                    message.GUICommand = [];
                message.GUICommand.push($root.Proto_GUICommand.decode(reader, reader.uint32()));
                break;
            case 50:
                message.processreleasedata = $root.Proto_ProcessReleaseData.decode(reader, reader.uint32());
                break;
            case 51:
                message.serverinstanceid = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ReplyValue message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ReplyValue
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ReplyValue} Proto_ReplyValue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReplyValue.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ReplyValue message.
     * @function verify
     * @memberof Proto_ReplyValue
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ReplyValue.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.stringvalue != null && message.hasOwnProperty("stringvalue")) {
            properties.value = 1;
            if (!(message.stringvalue && typeof message.stringvalue.length === "number" || $util.isString(message.stringvalue)))
                return "stringvalue: buffer expected";
        }
        if (message.timevalue != null && message.hasOwnProperty("timevalue")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!$util.isInteger(message.timevalue) && !(message.timevalue && $util.isInteger(message.timevalue.low) && $util.isInteger(message.timevalue.high)))
                return "timevalue: integer|Long expected";
        }
        if (message.numbervalue != null && message.hasOwnProperty("numbervalue")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (typeof message.numbervalue !== "number")
                return "numbervalue: number expected";
        }
        if (message.integervalue != null && message.hasOwnProperty("integervalue")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!$util.isInteger(message.integervalue) && !(message.integervalue && $util.isInteger(message.integervalue.low) && $util.isInteger(message.integervalue.high)))
                return "integervalue: integer|Long expected";
        }
        if (message.referenceid != null && message.hasOwnProperty("referenceid")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!$util.isInteger(message.referenceid) && !(message.referenceid && $util.isInteger(message.referenceid.low) && $util.isInteger(message.referenceid.high)))
                return "referenceid: integer|Long expected";
        }
        if (message.isnullvalue != null && message.hasOwnProperty("isnullvalue")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (typeof message.isnullvalue !== "boolean")
                return "isnullvalue: boolean expected";
        }
        if (message.interfaceresulttype != null && message.hasOwnProperty("interfaceresulttype"))
            if (!$util.isInteger(message.interfaceresulttype))
                return "interfaceresulttype: integer expected";
        if (message.successful != null && message.hasOwnProperty("successful"))
            if (typeof message.successful !== "boolean")
                return "successful: boolean expected";
        if (message.requestId != null && message.hasOwnProperty("requestId"))
            if (!$util.isInteger(message.requestId) && !(message.requestId && $util.isInteger(message.requestId.low) && $util.isInteger(message.requestId.high)))
                return "requestId: integer|Long expected";
        if (message.requestScenarioId != null && message.hasOwnProperty("requestScenarioId"))
            if (!$util.isInteger(message.requestScenarioId))
                return "requestScenarioId: integer expected";
        if (message.requestParentScenarioId != null && message.hasOwnProperty("requestParentScenarioId"))
            if (!$util.isInteger(message.requestParentScenarioId))
                return "requestParentScenarioId: integer expected";
        if (message.ObjectClassName != null && message.hasOwnProperty("ObjectClassName"))
            if (!(message.ObjectClassName && typeof message.ObjectClassName.length === "number" || $util.isString(message.ObjectClassName)))
                return "ObjectClassName: buffer expected";
        if (message.ObjectReferenceID != null && message.hasOwnProperty("ObjectReferenceID"))
            if (!$util.isInteger(message.ObjectReferenceID) && !(message.ObjectReferenceID && $util.isInteger(message.ObjectReferenceID.low) && $util.isInteger(message.ObjectReferenceID.high)))
                return "ObjectReferenceID: integer|Long expected";
        if (message.Message != null && message.hasOwnProperty("Message"))
            if (!(message.Message && typeof message.Message.length === "number" || $util.isString(message.Message)))
                return "Message: buffer expected";
        if (message.MessageBoxButtonType != null && message.hasOwnProperty("MessageBoxButtonType"))
            if (!$util.isInteger(message.MessageBoxButtonType))
                return "MessageBoxButtonType: integer expected";
        if (message.FormName != null && message.hasOwnProperty("FormName"))
            if (!(message.FormName && typeof message.FormName.length === "number" || $util.isString(message.FormName)))
                return "FormName: buffer expected";
        if (message.ClientRequestID != null && message.hasOwnProperty("ClientRequestID"))
            if (!$util.isInteger(message.ClientRequestID))
                return "ClientRequestID: integer expected";
        if (message.GUICommand != null && message.hasOwnProperty("GUICommand")) {
            if (!Array.isArray(message.GUICommand))
                return "GUICommand: array expected";
            for (var i = 0; i < message.GUICommand.length; ++i) {
                var error = $root.Proto_GUICommand.verify(message.GUICommand[i]);
                if (error)
                    return "GUICommand." + error;
            }
        }
        if (message.processreleasedata != null && message.hasOwnProperty("processreleasedata")) {
            var error = $root.Proto_ProcessReleaseData.verify(message.processreleasedata);
            if (error)
                return "processreleasedata." + error;
        }
        if (message.serverinstanceid != null && message.hasOwnProperty("serverinstanceid"))
            if (!$util.isInteger(message.serverinstanceid))
                return "serverinstanceid: integer expected";
        return null;
    };

    /**
     * Creates a Proto_ReplyValue message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ReplyValue
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ReplyValue} Proto_ReplyValue
     */
    Proto_ReplyValue.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ReplyValue)
            return object;
        var message = new $root.Proto_ReplyValue();
        if (object.stringvalue != null)
            if (typeof object.stringvalue === "string")
                $util.base64.decode(object.stringvalue, message.stringvalue = $util.newBuffer($util.base64.length(object.stringvalue)), 0);
            else if (object.stringvalue.length)
                message.stringvalue = object.stringvalue;
        if (object.timevalue != null)
            if ($util.Long)
                (message.timevalue = $util.Long.fromValue(object.timevalue)).unsigned = false;
            else if (typeof object.timevalue === "string")
                message.timevalue = parseInt(object.timevalue, 10);
            else if (typeof object.timevalue === "number")
                message.timevalue = object.timevalue;
            else if (typeof object.timevalue === "object")
                message.timevalue = new $util.LongBits(object.timevalue.low >>> 0, object.timevalue.high >>> 0).toNumber();
        if (object.numbervalue != null)
            message.numbervalue = Number(object.numbervalue);
        if (object.integervalue != null)
            if ($util.Long)
                (message.integervalue = $util.Long.fromValue(object.integervalue)).unsigned = false;
            else if (typeof object.integervalue === "string")
                message.integervalue = parseInt(object.integervalue, 10);
            else if (typeof object.integervalue === "number")
                message.integervalue = object.integervalue;
            else if (typeof object.integervalue === "object")
                message.integervalue = new $util.LongBits(object.integervalue.low >>> 0, object.integervalue.high >>> 0).toNumber();
        if (object.referenceid != null)
            if ($util.Long)
                (message.referenceid = $util.Long.fromValue(object.referenceid)).unsigned = false;
            else if (typeof object.referenceid === "string")
                message.referenceid = parseInt(object.referenceid, 10);
            else if (typeof object.referenceid === "number")
                message.referenceid = object.referenceid;
            else if (typeof object.referenceid === "object")
                message.referenceid = new $util.LongBits(object.referenceid.low >>> 0, object.referenceid.high >>> 0).toNumber();
        if (object.isnullvalue != null)
            message.isnullvalue = Boolean(object.isnullvalue);
        if (object.interfaceresulttype != null)
            message.interfaceresulttype = object.interfaceresulttype | 0;
        if (object.successful != null)
            message.successful = Boolean(object.successful);
        if (object.requestId != null)
            if ($util.Long)
                (message.requestId = $util.Long.fromValue(object.requestId)).unsigned = false;
            else if (typeof object.requestId === "string")
                message.requestId = parseInt(object.requestId, 10);
            else if (typeof object.requestId === "number")
                message.requestId = object.requestId;
            else if (typeof object.requestId === "object")
                message.requestId = new $util.LongBits(object.requestId.low >>> 0, object.requestId.high >>> 0).toNumber();
        if (object.requestScenarioId != null)
            message.requestScenarioId = object.requestScenarioId | 0;
        if (object.requestParentScenarioId != null)
            message.requestParentScenarioId = object.requestParentScenarioId | 0;
        if (object.ObjectClassName != null)
            if (typeof object.ObjectClassName === "string")
                $util.base64.decode(object.ObjectClassName, message.ObjectClassName = $util.newBuffer($util.base64.length(object.ObjectClassName)), 0);
            else if (object.ObjectClassName.length)
                message.ObjectClassName = object.ObjectClassName;
        if (object.ObjectReferenceID != null)
            if ($util.Long)
                (message.ObjectReferenceID = $util.Long.fromValue(object.ObjectReferenceID)).unsigned = false;
            else if (typeof object.ObjectReferenceID === "string")
                message.ObjectReferenceID = parseInt(object.ObjectReferenceID, 10);
            else if (typeof object.ObjectReferenceID === "number")
                message.ObjectReferenceID = object.ObjectReferenceID;
            else if (typeof object.ObjectReferenceID === "object")
                message.ObjectReferenceID = new $util.LongBits(object.ObjectReferenceID.low >>> 0, object.ObjectReferenceID.high >>> 0).toNumber();
        if (object.Message != null)
            if (typeof object.Message === "string")
                $util.base64.decode(object.Message, message.Message = $util.newBuffer($util.base64.length(object.Message)), 0);
            else if (object.Message.length)
                message.Message = object.Message;
        if (object.MessageBoxButtonType != null)
            message.MessageBoxButtonType = object.MessageBoxButtonType | 0;
        if (object.FormName != null)
            if (typeof object.FormName === "string")
                $util.base64.decode(object.FormName, message.FormName = $util.newBuffer($util.base64.length(object.FormName)), 0);
            else if (object.FormName.length)
                message.FormName = object.FormName;
        if (object.ClientRequestID != null)
            message.ClientRequestID = object.ClientRequestID | 0;
        if (object.GUICommand) {
            if (!Array.isArray(object.GUICommand))
                throw TypeError(".Proto_ReplyValue.GUICommand: array expected");
            message.GUICommand = [];
            for (var i = 0; i < object.GUICommand.length; ++i) {
                if (typeof object.GUICommand[i] !== "object")
                    throw TypeError(".Proto_ReplyValue.GUICommand: object expected");
                message.GUICommand[i] = $root.Proto_GUICommand.fromObject(object.GUICommand[i]);
            }
        }
        if (object.processreleasedata != null) {
            if (typeof object.processreleasedata !== "object")
                throw TypeError(".Proto_ReplyValue.processreleasedata: object expected");
            message.processreleasedata = $root.Proto_ProcessReleaseData.fromObject(object.processreleasedata);
        }
        if (object.serverinstanceid != null)
            message.serverinstanceid = object.serverinstanceid | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_ReplyValue message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ReplyValue
     * @static
     * @param {Proto_ReplyValue} message Proto_ReplyValue
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ReplyValue.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.GUICommand = [];
        if (options.defaults) {
            object.interfaceresulttype = 0;
            object.successful = false;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.requestId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.requestId = options.longs === String ? "0" : 0;
            object.requestScenarioId = 0;
            object.requestParentScenarioId = 0;
            if (options.bytes === String)
                object.ObjectClassName = "";
            else {
                object.ObjectClassName = [];
                if (options.bytes !== Array)
                    object.ObjectClassName = $util.newBuffer(object.ObjectClassName);
            }
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.ObjectReferenceID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.ObjectReferenceID = options.longs === String ? "0" : 0;
            if (options.bytes === String)
                object.Message = "";
            else {
                object.Message = [];
                if (options.bytes !== Array)
                    object.Message = $util.newBuffer(object.Message);
            }
            object.MessageBoxButtonType = 0;
            if (options.bytes === String)
                object.FormName = "";
            else {
                object.FormName = [];
                if (options.bytes !== Array)
                    object.FormName = $util.newBuffer(object.FormName);
            }
            object.ClientRequestID = 0;
            object.processreleasedata = null;
            object.serverinstanceid = 0;
        }
        if (message.stringvalue != null && message.hasOwnProperty("stringvalue")) {
            object.stringvalue = options.bytes === String ? $util.base64.encode(message.stringvalue, 0, message.stringvalue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringvalue) : message.stringvalue;
            if (options.oneofs)
                object.value = "stringvalue";
        }
        if (message.timevalue != null && message.hasOwnProperty("timevalue")) {
            if (typeof message.timevalue === "number")
                object.timevalue = options.longs === String ? String(message.timevalue) : message.timevalue;
            else
                object.timevalue = options.longs === String ? $util.Long.prototype.toString.call(message.timevalue) : options.longs === Number ? new $util.LongBits(message.timevalue.low >>> 0, message.timevalue.high >>> 0).toNumber() : message.timevalue;
            if (options.oneofs)
                object.value = "timevalue";
        }
        if (message.numbervalue != null && message.hasOwnProperty("numbervalue")) {
            object.numbervalue = options.json && !isFinite(message.numbervalue) ? String(message.numbervalue) : message.numbervalue;
            if (options.oneofs)
                object.value = "numbervalue";
        }
        if (message.integervalue != null && message.hasOwnProperty("integervalue")) {
            if (typeof message.integervalue === "number")
                object.integervalue = options.longs === String ? String(message.integervalue) : message.integervalue;
            else
                object.integervalue = options.longs === String ? $util.Long.prototype.toString.call(message.integervalue) : options.longs === Number ? new $util.LongBits(message.integervalue.low >>> 0, message.integervalue.high >>> 0).toNumber() : message.integervalue;
            if (options.oneofs)
                object.value = "integervalue";
        }
        if (message.referenceid != null && message.hasOwnProperty("referenceid")) {
            if (typeof message.referenceid === "number")
                object.referenceid = options.longs === String ? String(message.referenceid) : message.referenceid;
            else
                object.referenceid = options.longs === String ? $util.Long.prototype.toString.call(message.referenceid) : options.longs === Number ? new $util.LongBits(message.referenceid.low >>> 0, message.referenceid.high >>> 0).toNumber() : message.referenceid;
            if (options.oneofs)
                object.value = "referenceid";
        }
        if (message.isnullvalue != null && message.hasOwnProperty("isnullvalue")) {
            object.isnullvalue = message.isnullvalue;
            if (options.oneofs)
                object.value = "isnullvalue";
        }
        if (message.interfaceresulttype != null && message.hasOwnProperty("interfaceresulttype"))
            object.interfaceresulttype = message.interfaceresulttype;
        if (message.successful != null && message.hasOwnProperty("successful"))
            object.successful = message.successful;
        if (message.requestId != null && message.hasOwnProperty("requestId"))
            if (typeof message.requestId === "number")
                object.requestId = options.longs === String ? String(message.requestId) : message.requestId;
            else
                object.requestId = options.longs === String ? $util.Long.prototype.toString.call(message.requestId) : options.longs === Number ? new $util.LongBits(message.requestId.low >>> 0, message.requestId.high >>> 0).toNumber() : message.requestId;
        if (message.requestScenarioId != null && message.hasOwnProperty("requestScenarioId"))
            object.requestScenarioId = message.requestScenarioId;
        if (message.requestParentScenarioId != null && message.hasOwnProperty("requestParentScenarioId"))
            object.requestParentScenarioId = message.requestParentScenarioId;
        if (message.ObjectClassName != null && message.hasOwnProperty("ObjectClassName"))
            object.ObjectClassName = options.bytes === String ? $util.base64.encode(message.ObjectClassName, 0, message.ObjectClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ObjectClassName) : message.ObjectClassName;
        if (message.ObjectReferenceID != null && message.hasOwnProperty("ObjectReferenceID"))
            if (typeof message.ObjectReferenceID === "number")
                object.ObjectReferenceID = options.longs === String ? String(message.ObjectReferenceID) : message.ObjectReferenceID;
            else
                object.ObjectReferenceID = options.longs === String ? $util.Long.prototype.toString.call(message.ObjectReferenceID) : options.longs === Number ? new $util.LongBits(message.ObjectReferenceID.low >>> 0, message.ObjectReferenceID.high >>> 0).toNumber() : message.ObjectReferenceID;
        if (message.Message != null && message.hasOwnProperty("Message"))
            object.Message = options.bytes === String ? $util.base64.encode(message.Message, 0, message.Message.length) : options.bytes === Array ? Array.prototype.slice.call(message.Message) : message.Message;
        if (message.MessageBoxButtonType != null && message.hasOwnProperty("MessageBoxButtonType"))
            object.MessageBoxButtonType = message.MessageBoxButtonType;
        if (message.FormName != null && message.hasOwnProperty("FormName"))
            object.FormName = options.bytes === String ? $util.base64.encode(message.FormName, 0, message.FormName.length) : options.bytes === Array ? Array.prototype.slice.call(message.FormName) : message.FormName;
        if (message.ClientRequestID != null && message.hasOwnProperty("ClientRequestID"))
            object.ClientRequestID = message.ClientRequestID;
        if (message.GUICommand && message.GUICommand.length) {
            object.GUICommand = [];
            for (var j = 0; j < message.GUICommand.length; ++j)
                object.GUICommand[j] = $root.Proto_GUICommand.toObject(message.GUICommand[j], options);
        }
        if (message.processreleasedata != null && message.hasOwnProperty("processreleasedata"))
            object.processreleasedata = $root.Proto_ProcessReleaseData.toObject(message.processreleasedata, options);
        if (message.serverinstanceid != null && message.hasOwnProperty("serverinstanceid"))
            object.serverinstanceid = message.serverinstanceid;
        return object;
    };

    /**
     * Converts this Proto_ReplyValue to JSON.
     * @function toJSON
     * @memberof Proto_ReplyValue
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ReplyValue.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ReplyValue;
})();

$root.Proto_ClientLoginResponse = (function() {

    /**
     * Properties of a Proto_ClientLoginResponse.
     * @exports IProto_ClientLoginResponse
     * @interface IProto_ClientLoginResponse
     * @property {boolean|null} [successful] Proto_ClientLoginResponse successful
     * @property {Uint8Array|null} [ErrorMessage] Proto_ClientLoginResponse ErrorMessage
     * @property {number|null} [serverinstanceid] Proto_ClientLoginResponse serverinstanceid
     * @property {number|Long|null} [UserReferenceId] Proto_ClientLoginResponse UserReferenceId
     * @property {Uint8Array|null} [Language] Proto_ClientLoginResponse Language
     * @property {Uint8Array|null} [TraceHost] Proto_ClientLoginResponse TraceHost
     * @property {number|null} [TracePort] Proto_ClientLoginResponse TracePort
     * @property {number|null} [TraceRatio] Proto_ClientLoginResponse TraceRatio
     * @property {Array.<IProto_ICRONServer>|null} [AutoConnect] Proto_ClientLoginResponse AutoConnect
     */

    /**
     * Constructs a new Proto_ClientLoginResponse.
     * @exports Proto_ClientLoginResponse
     * @classdesc Represents a Proto_ClientLoginResponse.
     * @implements IProto_ClientLoginResponse
     * @constructor
     * @param {IProto_ClientLoginResponse=} [properties] Properties to set
     */
    function Proto_ClientLoginResponse(properties) {
        this.AutoConnect = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ClientLoginResponse successful.
     * @member {boolean} successful
     * @memberof Proto_ClientLoginResponse
     * @instance
     */
    Proto_ClientLoginResponse.prototype.successful = false;

    /**
     * Proto_ClientLoginResponse ErrorMessage.
     * @member {Uint8Array} ErrorMessage
     * @memberof Proto_ClientLoginResponse
     * @instance
     */
    Proto_ClientLoginResponse.prototype.ErrorMessage = $util.newBuffer([]);

    /**
     * Proto_ClientLoginResponse serverinstanceid.
     * @member {number} serverinstanceid
     * @memberof Proto_ClientLoginResponse
     * @instance
     */
    Proto_ClientLoginResponse.prototype.serverinstanceid = 0;

    /**
     * Proto_ClientLoginResponse UserReferenceId.
     * @member {number|Long} UserReferenceId
     * @memberof Proto_ClientLoginResponse
     * @instance
     */
    Proto_ClientLoginResponse.prototype.UserReferenceId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ClientLoginResponse Language.
     * @member {Uint8Array} Language
     * @memberof Proto_ClientLoginResponse
     * @instance
     */
    Proto_ClientLoginResponse.prototype.Language = $util.newBuffer([]);

    /**
     * Proto_ClientLoginResponse TraceHost.
     * @member {Uint8Array} TraceHost
     * @memberof Proto_ClientLoginResponse
     * @instance
     */
    Proto_ClientLoginResponse.prototype.TraceHost = $util.newBuffer([]);

    /**
     * Proto_ClientLoginResponse TracePort.
     * @member {number} TracePort
     * @memberof Proto_ClientLoginResponse
     * @instance
     */
    Proto_ClientLoginResponse.prototype.TracePort = 0;

    /**
     * Proto_ClientLoginResponse TraceRatio.
     * @member {number} TraceRatio
     * @memberof Proto_ClientLoginResponse
     * @instance
     */
    Proto_ClientLoginResponse.prototype.TraceRatio = 0;

    /**
     * Proto_ClientLoginResponse AutoConnect.
     * @member {Array.<IProto_ICRONServer>} AutoConnect
     * @memberof Proto_ClientLoginResponse
     * @instance
     */
    Proto_ClientLoginResponse.prototype.AutoConnect = $util.emptyArray;

    /**
     * Creates a new Proto_ClientLoginResponse instance using the specified properties.
     * @function create
     * @memberof Proto_ClientLoginResponse
     * @static
     * @param {IProto_ClientLoginResponse=} [properties] Properties to set
     * @returns {Proto_ClientLoginResponse} Proto_ClientLoginResponse instance
     */
    Proto_ClientLoginResponse.create = function create(properties) {
        return new Proto_ClientLoginResponse(properties);
    };

    /**
     * Encodes the specified Proto_ClientLoginResponse message. Does not implicitly {@link Proto_ClientLoginResponse.verify|verify} messages.
     * @function encode
     * @memberof Proto_ClientLoginResponse
     * @static
     * @param {IProto_ClientLoginResponse} message Proto_ClientLoginResponse message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ClientLoginResponse.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.successful != null && Object.hasOwnProperty.call(message, "successful"))
            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.successful);
        if (message.ErrorMessage != null && Object.hasOwnProperty.call(message, "ErrorMessage"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.ErrorMessage);
        if (message.serverinstanceid != null && Object.hasOwnProperty.call(message, "serverinstanceid"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.serverinstanceid);
        if (message.UserReferenceId != null && Object.hasOwnProperty.call(message, "UserReferenceId"))
            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.UserReferenceId);
        if (message.Language != null && Object.hasOwnProperty.call(message, "Language"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.Language);
        if (message.TraceHost != null && Object.hasOwnProperty.call(message, "TraceHost"))
            writer.uint32(/* id 10, wireType 2 =*/82).bytes(message.TraceHost);
        if (message.TracePort != null && Object.hasOwnProperty.call(message, "TracePort"))
            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.TracePort);
        if (message.TraceRatio != null && Object.hasOwnProperty.call(message, "TraceRatio"))
            writer.uint32(/* id 12, wireType 1 =*/97).double(message.TraceRatio);
        if (message.AutoConnect != null && message.AutoConnect.length)
            for (var i = 0; i < message.AutoConnect.length; ++i)
                $root.Proto_ICRONServer.encode(message.AutoConnect[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_ClientLoginResponse message, length delimited. Does not implicitly {@link Proto_ClientLoginResponse.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ClientLoginResponse
     * @static
     * @param {IProto_ClientLoginResponse} message Proto_ClientLoginResponse message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ClientLoginResponse.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ClientLoginResponse message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ClientLoginResponse
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ClientLoginResponse} Proto_ClientLoginResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ClientLoginResponse.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ClientLoginResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.successful = reader.bool();
                break;
            case 2:
                message.ErrorMessage = reader.bytes();
                break;
            case 3:
                message.serverinstanceid = reader.int32();
                break;
            case 4:
                message.UserReferenceId = reader.int64();
                break;
            case 5:
                message.Language = reader.bytes();
                break;
            case 10:
                message.TraceHost = reader.bytes();
                break;
            case 11:
                message.TracePort = reader.int32();
                break;
            case 12:
                message.TraceRatio = reader.double();
                break;
            case 13:
                if (!(message.AutoConnect && message.AutoConnect.length))
                    message.AutoConnect = [];
                message.AutoConnect.push($root.Proto_ICRONServer.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ClientLoginResponse message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ClientLoginResponse
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ClientLoginResponse} Proto_ClientLoginResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ClientLoginResponse.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ClientLoginResponse message.
     * @function verify
     * @memberof Proto_ClientLoginResponse
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ClientLoginResponse.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.successful != null && message.hasOwnProperty("successful"))
            if (typeof message.successful !== "boolean")
                return "successful: boolean expected";
        if (message.ErrorMessage != null && message.hasOwnProperty("ErrorMessage"))
            if (!(message.ErrorMessage && typeof message.ErrorMessage.length === "number" || $util.isString(message.ErrorMessage)))
                return "ErrorMessage: buffer expected";
        if (message.serverinstanceid != null && message.hasOwnProperty("serverinstanceid"))
            if (!$util.isInteger(message.serverinstanceid))
                return "serverinstanceid: integer expected";
        if (message.UserReferenceId != null && message.hasOwnProperty("UserReferenceId"))
            if (!$util.isInteger(message.UserReferenceId) && !(message.UserReferenceId && $util.isInteger(message.UserReferenceId.low) && $util.isInteger(message.UserReferenceId.high)))
                return "UserReferenceId: integer|Long expected";
        if (message.Language != null && message.hasOwnProperty("Language"))
            if (!(message.Language && typeof message.Language.length === "number" || $util.isString(message.Language)))
                return "Language: buffer expected";
        if (message.TraceHost != null && message.hasOwnProperty("TraceHost"))
            if (!(message.TraceHost && typeof message.TraceHost.length === "number" || $util.isString(message.TraceHost)))
                return "TraceHost: buffer expected";
        if (message.TracePort != null && message.hasOwnProperty("TracePort"))
            if (!$util.isInteger(message.TracePort))
                return "TracePort: integer expected";
        if (message.TraceRatio != null && message.hasOwnProperty("TraceRatio"))
            if (typeof message.TraceRatio !== "number")
                return "TraceRatio: number expected";
        if (message.AutoConnect != null && message.hasOwnProperty("AutoConnect")) {
            if (!Array.isArray(message.AutoConnect))
                return "AutoConnect: array expected";
            for (var i = 0; i < message.AutoConnect.length; ++i) {
                var error = $root.Proto_ICRONServer.verify(message.AutoConnect[i]);
                if (error)
                    return "AutoConnect." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_ClientLoginResponse message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ClientLoginResponse
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ClientLoginResponse} Proto_ClientLoginResponse
     */
    Proto_ClientLoginResponse.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ClientLoginResponse)
            return object;
        var message = new $root.Proto_ClientLoginResponse();
        if (object.successful != null)
            message.successful = Boolean(object.successful);
        if (object.ErrorMessage != null)
            if (typeof object.ErrorMessage === "string")
                $util.base64.decode(object.ErrorMessage, message.ErrorMessage = $util.newBuffer($util.base64.length(object.ErrorMessage)), 0);
            else if (object.ErrorMessage.length)
                message.ErrorMessage = object.ErrorMessage;
        if (object.serverinstanceid != null)
            message.serverinstanceid = object.serverinstanceid | 0;
        if (object.UserReferenceId != null)
            if ($util.Long)
                (message.UserReferenceId = $util.Long.fromValue(object.UserReferenceId)).unsigned = false;
            else if (typeof object.UserReferenceId === "string")
                message.UserReferenceId = parseInt(object.UserReferenceId, 10);
            else if (typeof object.UserReferenceId === "number")
                message.UserReferenceId = object.UserReferenceId;
            else if (typeof object.UserReferenceId === "object")
                message.UserReferenceId = new $util.LongBits(object.UserReferenceId.low >>> 0, object.UserReferenceId.high >>> 0).toNumber();
        if (object.Language != null)
            if (typeof object.Language === "string")
                $util.base64.decode(object.Language, message.Language = $util.newBuffer($util.base64.length(object.Language)), 0);
            else if (object.Language.length)
                message.Language = object.Language;
        if (object.TraceHost != null)
            if (typeof object.TraceHost === "string")
                $util.base64.decode(object.TraceHost, message.TraceHost = $util.newBuffer($util.base64.length(object.TraceHost)), 0);
            else if (object.TraceHost.length)
                message.TraceHost = object.TraceHost;
        if (object.TracePort != null)
            message.TracePort = object.TracePort | 0;
        if (object.TraceRatio != null)
            message.TraceRatio = Number(object.TraceRatio);
        if (object.AutoConnect) {
            if (!Array.isArray(object.AutoConnect))
                throw TypeError(".Proto_ClientLoginResponse.AutoConnect: array expected");
            message.AutoConnect = [];
            for (var i = 0; i < object.AutoConnect.length; ++i) {
                if (typeof object.AutoConnect[i] !== "object")
                    throw TypeError(".Proto_ClientLoginResponse.AutoConnect: object expected");
                message.AutoConnect[i] = $root.Proto_ICRONServer.fromObject(object.AutoConnect[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_ClientLoginResponse message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ClientLoginResponse
     * @static
     * @param {Proto_ClientLoginResponse} message Proto_ClientLoginResponse
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ClientLoginResponse.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.AutoConnect = [];
        if (options.defaults) {
            object.successful = false;
            if (options.bytes === String)
                object.ErrorMessage = "";
            else {
                object.ErrorMessage = [];
                if (options.bytes !== Array)
                    object.ErrorMessage = $util.newBuffer(object.ErrorMessage);
            }
            object.serverinstanceid = 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.UserReferenceId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.UserReferenceId = options.longs === String ? "0" : 0;
            if (options.bytes === String)
                object.Language = "";
            else {
                object.Language = [];
                if (options.bytes !== Array)
                    object.Language = $util.newBuffer(object.Language);
            }
            if (options.bytes === String)
                object.TraceHost = "";
            else {
                object.TraceHost = [];
                if (options.bytes !== Array)
                    object.TraceHost = $util.newBuffer(object.TraceHost);
            }
            object.TracePort = 0;
            object.TraceRatio = 0;
        }
        if (message.successful != null && message.hasOwnProperty("successful"))
            object.successful = message.successful;
        if (message.ErrorMessage != null && message.hasOwnProperty("ErrorMessage"))
            object.ErrorMessage = options.bytes === String ? $util.base64.encode(message.ErrorMessage, 0, message.ErrorMessage.length) : options.bytes === Array ? Array.prototype.slice.call(message.ErrorMessage) : message.ErrorMessage;
        if (message.serverinstanceid != null && message.hasOwnProperty("serverinstanceid"))
            object.serverinstanceid = message.serverinstanceid;
        if (message.UserReferenceId != null && message.hasOwnProperty("UserReferenceId"))
            if (typeof message.UserReferenceId === "number")
                object.UserReferenceId = options.longs === String ? String(message.UserReferenceId) : message.UserReferenceId;
            else
                object.UserReferenceId = options.longs === String ? $util.Long.prototype.toString.call(message.UserReferenceId) : options.longs === Number ? new $util.LongBits(message.UserReferenceId.low >>> 0, message.UserReferenceId.high >>> 0).toNumber() : message.UserReferenceId;
        if (message.Language != null && message.hasOwnProperty("Language"))
            object.Language = options.bytes === String ? $util.base64.encode(message.Language, 0, message.Language.length) : options.bytes === Array ? Array.prototype.slice.call(message.Language) : message.Language;
        if (message.TraceHost != null && message.hasOwnProperty("TraceHost"))
            object.TraceHost = options.bytes === String ? $util.base64.encode(message.TraceHost, 0, message.TraceHost.length) : options.bytes === Array ? Array.prototype.slice.call(message.TraceHost) : message.TraceHost;
        if (message.TracePort != null && message.hasOwnProperty("TracePort"))
            object.TracePort = message.TracePort;
        if (message.TraceRatio != null && message.hasOwnProperty("TraceRatio"))
            object.TraceRatio = options.json && !isFinite(message.TraceRatio) ? String(message.TraceRatio) : message.TraceRatio;
        if (message.AutoConnect && message.AutoConnect.length) {
            object.AutoConnect = [];
            for (var j = 0; j < message.AutoConnect.length; ++j)
                object.AutoConnect[j] = $root.Proto_ICRONServer.toObject(message.AutoConnect[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_ClientLoginResponse to JSON.
     * @function toJSON
     * @memberof Proto_ClientLoginResponse
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ClientLoginResponse.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ClientLoginResponse;
})();

$root.Proto_DataSet = (function() {

    /**
     * Properties of a Proto_DataSet.
     * @exports IProto_DataSet
     * @interface IProto_DataSet
     * @property {Array.<IProto_DataTable>|null} [table] Proto_DataSet table
     * @property {Array.<Uint8Array>|null} [CachedString] Proto_DataSet CachedString
     */

    /**
     * Constructs a new Proto_DataSet.
     * @exports Proto_DataSet
     * @classdesc Represents a Proto_DataSet.
     * @implements IProto_DataSet
     * @constructor
     * @param {IProto_DataSet=} [properties] Properties to set
     */
    function Proto_DataSet(properties) {
        this.table = [];
        this.CachedString = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataSet table.
     * @member {Array.<IProto_DataTable>} table
     * @memberof Proto_DataSet
     * @instance
     */
    Proto_DataSet.prototype.table = $util.emptyArray;

    /**
     * Proto_DataSet CachedString.
     * @member {Array.<Uint8Array>} CachedString
     * @memberof Proto_DataSet
     * @instance
     */
    Proto_DataSet.prototype.CachedString = $util.emptyArray;

    /**
     * Creates a new Proto_DataSet instance using the specified properties.
     * @function create
     * @memberof Proto_DataSet
     * @static
     * @param {IProto_DataSet=} [properties] Properties to set
     * @returns {Proto_DataSet} Proto_DataSet instance
     */
    Proto_DataSet.create = function create(properties) {
        return new Proto_DataSet(properties);
    };

    /**
     * Encodes the specified Proto_DataSet message. Does not implicitly {@link Proto_DataSet.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataSet
     * @static
     * @param {IProto_DataSet} message Proto_DataSet message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSet.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.table != null && message.table.length)
            for (var i = 0; i < message.table.length; ++i)
                $root.Proto_DataTable.encode(message.table[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
        if (message.CachedString != null && message.CachedString.length)
            for (var i = 0; i < message.CachedString.length; ++i)
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.CachedString[i]);
        return writer;
    };

    /**
     * Encodes the specified Proto_DataSet message, length delimited. Does not implicitly {@link Proto_DataSet.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataSet
     * @static
     * @param {IProto_DataSet} message Proto_DataSet message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSet.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataSet message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataSet
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataSet} Proto_DataSet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSet.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataSet();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 5:
                if (!(message.table && message.table.length))
                    message.table = [];
                message.table.push($root.Proto_DataTable.decode(reader, reader.uint32()));
                break;
            case 6:
                if (!(message.CachedString && message.CachedString.length))
                    message.CachedString = [];
                message.CachedString.push(reader.bytes());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataSet message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataSet
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataSet} Proto_DataSet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSet.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataSet message.
     * @function verify
     * @memberof Proto_DataSet
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataSet.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.table != null && message.hasOwnProperty("table")) {
            if (!Array.isArray(message.table))
                return "table: array expected";
            for (var i = 0; i < message.table.length; ++i) {
                var error = $root.Proto_DataTable.verify(message.table[i]);
                if (error)
                    return "table." + error;
            }
        }
        if (message.CachedString != null && message.hasOwnProperty("CachedString")) {
            if (!Array.isArray(message.CachedString))
                return "CachedString: array expected";
            for (var i = 0; i < message.CachedString.length; ++i)
                if (!(message.CachedString[i] && typeof message.CachedString[i].length === "number" || $util.isString(message.CachedString[i])))
                    return "CachedString: buffer[] expected";
        }
        return null;
    };

    /**
     * Creates a Proto_DataSet message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataSet
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataSet} Proto_DataSet
     */
    Proto_DataSet.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataSet)
            return object;
        var message = new $root.Proto_DataSet();
        if (object.table) {
            if (!Array.isArray(object.table))
                throw TypeError(".Proto_DataSet.table: array expected");
            message.table = [];
            for (var i = 0; i < object.table.length; ++i) {
                if (typeof object.table[i] !== "object")
                    throw TypeError(".Proto_DataSet.table: object expected");
                message.table[i] = $root.Proto_DataTable.fromObject(object.table[i]);
            }
        }
        if (object.CachedString) {
            if (!Array.isArray(object.CachedString))
                throw TypeError(".Proto_DataSet.CachedString: array expected");
            message.CachedString = [];
            for (var i = 0; i < object.CachedString.length; ++i)
                if (typeof object.CachedString[i] === "string")
                    $util.base64.decode(object.CachedString[i], message.CachedString[i] = $util.newBuffer($util.base64.length(object.CachedString[i])), 0);
                else if (object.CachedString[i].length)
                    message.CachedString[i] = object.CachedString[i];
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataSet message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataSet
     * @static
     * @param {Proto_DataSet} message Proto_DataSet
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataSet.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.table = [];
            object.CachedString = [];
        }
        if (message.table && message.table.length) {
            object.table = [];
            for (var j = 0; j < message.table.length; ++j)
                object.table[j] = $root.Proto_DataTable.toObject(message.table[j], options);
        }
        if (message.CachedString && message.CachedString.length) {
            object.CachedString = [];
            for (var j = 0; j < message.CachedString.length; ++j)
                object.CachedString[j] = options.bytes === String ? $util.base64.encode(message.CachedString[j], 0, message.CachedString[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.CachedString[j]) : message.CachedString[j];
        }
        return object;
    };

    /**
     * Converts this Proto_DataSet to JSON.
     * @function toJSON
     * @memberof Proto_DataSet
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataSet.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataSet;
})();

$root.Proto_ProcessReleaseData = (function() {

    /**
     * Properties of a Proto_ProcessReleaseData.
     * @exports IProto_ProcessReleaseData
     * @interface IProto_ProcessReleaseData
     * @property {Uint8Array|null} [ReleaseContextName] Proto_ProcessReleaseData ReleaseContextName
     * @property {Uint8Array|null} [ProcessCode] Proto_ProcessReleaseData ProcessCode
     * @property {Array.<IProto_ReleaseClassData>|null} [ReleaseClassData] Proto_ProcessReleaseData ReleaseClassData
     */

    /**
     * Constructs a new Proto_ProcessReleaseData.
     * @exports Proto_ProcessReleaseData
     * @classdesc Represents a Proto_ProcessReleaseData.
     * @implements IProto_ProcessReleaseData
     * @constructor
     * @param {IProto_ProcessReleaseData=} [properties] Properties to set
     */
    function Proto_ProcessReleaseData(properties) {
        this.ReleaseClassData = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ProcessReleaseData ReleaseContextName.
     * @member {Uint8Array} ReleaseContextName
     * @memberof Proto_ProcessReleaseData
     * @instance
     */
    Proto_ProcessReleaseData.prototype.ReleaseContextName = $util.newBuffer([]);

    /**
     * Proto_ProcessReleaseData ProcessCode.
     * @member {Uint8Array} ProcessCode
     * @memberof Proto_ProcessReleaseData
     * @instance
     */
    Proto_ProcessReleaseData.prototype.ProcessCode = $util.newBuffer([]);

    /**
     * Proto_ProcessReleaseData ReleaseClassData.
     * @member {Array.<IProto_ReleaseClassData>} ReleaseClassData
     * @memberof Proto_ProcessReleaseData
     * @instance
     */
    Proto_ProcessReleaseData.prototype.ReleaseClassData = $util.emptyArray;

    /**
     * Creates a new Proto_ProcessReleaseData instance using the specified properties.
     * @function create
     * @memberof Proto_ProcessReleaseData
     * @static
     * @param {IProto_ProcessReleaseData=} [properties] Properties to set
     * @returns {Proto_ProcessReleaseData} Proto_ProcessReleaseData instance
     */
    Proto_ProcessReleaseData.create = function create(properties) {
        return new Proto_ProcessReleaseData(properties);
    };

    /**
     * Encodes the specified Proto_ProcessReleaseData message. Does not implicitly {@link Proto_ProcessReleaseData.verify|verify} messages.
     * @function encode
     * @memberof Proto_ProcessReleaseData
     * @static
     * @param {IProto_ProcessReleaseData} message Proto_ProcessReleaseData message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ProcessReleaseData.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ReleaseContextName != null && Object.hasOwnProperty.call(message, "ReleaseContextName"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ReleaseContextName);
        if (message.ProcessCode != null && Object.hasOwnProperty.call(message, "ProcessCode"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.ProcessCode);
        if (message.ReleaseClassData != null && message.ReleaseClassData.length)
            for (var i = 0; i < message.ReleaseClassData.length; ++i)
                $root.Proto_ReleaseClassData.encode(message.ReleaseClassData[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_ProcessReleaseData message, length delimited. Does not implicitly {@link Proto_ProcessReleaseData.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ProcessReleaseData
     * @static
     * @param {IProto_ProcessReleaseData} message Proto_ProcessReleaseData message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ProcessReleaseData.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ProcessReleaseData message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ProcessReleaseData
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ProcessReleaseData} Proto_ProcessReleaseData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ProcessReleaseData.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ProcessReleaseData();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ReleaseContextName = reader.bytes();
                break;
            case 2:
                message.ProcessCode = reader.bytes();
                break;
            case 5:
                if (!(message.ReleaseClassData && message.ReleaseClassData.length))
                    message.ReleaseClassData = [];
                message.ReleaseClassData.push($root.Proto_ReleaseClassData.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ProcessReleaseData message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ProcessReleaseData
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ProcessReleaseData} Proto_ProcessReleaseData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ProcessReleaseData.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ProcessReleaseData message.
     * @function verify
     * @memberof Proto_ProcessReleaseData
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ProcessReleaseData.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ReleaseContextName != null && message.hasOwnProperty("ReleaseContextName"))
            if (!(message.ReleaseContextName && typeof message.ReleaseContextName.length === "number" || $util.isString(message.ReleaseContextName)))
                return "ReleaseContextName: buffer expected";
        if (message.ProcessCode != null && message.hasOwnProperty("ProcessCode"))
            if (!(message.ProcessCode && typeof message.ProcessCode.length === "number" || $util.isString(message.ProcessCode)))
                return "ProcessCode: buffer expected";
        if (message.ReleaseClassData != null && message.hasOwnProperty("ReleaseClassData")) {
            if (!Array.isArray(message.ReleaseClassData))
                return "ReleaseClassData: array expected";
            for (var i = 0; i < message.ReleaseClassData.length; ++i) {
                var error = $root.Proto_ReleaseClassData.verify(message.ReleaseClassData[i]);
                if (error)
                    return "ReleaseClassData." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_ProcessReleaseData message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ProcessReleaseData
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ProcessReleaseData} Proto_ProcessReleaseData
     */
    Proto_ProcessReleaseData.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ProcessReleaseData)
            return object;
        var message = new $root.Proto_ProcessReleaseData();
        if (object.ReleaseContextName != null)
            if (typeof object.ReleaseContextName === "string")
                $util.base64.decode(object.ReleaseContextName, message.ReleaseContextName = $util.newBuffer($util.base64.length(object.ReleaseContextName)), 0);
            else if (object.ReleaseContextName.length)
                message.ReleaseContextName = object.ReleaseContextName;
        if (object.ProcessCode != null)
            if (typeof object.ProcessCode === "string")
                $util.base64.decode(object.ProcessCode, message.ProcessCode = $util.newBuffer($util.base64.length(object.ProcessCode)), 0);
            else if (object.ProcessCode.length)
                message.ProcessCode = object.ProcessCode;
        if (object.ReleaseClassData) {
            if (!Array.isArray(object.ReleaseClassData))
                throw TypeError(".Proto_ProcessReleaseData.ReleaseClassData: array expected");
            message.ReleaseClassData = [];
            for (var i = 0; i < object.ReleaseClassData.length; ++i) {
                if (typeof object.ReleaseClassData[i] !== "object")
                    throw TypeError(".Proto_ProcessReleaseData.ReleaseClassData: object expected");
                message.ReleaseClassData[i] = $root.Proto_ReleaseClassData.fromObject(object.ReleaseClassData[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_ProcessReleaseData message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ProcessReleaseData
     * @static
     * @param {Proto_ProcessReleaseData} message Proto_ProcessReleaseData
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ProcessReleaseData.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.ReleaseClassData = [];
        if (options.defaults) {
            if (options.bytes === String)
                object.ReleaseContextName = "";
            else {
                object.ReleaseContextName = [];
                if (options.bytes !== Array)
                    object.ReleaseContextName = $util.newBuffer(object.ReleaseContextName);
            }
            if (options.bytes === String)
                object.ProcessCode = "";
            else {
                object.ProcessCode = [];
                if (options.bytes !== Array)
                    object.ProcessCode = $util.newBuffer(object.ProcessCode);
            }
        }
        if (message.ReleaseContextName != null && message.hasOwnProperty("ReleaseContextName"))
            object.ReleaseContextName = options.bytes === String ? $util.base64.encode(message.ReleaseContextName, 0, message.ReleaseContextName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ReleaseContextName) : message.ReleaseContextName;
        if (message.ProcessCode != null && message.hasOwnProperty("ProcessCode"))
            object.ProcessCode = options.bytes === String ? $util.base64.encode(message.ProcessCode, 0, message.ProcessCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProcessCode) : message.ProcessCode;
        if (message.ReleaseClassData && message.ReleaseClassData.length) {
            object.ReleaseClassData = [];
            for (var j = 0; j < message.ReleaseClassData.length; ++j)
                object.ReleaseClassData[j] = $root.Proto_ReleaseClassData.toObject(message.ReleaseClassData[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_ProcessReleaseData to JSON.
     * @function toJSON
     * @memberof Proto_ProcessReleaseData
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ProcessReleaseData.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ProcessReleaseData;
})();

$root.Proto_ReleaseClassData = (function() {

    /**
     * Properties of a Proto_ReleaseClassData.
     * @exports IProto_ReleaseClassData
     * @interface IProto_ReleaseClassData
     * @property {Uint8Array|null} [ReleaseClassName] Proto_ReleaseClassData ReleaseClassName
     * @property {Uint8Array|null} [SharedSchemaClassName] Proto_ReleaseClassData SharedSchemaClassName
     * @property {Uint8Array|null} [ProtoDataTableAsString] Proto_ReleaseClassData ProtoDataTableAsString
     */

    /**
     * Constructs a new Proto_ReleaseClassData.
     * @exports Proto_ReleaseClassData
     * @classdesc Represents a Proto_ReleaseClassData.
     * @implements IProto_ReleaseClassData
     * @constructor
     * @param {IProto_ReleaseClassData=} [properties] Properties to set
     */
    function Proto_ReleaseClassData(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ReleaseClassData ReleaseClassName.
     * @member {Uint8Array} ReleaseClassName
     * @memberof Proto_ReleaseClassData
     * @instance
     */
    Proto_ReleaseClassData.prototype.ReleaseClassName = $util.newBuffer([]);

    /**
     * Proto_ReleaseClassData SharedSchemaClassName.
     * @member {Uint8Array} SharedSchemaClassName
     * @memberof Proto_ReleaseClassData
     * @instance
     */
    Proto_ReleaseClassData.prototype.SharedSchemaClassName = $util.newBuffer([]);

    /**
     * Proto_ReleaseClassData ProtoDataTableAsString.
     * @member {Uint8Array} ProtoDataTableAsString
     * @memberof Proto_ReleaseClassData
     * @instance
     */
    Proto_ReleaseClassData.prototype.ProtoDataTableAsString = $util.newBuffer([]);

    /**
     * Creates a new Proto_ReleaseClassData instance using the specified properties.
     * @function create
     * @memberof Proto_ReleaseClassData
     * @static
     * @param {IProto_ReleaseClassData=} [properties] Properties to set
     * @returns {Proto_ReleaseClassData} Proto_ReleaseClassData instance
     */
    Proto_ReleaseClassData.create = function create(properties) {
        return new Proto_ReleaseClassData(properties);
    };

    /**
     * Encodes the specified Proto_ReleaseClassData message. Does not implicitly {@link Proto_ReleaseClassData.verify|verify} messages.
     * @function encode
     * @memberof Proto_ReleaseClassData
     * @static
     * @param {IProto_ReleaseClassData} message Proto_ReleaseClassData message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReleaseClassData.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ReleaseClassName != null && Object.hasOwnProperty.call(message, "ReleaseClassName"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ReleaseClassName);
        if (message.SharedSchemaClassName != null && Object.hasOwnProperty.call(message, "SharedSchemaClassName"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.SharedSchemaClassName);
        if (message.ProtoDataTableAsString != null && Object.hasOwnProperty.call(message, "ProtoDataTableAsString"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.ProtoDataTableAsString);
        return writer;
    };

    /**
     * Encodes the specified Proto_ReleaseClassData message, length delimited. Does not implicitly {@link Proto_ReleaseClassData.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ReleaseClassData
     * @static
     * @param {IProto_ReleaseClassData} message Proto_ReleaseClassData message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReleaseClassData.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ReleaseClassData message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ReleaseClassData
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ReleaseClassData} Proto_ReleaseClassData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReleaseClassData.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ReleaseClassData();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ReleaseClassName = reader.bytes();
                break;
            case 2:
                message.SharedSchemaClassName = reader.bytes();
                break;
            case 4:
                message.ProtoDataTableAsString = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ReleaseClassData message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ReleaseClassData
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ReleaseClassData} Proto_ReleaseClassData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReleaseClassData.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ReleaseClassData message.
     * @function verify
     * @memberof Proto_ReleaseClassData
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ReleaseClassData.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ReleaseClassName != null && message.hasOwnProperty("ReleaseClassName"))
            if (!(message.ReleaseClassName && typeof message.ReleaseClassName.length === "number" || $util.isString(message.ReleaseClassName)))
                return "ReleaseClassName: buffer expected";
        if (message.SharedSchemaClassName != null && message.hasOwnProperty("SharedSchemaClassName"))
            if (!(message.SharedSchemaClassName && typeof message.SharedSchemaClassName.length === "number" || $util.isString(message.SharedSchemaClassName)))
                return "SharedSchemaClassName: buffer expected";
        if (message.ProtoDataTableAsString != null && message.hasOwnProperty("ProtoDataTableAsString"))
            if (!(message.ProtoDataTableAsString && typeof message.ProtoDataTableAsString.length === "number" || $util.isString(message.ProtoDataTableAsString)))
                return "ProtoDataTableAsString: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_ReleaseClassData message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ReleaseClassData
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ReleaseClassData} Proto_ReleaseClassData
     */
    Proto_ReleaseClassData.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ReleaseClassData)
            return object;
        var message = new $root.Proto_ReleaseClassData();
        if (object.ReleaseClassName != null)
            if (typeof object.ReleaseClassName === "string")
                $util.base64.decode(object.ReleaseClassName, message.ReleaseClassName = $util.newBuffer($util.base64.length(object.ReleaseClassName)), 0);
            else if (object.ReleaseClassName.length)
                message.ReleaseClassName = object.ReleaseClassName;
        if (object.SharedSchemaClassName != null)
            if (typeof object.SharedSchemaClassName === "string")
                $util.base64.decode(object.SharedSchemaClassName, message.SharedSchemaClassName = $util.newBuffer($util.base64.length(object.SharedSchemaClassName)), 0);
            else if (object.SharedSchemaClassName.length)
                message.SharedSchemaClassName = object.SharedSchemaClassName;
        if (object.ProtoDataTableAsString != null)
            if (typeof object.ProtoDataTableAsString === "string")
                $util.base64.decode(object.ProtoDataTableAsString, message.ProtoDataTableAsString = $util.newBuffer($util.base64.length(object.ProtoDataTableAsString)), 0);
            else if (object.ProtoDataTableAsString.length)
                message.ProtoDataTableAsString = object.ProtoDataTableAsString;
        return message;
    };

    /**
     * Creates a plain object from a Proto_ReleaseClassData message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ReleaseClassData
     * @static
     * @param {Proto_ReleaseClassData} message Proto_ReleaseClassData
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ReleaseClassData.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ReleaseClassName = "";
            else {
                object.ReleaseClassName = [];
                if (options.bytes !== Array)
                    object.ReleaseClassName = $util.newBuffer(object.ReleaseClassName);
            }
            if (options.bytes === String)
                object.SharedSchemaClassName = "";
            else {
                object.SharedSchemaClassName = [];
                if (options.bytes !== Array)
                    object.SharedSchemaClassName = $util.newBuffer(object.SharedSchemaClassName);
            }
            if (options.bytes === String)
                object.ProtoDataTableAsString = "";
            else {
                object.ProtoDataTableAsString = [];
                if (options.bytes !== Array)
                    object.ProtoDataTableAsString = $util.newBuffer(object.ProtoDataTableAsString);
            }
        }
        if (message.ReleaseClassName != null && message.hasOwnProperty("ReleaseClassName"))
            object.ReleaseClassName = options.bytes === String ? $util.base64.encode(message.ReleaseClassName, 0, message.ReleaseClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ReleaseClassName) : message.ReleaseClassName;
        if (message.SharedSchemaClassName != null && message.hasOwnProperty("SharedSchemaClassName"))
            object.SharedSchemaClassName = options.bytes === String ? $util.base64.encode(message.SharedSchemaClassName, 0, message.SharedSchemaClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.SharedSchemaClassName) : message.SharedSchemaClassName;
        if (message.ProtoDataTableAsString != null && message.hasOwnProperty("ProtoDataTableAsString"))
            object.ProtoDataTableAsString = options.bytes === String ? $util.base64.encode(message.ProtoDataTableAsString, 0, message.ProtoDataTableAsString.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProtoDataTableAsString) : message.ProtoDataTableAsString;
        return object;
    };

    /**
     * Converts this Proto_ReleaseClassData to JSON.
     * @function toJSON
     * @memberof Proto_ReleaseClassData
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ReleaseClassData.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ReleaseClassData;
})();

$root.Proto_ReleaseSet = (function() {

    /**
     * Properties of a Proto_ReleaseSet.
     * @exports IProto_ReleaseSet
     * @interface IProto_ReleaseSet
     * @property {Array.<IProto_ReleaseTable>|null} [releasetable] Proto_ReleaseSet releasetable
     */

    /**
     * Constructs a new Proto_ReleaseSet.
     * @exports Proto_ReleaseSet
     * @classdesc Represents a Proto_ReleaseSet.
     * @implements IProto_ReleaseSet
     * @constructor
     * @param {IProto_ReleaseSet=} [properties] Properties to set
     */
    function Proto_ReleaseSet(properties) {
        this.releasetable = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ReleaseSet releasetable.
     * @member {Array.<IProto_ReleaseTable>} releasetable
     * @memberof Proto_ReleaseSet
     * @instance
     */
    Proto_ReleaseSet.prototype.releasetable = $util.emptyArray;

    /**
     * Creates a new Proto_ReleaseSet instance using the specified properties.
     * @function create
     * @memberof Proto_ReleaseSet
     * @static
     * @param {IProto_ReleaseSet=} [properties] Properties to set
     * @returns {Proto_ReleaseSet} Proto_ReleaseSet instance
     */
    Proto_ReleaseSet.create = function create(properties) {
        return new Proto_ReleaseSet(properties);
    };

    /**
     * Encodes the specified Proto_ReleaseSet message. Does not implicitly {@link Proto_ReleaseSet.verify|verify} messages.
     * @function encode
     * @memberof Proto_ReleaseSet
     * @static
     * @param {IProto_ReleaseSet} message Proto_ReleaseSet message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReleaseSet.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.releasetable != null && message.releasetable.length)
            for (var i = 0; i < message.releasetable.length; ++i)
                $root.Proto_ReleaseTable.encode(message.releasetable[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_ReleaseSet message, length delimited. Does not implicitly {@link Proto_ReleaseSet.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ReleaseSet
     * @static
     * @param {IProto_ReleaseSet} message Proto_ReleaseSet message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReleaseSet.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ReleaseSet message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ReleaseSet
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ReleaseSet} Proto_ReleaseSet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReleaseSet.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ReleaseSet();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 5:
                if (!(message.releasetable && message.releasetable.length))
                    message.releasetable = [];
                message.releasetable.push($root.Proto_ReleaseTable.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ReleaseSet message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ReleaseSet
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ReleaseSet} Proto_ReleaseSet
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReleaseSet.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ReleaseSet message.
     * @function verify
     * @memberof Proto_ReleaseSet
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ReleaseSet.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.releasetable != null && message.hasOwnProperty("releasetable")) {
            if (!Array.isArray(message.releasetable))
                return "releasetable: array expected";
            for (var i = 0; i < message.releasetable.length; ++i) {
                var error = $root.Proto_ReleaseTable.verify(message.releasetable[i]);
                if (error)
                    return "releasetable." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_ReleaseSet message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ReleaseSet
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ReleaseSet} Proto_ReleaseSet
     */
    Proto_ReleaseSet.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ReleaseSet)
            return object;
        var message = new $root.Proto_ReleaseSet();
        if (object.releasetable) {
            if (!Array.isArray(object.releasetable))
                throw TypeError(".Proto_ReleaseSet.releasetable: array expected");
            message.releasetable = [];
            for (var i = 0; i < object.releasetable.length; ++i) {
                if (typeof object.releasetable[i] !== "object")
                    throw TypeError(".Proto_ReleaseSet.releasetable: object expected");
                message.releasetable[i] = $root.Proto_ReleaseTable.fromObject(object.releasetable[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_ReleaseSet message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ReleaseSet
     * @static
     * @param {Proto_ReleaseSet} message Proto_ReleaseSet
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ReleaseSet.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.releasetable = [];
        if (message.releasetable && message.releasetable.length) {
            object.releasetable = [];
            for (var j = 0; j < message.releasetable.length; ++j)
                object.releasetable[j] = $root.Proto_ReleaseTable.toObject(message.releasetable[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_ReleaseSet to JSON.
     * @function toJSON
     * @memberof Proto_ReleaseSet
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ReleaseSet.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ReleaseSet;
})();

$root.Proto_ReleaseTable = (function() {

    /**
     * Properties of a Proto_ReleaseTable.
     * @exports IProto_ReleaseTable
     * @interface IProto_ReleaseTable
     * @property {Uint8Array|null} [ReleaseClassName] Proto_ReleaseTable ReleaseClassName
     * @property {Uint8Array|null} [RelationName] Proto_ReleaseTable RelationName
     * @property {number|Long|null} [ProcessReleaseID] Proto_ReleaseTable ProcessReleaseID
     * @property {Uint8Array|null} [ProtoDataTableAsString] Proto_ReleaseTable ProtoDataTableAsString
     */

    /**
     * Constructs a new Proto_ReleaseTable.
     * @exports Proto_ReleaseTable
     * @classdesc Represents a Proto_ReleaseTable.
     * @implements IProto_ReleaseTable
     * @constructor
     * @param {IProto_ReleaseTable=} [properties] Properties to set
     */
    function Proto_ReleaseTable(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ReleaseTable ReleaseClassName.
     * @member {Uint8Array} ReleaseClassName
     * @memberof Proto_ReleaseTable
     * @instance
     */
    Proto_ReleaseTable.prototype.ReleaseClassName = $util.newBuffer([]);

    /**
     * Proto_ReleaseTable RelationName.
     * @member {Uint8Array} RelationName
     * @memberof Proto_ReleaseTable
     * @instance
     */
    Proto_ReleaseTable.prototype.RelationName = $util.newBuffer([]);

    /**
     * Proto_ReleaseTable ProcessReleaseID.
     * @member {number|Long} ProcessReleaseID
     * @memberof Proto_ReleaseTable
     * @instance
     */
    Proto_ReleaseTable.prototype.ProcessReleaseID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ReleaseTable ProtoDataTableAsString.
     * @member {Uint8Array} ProtoDataTableAsString
     * @memberof Proto_ReleaseTable
     * @instance
     */
    Proto_ReleaseTable.prototype.ProtoDataTableAsString = $util.newBuffer([]);

    /**
     * Creates a new Proto_ReleaseTable instance using the specified properties.
     * @function create
     * @memberof Proto_ReleaseTable
     * @static
     * @param {IProto_ReleaseTable=} [properties] Properties to set
     * @returns {Proto_ReleaseTable} Proto_ReleaseTable instance
     */
    Proto_ReleaseTable.create = function create(properties) {
        return new Proto_ReleaseTable(properties);
    };

    /**
     * Encodes the specified Proto_ReleaseTable message. Does not implicitly {@link Proto_ReleaseTable.verify|verify} messages.
     * @function encode
     * @memberof Proto_ReleaseTable
     * @static
     * @param {IProto_ReleaseTable} message Proto_ReleaseTable message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReleaseTable.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ReleaseClassName != null && Object.hasOwnProperty.call(message, "ReleaseClassName"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ReleaseClassName);
        if (message.RelationName != null && Object.hasOwnProperty.call(message, "RelationName"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.RelationName);
        if (message.ProcessReleaseID != null && Object.hasOwnProperty.call(message, "ProcessReleaseID"))
            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.ProcessReleaseID);
        if (message.ProtoDataTableAsString != null && Object.hasOwnProperty.call(message, "ProtoDataTableAsString"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.ProtoDataTableAsString);
        return writer;
    };

    /**
     * Encodes the specified Proto_ReleaseTable message, length delimited. Does not implicitly {@link Proto_ReleaseTable.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ReleaseTable
     * @static
     * @param {IProto_ReleaseTable} message Proto_ReleaseTable message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ReleaseTable.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ReleaseTable message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ReleaseTable
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ReleaseTable} Proto_ReleaseTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReleaseTable.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ReleaseTable();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ReleaseClassName = reader.bytes();
                break;
            case 2:
                message.RelationName = reader.bytes();
                break;
            case 3:
                message.ProcessReleaseID = reader.int64();
                break;
            case 4:
                message.ProtoDataTableAsString = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ReleaseTable message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ReleaseTable
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ReleaseTable} Proto_ReleaseTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ReleaseTable.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ReleaseTable message.
     * @function verify
     * @memberof Proto_ReleaseTable
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ReleaseTable.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ReleaseClassName != null && message.hasOwnProperty("ReleaseClassName"))
            if (!(message.ReleaseClassName && typeof message.ReleaseClassName.length === "number" || $util.isString(message.ReleaseClassName)))
                return "ReleaseClassName: buffer expected";
        if (message.RelationName != null && message.hasOwnProperty("RelationName"))
            if (!(message.RelationName && typeof message.RelationName.length === "number" || $util.isString(message.RelationName)))
                return "RelationName: buffer expected";
        if (message.ProcessReleaseID != null && message.hasOwnProperty("ProcessReleaseID"))
            if (!$util.isInteger(message.ProcessReleaseID) && !(message.ProcessReleaseID && $util.isInteger(message.ProcessReleaseID.low) && $util.isInteger(message.ProcessReleaseID.high)))
                return "ProcessReleaseID: integer|Long expected";
        if (message.ProtoDataTableAsString != null && message.hasOwnProperty("ProtoDataTableAsString"))
            if (!(message.ProtoDataTableAsString && typeof message.ProtoDataTableAsString.length === "number" || $util.isString(message.ProtoDataTableAsString)))
                return "ProtoDataTableAsString: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_ReleaseTable message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ReleaseTable
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ReleaseTable} Proto_ReleaseTable
     */
    Proto_ReleaseTable.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ReleaseTable)
            return object;
        var message = new $root.Proto_ReleaseTable();
        if (object.ReleaseClassName != null)
            if (typeof object.ReleaseClassName === "string")
                $util.base64.decode(object.ReleaseClassName, message.ReleaseClassName = $util.newBuffer($util.base64.length(object.ReleaseClassName)), 0);
            else if (object.ReleaseClassName.length)
                message.ReleaseClassName = object.ReleaseClassName;
        if (object.RelationName != null)
            if (typeof object.RelationName === "string")
                $util.base64.decode(object.RelationName, message.RelationName = $util.newBuffer($util.base64.length(object.RelationName)), 0);
            else if (object.RelationName.length)
                message.RelationName = object.RelationName;
        if (object.ProcessReleaseID != null)
            if ($util.Long)
                (message.ProcessReleaseID = $util.Long.fromValue(object.ProcessReleaseID)).unsigned = false;
            else if (typeof object.ProcessReleaseID === "string")
                message.ProcessReleaseID = parseInt(object.ProcessReleaseID, 10);
            else if (typeof object.ProcessReleaseID === "number")
                message.ProcessReleaseID = object.ProcessReleaseID;
            else if (typeof object.ProcessReleaseID === "object")
                message.ProcessReleaseID = new $util.LongBits(object.ProcessReleaseID.low >>> 0, object.ProcessReleaseID.high >>> 0).toNumber();
        if (object.ProtoDataTableAsString != null)
            if (typeof object.ProtoDataTableAsString === "string")
                $util.base64.decode(object.ProtoDataTableAsString, message.ProtoDataTableAsString = $util.newBuffer($util.base64.length(object.ProtoDataTableAsString)), 0);
            else if (object.ProtoDataTableAsString.length)
                message.ProtoDataTableAsString = object.ProtoDataTableAsString;
        return message;
    };

    /**
     * Creates a plain object from a Proto_ReleaseTable message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ReleaseTable
     * @static
     * @param {Proto_ReleaseTable} message Proto_ReleaseTable
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ReleaseTable.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ReleaseClassName = "";
            else {
                object.ReleaseClassName = [];
                if (options.bytes !== Array)
                    object.ReleaseClassName = $util.newBuffer(object.ReleaseClassName);
            }
            if (options.bytes === String)
                object.RelationName = "";
            else {
                object.RelationName = [];
                if (options.bytes !== Array)
                    object.RelationName = $util.newBuffer(object.RelationName);
            }
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.ProcessReleaseID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.ProcessReleaseID = options.longs === String ? "0" : 0;
            if (options.bytes === String)
                object.ProtoDataTableAsString = "";
            else {
                object.ProtoDataTableAsString = [];
                if (options.bytes !== Array)
                    object.ProtoDataTableAsString = $util.newBuffer(object.ProtoDataTableAsString);
            }
        }
        if (message.ReleaseClassName != null && message.hasOwnProperty("ReleaseClassName"))
            object.ReleaseClassName = options.bytes === String ? $util.base64.encode(message.ReleaseClassName, 0, message.ReleaseClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ReleaseClassName) : message.ReleaseClassName;
        if (message.RelationName != null && message.hasOwnProperty("RelationName"))
            object.RelationName = options.bytes === String ? $util.base64.encode(message.RelationName, 0, message.RelationName.length) : options.bytes === Array ? Array.prototype.slice.call(message.RelationName) : message.RelationName;
        if (message.ProcessReleaseID != null && message.hasOwnProperty("ProcessReleaseID"))
            if (typeof message.ProcessReleaseID === "number")
                object.ProcessReleaseID = options.longs === String ? String(message.ProcessReleaseID) : message.ProcessReleaseID;
            else
                object.ProcessReleaseID = options.longs === String ? $util.Long.prototype.toString.call(message.ProcessReleaseID) : options.longs === Number ? new $util.LongBits(message.ProcessReleaseID.low >>> 0, message.ProcessReleaseID.high >>> 0).toNumber() : message.ProcessReleaseID;
        if (message.ProtoDataTableAsString != null && message.hasOwnProperty("ProtoDataTableAsString"))
            object.ProtoDataTableAsString = options.bytes === String ? $util.base64.encode(message.ProtoDataTableAsString, 0, message.ProtoDataTableAsString.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProtoDataTableAsString) : message.ProtoDataTableAsString;
        return object;
    };

    /**
     * Converts this Proto_ReleaseTable to JSON.
     * @function toJSON
     * @memberof Proto_ReleaseTable
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ReleaseTable.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ReleaseTable;
})();

$root.Proto_DataTable = (function() {

    /**
     * Properties of a Proto_DataTable.
     * @exports IProto_DataTable
     * @interface IProto_DataTable
     * @property {Uint8Array|null} [code] Proto_DataTable code
     * @property {Array.<number|Long>|null} [ParentReferenceID] Proto_DataTable ParentReferenceID
     * @property {Uint8Array|null} [rowobjectclassnamesimple] Proto_DataTable rowobjectclassnamesimple
     * @property {number|null} [scenarioid] Proto_DataTable scenarioid
     * @property {Uint8Array|null} [lastrevisioninfo] Proto_DataTable lastrevisioninfo
     * @property {Array.<IProto_DTSchemaColumn>|null} [column] Proto_DataTable column
     * @property {Array.<IProto_DataTableRow>|null} [row] Proto_DataTable row
     * @property {Array.<Uint8Array>|null} [CachedString] Proto_DataTable CachedString
     */

    /**
     * Constructs a new Proto_DataTable.
     * @exports Proto_DataTable
     * @classdesc Represents a Proto_DataTable.
     * @implements IProto_DataTable
     * @constructor
     * @param {IProto_DataTable=} [properties] Properties to set
     */
    function Proto_DataTable(properties) {
        this.ParentReferenceID = [];
        this.column = [];
        this.row = [];
        this.CachedString = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataTable code.
     * @member {Uint8Array} code
     * @memberof Proto_DataTable
     * @instance
     */
    Proto_DataTable.prototype.code = $util.newBuffer([]);

    /**
     * Proto_DataTable ParentReferenceID.
     * @member {Array.<number|Long>} ParentReferenceID
     * @memberof Proto_DataTable
     * @instance
     */
    Proto_DataTable.prototype.ParentReferenceID = $util.emptyArray;

    /**
     * Proto_DataTable rowobjectclassnamesimple.
     * @member {Uint8Array} rowobjectclassnamesimple
     * @memberof Proto_DataTable
     * @instance
     */
    Proto_DataTable.prototype.rowobjectclassnamesimple = $util.newBuffer([]);

    /**
     * Proto_DataTable scenarioid.
     * @member {number} scenarioid
     * @memberof Proto_DataTable
     * @instance
     */
    Proto_DataTable.prototype.scenarioid = 0;

    /**
     * Proto_DataTable lastrevisioninfo.
     * @member {Uint8Array} lastrevisioninfo
     * @memberof Proto_DataTable
     * @instance
     */
    Proto_DataTable.prototype.lastrevisioninfo = $util.newBuffer([]);

    /**
     * Proto_DataTable column.
     * @member {Array.<IProto_DTSchemaColumn>} column
     * @memberof Proto_DataTable
     * @instance
     */
    Proto_DataTable.prototype.column = $util.emptyArray;

    /**
     * Proto_DataTable row.
     * @member {Array.<IProto_DataTableRow>} row
     * @memberof Proto_DataTable
     * @instance
     */
    Proto_DataTable.prototype.row = $util.emptyArray;

    /**
     * Proto_DataTable CachedString.
     * @member {Array.<Uint8Array>} CachedString
     * @memberof Proto_DataTable
     * @instance
     */
    Proto_DataTable.prototype.CachedString = $util.emptyArray;

    /**
     * Creates a new Proto_DataTable instance using the specified properties.
     * @function create
     * @memberof Proto_DataTable
     * @static
     * @param {IProto_DataTable=} [properties] Properties to set
     * @returns {Proto_DataTable} Proto_DataTable instance
     */
    Proto_DataTable.create = function create(properties) {
        return new Proto_DataTable(properties);
    };

    /**
     * Encodes the specified Proto_DataTable message. Does not implicitly {@link Proto_DataTable.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataTable
     * @static
     * @param {IProto_DataTable} message Proto_DataTable message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataTable.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.code != null && Object.hasOwnProperty.call(message, "code"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.code);
        if (message.ParentReferenceID != null && message.ParentReferenceID.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.ParentReferenceID.length; ++i)
                writer.int64(message.ParentReferenceID[i]);
            writer.ldelim();
        }
        if (message.rowobjectclassnamesimple != null && Object.hasOwnProperty.call(message, "rowobjectclassnamesimple"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.rowobjectclassnamesimple);
        if (message.scenarioid != null && Object.hasOwnProperty.call(message, "scenarioid"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.scenarioid);
        if (message.lastrevisioninfo != null && Object.hasOwnProperty.call(message, "lastrevisioninfo"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.lastrevisioninfo);
        if (message.column != null && message.column.length)
            for (var i = 0; i < message.column.length; ++i)
                $root.Proto_DTSchemaColumn.encode(message.column[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
        if (message.row != null && message.row.length)
            for (var i = 0; i < message.row.length; ++i)
                $root.Proto_DataTableRow.encode(message.row[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
        if (message.CachedString != null && message.CachedString.length)
            for (var i = 0; i < message.CachedString.length; ++i)
                writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.CachedString[i]);
        return writer;
    };

    /**
     * Encodes the specified Proto_DataTable message, length delimited. Does not implicitly {@link Proto_DataTable.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataTable
     * @static
     * @param {IProto_DataTable} message Proto_DataTable message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataTable.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataTable message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataTable
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataTable} Proto_DataTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataTable.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataTable();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.code = reader.bytes();
                break;
            case 2:
                if (!(message.ParentReferenceID && message.ParentReferenceID.length))
                    message.ParentReferenceID = [];
                if ((tag & 7) === 2) {
                    var end2 = reader.uint32() + reader.pos;
                    while (reader.pos < end2)
                        message.ParentReferenceID.push(reader.int64());
                } else
                    message.ParentReferenceID.push(reader.int64());
                break;
            case 3:
                message.rowobjectclassnamesimple = reader.bytes();
                break;
            case 4:
                message.scenarioid = reader.int32();
                break;
            case 5:
                message.lastrevisioninfo = reader.bytes();
                break;
            case 6:
                if (!(message.column && message.column.length))
                    message.column = [];
                message.column.push($root.Proto_DTSchemaColumn.decode(reader, reader.uint32()));
                break;
            case 7:
                if (!(message.row && message.row.length))
                    message.row = [];
                message.row.push($root.Proto_DataTableRow.decode(reader, reader.uint32()));
                break;
            case 8:
                if (!(message.CachedString && message.CachedString.length))
                    message.CachedString = [];
                message.CachedString.push(reader.bytes());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataTable message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataTable
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataTable} Proto_DataTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataTable.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataTable message.
     * @function verify
     * @memberof Proto_DataTable
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataTable.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.code != null && message.hasOwnProperty("code"))
            if (!(message.code && typeof message.code.length === "number" || $util.isString(message.code)))
                return "code: buffer expected";
        if (message.ParentReferenceID != null && message.hasOwnProperty("ParentReferenceID")) {
            if (!Array.isArray(message.ParentReferenceID))
                return "ParentReferenceID: array expected";
            for (var i = 0; i < message.ParentReferenceID.length; ++i)
                if (!$util.isInteger(message.ParentReferenceID[i]) && !(message.ParentReferenceID[i] && $util.isInteger(message.ParentReferenceID[i].low) && $util.isInteger(message.ParentReferenceID[i].high)))
                    return "ParentReferenceID: integer|Long[] expected";
        }
        if (message.rowobjectclassnamesimple != null && message.hasOwnProperty("rowobjectclassnamesimple"))
            if (!(message.rowobjectclassnamesimple && typeof message.rowobjectclassnamesimple.length === "number" || $util.isString(message.rowobjectclassnamesimple)))
                return "rowobjectclassnamesimple: buffer expected";
        if (message.scenarioid != null && message.hasOwnProperty("scenarioid"))
            if (!$util.isInteger(message.scenarioid))
                return "scenarioid: integer expected";
        if (message.lastrevisioninfo != null && message.hasOwnProperty("lastrevisioninfo"))
            if (!(message.lastrevisioninfo && typeof message.lastrevisioninfo.length === "number" || $util.isString(message.lastrevisioninfo)))
                return "lastrevisioninfo: buffer expected";
        if (message.column != null && message.hasOwnProperty("column")) {
            if (!Array.isArray(message.column))
                return "column: array expected";
            for (var i = 0; i < message.column.length; ++i) {
                var error = $root.Proto_DTSchemaColumn.verify(message.column[i]);
                if (error)
                    return "column." + error;
            }
        }
        if (message.row != null && message.hasOwnProperty("row")) {
            if (!Array.isArray(message.row))
                return "row: array expected";
            for (var i = 0; i < message.row.length; ++i) {
                var error = $root.Proto_DataTableRow.verify(message.row[i]);
                if (error)
                    return "row." + error;
            }
        }
        if (message.CachedString != null && message.hasOwnProperty("CachedString")) {
            if (!Array.isArray(message.CachedString))
                return "CachedString: array expected";
            for (var i = 0; i < message.CachedString.length; ++i)
                if (!(message.CachedString[i] && typeof message.CachedString[i].length === "number" || $util.isString(message.CachedString[i])))
                    return "CachedString: buffer[] expected";
        }
        return null;
    };

    /**
     * Creates a Proto_DataTable message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataTable
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataTable} Proto_DataTable
     */
    Proto_DataTable.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataTable)
            return object;
        var message = new $root.Proto_DataTable();
        if (object.code != null)
            if (typeof object.code === "string")
                $util.base64.decode(object.code, message.code = $util.newBuffer($util.base64.length(object.code)), 0);
            else if (object.code.length)
                message.code = object.code;
        if (object.ParentReferenceID) {
            if (!Array.isArray(object.ParentReferenceID))
                throw TypeError(".Proto_DataTable.ParentReferenceID: array expected");
            message.ParentReferenceID = [];
            for (var i = 0; i < object.ParentReferenceID.length; ++i)
                if ($util.Long)
                    (message.ParentReferenceID[i] = $util.Long.fromValue(object.ParentReferenceID[i])).unsigned = false;
                else if (typeof object.ParentReferenceID[i] === "string")
                    message.ParentReferenceID[i] = parseInt(object.ParentReferenceID[i], 10);
                else if (typeof object.ParentReferenceID[i] === "number")
                    message.ParentReferenceID[i] = object.ParentReferenceID[i];
                else if (typeof object.ParentReferenceID[i] === "object")
                    message.ParentReferenceID[i] = new $util.LongBits(object.ParentReferenceID[i].low >>> 0, object.ParentReferenceID[i].high >>> 0).toNumber();
        }
        if (object.rowobjectclassnamesimple != null)
            if (typeof object.rowobjectclassnamesimple === "string")
                $util.base64.decode(object.rowobjectclassnamesimple, message.rowobjectclassnamesimple = $util.newBuffer($util.base64.length(object.rowobjectclassnamesimple)), 0);
            else if (object.rowobjectclassnamesimple.length)
                message.rowobjectclassnamesimple = object.rowobjectclassnamesimple;
        if (object.scenarioid != null)
            message.scenarioid = object.scenarioid | 0;
        if (object.lastrevisioninfo != null)
            if (typeof object.lastrevisioninfo === "string")
                $util.base64.decode(object.lastrevisioninfo, message.lastrevisioninfo = $util.newBuffer($util.base64.length(object.lastrevisioninfo)), 0);
            else if (object.lastrevisioninfo.length)
                message.lastrevisioninfo = object.lastrevisioninfo;
        if (object.column) {
            if (!Array.isArray(object.column))
                throw TypeError(".Proto_DataTable.column: array expected");
            message.column = [];
            for (var i = 0; i < object.column.length; ++i) {
                if (typeof object.column[i] !== "object")
                    throw TypeError(".Proto_DataTable.column: object expected");
                message.column[i] = $root.Proto_DTSchemaColumn.fromObject(object.column[i]);
            }
        }
        if (object.row) {
            if (!Array.isArray(object.row))
                throw TypeError(".Proto_DataTable.row: array expected");
            message.row = [];
            for (var i = 0; i < object.row.length; ++i) {
                if (typeof object.row[i] !== "object")
                    throw TypeError(".Proto_DataTable.row: object expected");
                message.row[i] = $root.Proto_DataTableRow.fromObject(object.row[i]);
            }
        }
        if (object.CachedString) {
            if (!Array.isArray(object.CachedString))
                throw TypeError(".Proto_DataTable.CachedString: array expected");
            message.CachedString = [];
            for (var i = 0; i < object.CachedString.length; ++i)
                if (typeof object.CachedString[i] === "string")
                    $util.base64.decode(object.CachedString[i], message.CachedString[i] = $util.newBuffer($util.base64.length(object.CachedString[i])), 0);
                else if (object.CachedString[i].length)
                    message.CachedString[i] = object.CachedString[i];
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataTable message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataTable
     * @static
     * @param {Proto_DataTable} message Proto_DataTable
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataTable.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.ParentReferenceID = [];
            object.column = [];
            object.row = [];
            object.CachedString = [];
        }
        if (options.defaults) {
            if (options.bytes === String)
                object.code = "";
            else {
                object.code = [];
                if (options.bytes !== Array)
                    object.code = $util.newBuffer(object.code);
            }
            if (options.bytes === String)
                object.rowobjectclassnamesimple = "";
            else {
                object.rowobjectclassnamesimple = [];
                if (options.bytes !== Array)
                    object.rowobjectclassnamesimple = $util.newBuffer(object.rowobjectclassnamesimple);
            }
            object.scenarioid = 0;
            if (options.bytes === String)
                object.lastrevisioninfo = "";
            else {
                object.lastrevisioninfo = [];
                if (options.bytes !== Array)
                    object.lastrevisioninfo = $util.newBuffer(object.lastrevisioninfo);
            }
        }
        if (message.code != null && message.hasOwnProperty("code"))
            object.code = options.bytes === String ? $util.base64.encode(message.code, 0, message.code.length) : options.bytes === Array ? Array.prototype.slice.call(message.code) : message.code;
        if (message.ParentReferenceID && message.ParentReferenceID.length) {
            object.ParentReferenceID = [];
            for (var j = 0; j < message.ParentReferenceID.length; ++j)
                if (typeof message.ParentReferenceID[j] === "number")
                    object.ParentReferenceID[j] = options.longs === String ? String(message.ParentReferenceID[j]) : message.ParentReferenceID[j];
                else
                    object.ParentReferenceID[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ParentReferenceID[j]) : options.longs === Number ? new $util.LongBits(message.ParentReferenceID[j].low >>> 0, message.ParentReferenceID[j].high >>> 0).toNumber() : message.ParentReferenceID[j];
        }
        if (message.rowobjectclassnamesimple != null && message.hasOwnProperty("rowobjectclassnamesimple"))
            object.rowobjectclassnamesimple = options.bytes === String ? $util.base64.encode(message.rowobjectclassnamesimple, 0, message.rowobjectclassnamesimple.length) : options.bytes === Array ? Array.prototype.slice.call(message.rowobjectclassnamesimple) : message.rowobjectclassnamesimple;
        if (message.scenarioid != null && message.hasOwnProperty("scenarioid"))
            object.scenarioid = message.scenarioid;
        if (message.lastrevisioninfo != null && message.hasOwnProperty("lastrevisioninfo"))
            object.lastrevisioninfo = options.bytes === String ? $util.base64.encode(message.lastrevisioninfo, 0, message.lastrevisioninfo.length) : options.bytes === Array ? Array.prototype.slice.call(message.lastrevisioninfo) : message.lastrevisioninfo;
        if (message.column && message.column.length) {
            object.column = [];
            for (var j = 0; j < message.column.length; ++j)
                object.column[j] = $root.Proto_DTSchemaColumn.toObject(message.column[j], options);
        }
        if (message.row && message.row.length) {
            object.row = [];
            for (var j = 0; j < message.row.length; ++j)
                object.row[j] = $root.Proto_DataTableRow.toObject(message.row[j], options);
        }
        if (message.CachedString && message.CachedString.length) {
            object.CachedString = [];
            for (var j = 0; j < message.CachedString.length; ++j)
                object.CachedString[j] = options.bytes === String ? $util.base64.encode(message.CachedString[j], 0, message.CachedString[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.CachedString[j]) : message.CachedString[j];
        }
        return object;
    };

    /**
     * Converts this Proto_DataTable to JSON.
     * @function toJSON
     * @memberof Proto_DataTable
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataTable.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataTable;
})();

$root.Proto_DTSchemaColumn = (function() {

    /**
     * Properties of a Proto_DTSchemaColumn.
     * @exports IProto_DTSchemaColumn
     * @interface IProto_DTSchemaColumn
     * @property {Uint8Array|null} [code] Proto_DTSchemaColumn code
     * @property {number|null} [accesstype] Proto_DTSchemaColumn accesstype
     * @property {number|null} [fieldtype] Proto_DTSchemaColumn fieldtype
     */

    /**
     * Constructs a new Proto_DTSchemaColumn.
     * @exports Proto_DTSchemaColumn
     * @classdesc Represents a Proto_DTSchemaColumn.
     * @implements IProto_DTSchemaColumn
     * @constructor
     * @param {IProto_DTSchemaColumn=} [properties] Properties to set
     */
    function Proto_DTSchemaColumn(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DTSchemaColumn code.
     * @member {Uint8Array} code
     * @memberof Proto_DTSchemaColumn
     * @instance
     */
    Proto_DTSchemaColumn.prototype.code = $util.newBuffer([]);

    /**
     * Proto_DTSchemaColumn accesstype.
     * @member {number} accesstype
     * @memberof Proto_DTSchemaColumn
     * @instance
     */
    Proto_DTSchemaColumn.prototype.accesstype = 0;

    /**
     * Proto_DTSchemaColumn fieldtype.
     * @member {number} fieldtype
     * @memberof Proto_DTSchemaColumn
     * @instance
     */
    Proto_DTSchemaColumn.prototype.fieldtype = 0;

    /**
     * Creates a new Proto_DTSchemaColumn instance using the specified properties.
     * @function create
     * @memberof Proto_DTSchemaColumn
     * @static
     * @param {IProto_DTSchemaColumn=} [properties] Properties to set
     * @returns {Proto_DTSchemaColumn} Proto_DTSchemaColumn instance
     */
    Proto_DTSchemaColumn.create = function create(properties) {
        return new Proto_DTSchemaColumn(properties);
    };

    /**
     * Encodes the specified Proto_DTSchemaColumn message. Does not implicitly {@link Proto_DTSchemaColumn.verify|verify} messages.
     * @function encode
     * @memberof Proto_DTSchemaColumn
     * @static
     * @param {IProto_DTSchemaColumn} message Proto_DTSchemaColumn message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DTSchemaColumn.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.code != null && Object.hasOwnProperty.call(message, "code"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.code);
        if (message.accesstype != null && Object.hasOwnProperty.call(message, "accesstype"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.accesstype);
        if (message.fieldtype != null && Object.hasOwnProperty.call(message, "fieldtype"))
            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.fieldtype);
        return writer;
    };

    /**
     * Encodes the specified Proto_DTSchemaColumn message, length delimited. Does not implicitly {@link Proto_DTSchemaColumn.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DTSchemaColumn
     * @static
     * @param {IProto_DTSchemaColumn} message Proto_DTSchemaColumn message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DTSchemaColumn.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DTSchemaColumn message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DTSchemaColumn
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DTSchemaColumn} Proto_DTSchemaColumn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DTSchemaColumn.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DTSchemaColumn();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 3:
                message.code = reader.bytes();
                break;
            case 4:
                message.accesstype = reader.int32();
                break;
            case 5:
                message.fieldtype = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DTSchemaColumn message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DTSchemaColumn
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DTSchemaColumn} Proto_DTSchemaColumn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DTSchemaColumn.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DTSchemaColumn message.
     * @function verify
     * @memberof Proto_DTSchemaColumn
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DTSchemaColumn.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.code != null && message.hasOwnProperty("code"))
            if (!(message.code && typeof message.code.length === "number" || $util.isString(message.code)))
                return "code: buffer expected";
        if (message.accesstype != null && message.hasOwnProperty("accesstype"))
            if (!$util.isInteger(message.accesstype))
                return "accesstype: integer expected";
        if (message.fieldtype != null && message.hasOwnProperty("fieldtype"))
            if (!$util.isInteger(message.fieldtype))
                return "fieldtype: integer expected";
        return null;
    };

    /**
     * Creates a Proto_DTSchemaColumn message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DTSchemaColumn
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DTSchemaColumn} Proto_DTSchemaColumn
     */
    Proto_DTSchemaColumn.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DTSchemaColumn)
            return object;
        var message = new $root.Proto_DTSchemaColumn();
        if (object.code != null)
            if (typeof object.code === "string")
                $util.base64.decode(object.code, message.code = $util.newBuffer($util.base64.length(object.code)), 0);
            else if (object.code.length)
                message.code = object.code;
        if (object.accesstype != null)
            message.accesstype = object.accesstype | 0;
        if (object.fieldtype != null)
            message.fieldtype = object.fieldtype | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_DTSchemaColumn message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DTSchemaColumn
     * @static
     * @param {Proto_DTSchemaColumn} message Proto_DTSchemaColumn
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DTSchemaColumn.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.code = "";
            else {
                object.code = [];
                if (options.bytes !== Array)
                    object.code = $util.newBuffer(object.code);
            }
            object.accesstype = 0;
            object.fieldtype = 0;
        }
        if (message.code != null && message.hasOwnProperty("code"))
            object.code = options.bytes === String ? $util.base64.encode(message.code, 0, message.code.length) : options.bytes === Array ? Array.prototype.slice.call(message.code) : message.code;
        if (message.accesstype != null && message.hasOwnProperty("accesstype"))
            object.accesstype = message.accesstype;
        if (message.fieldtype != null && message.hasOwnProperty("fieldtype"))
            object.fieldtype = message.fieldtype;
        return object;
    };

    /**
     * Converts this Proto_DTSchemaColumn to JSON.
     * @function toJSON
     * @memberof Proto_DTSchemaColumn
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DTSchemaColumn.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DTSchemaColumn;
})();

$root.Proto_DataTableRow = (function() {

    /**
     * Properties of a Proto_DataTableRow.
     * @exports IProto_DataTableRow
     * @interface IProto_DataTableRow
     * @property {Array.<IProto_DataTableValue>|null} [value] Proto_DataTableRow value
     * @property {number|Long|null} [RowObjectReferenceID] Proto_DataTableRow RowObjectReferenceID
     * @property {number|Long|null} [RowObjectDBID] Proto_DataTableRow RowObjectDBID
     * @property {Uint8Array|null} [RowObjectRevisionInfo] Proto_DataTableRow RowObjectRevisionInfo
     * @property {number|null} [Sequence] Proto_DataTableRow Sequence
     */

    /**
     * Constructs a new Proto_DataTableRow.
     * @exports Proto_DataTableRow
     * @classdesc Represents a Proto_DataTableRow.
     * @implements IProto_DataTableRow
     * @constructor
     * @param {IProto_DataTableRow=} [properties] Properties to set
     */
    function Proto_DataTableRow(properties) {
        this.value = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataTableRow value.
     * @member {Array.<IProto_DataTableValue>} value
     * @memberof Proto_DataTableRow
     * @instance
     */
    Proto_DataTableRow.prototype.value = $util.emptyArray;

    /**
     * Proto_DataTableRow RowObjectReferenceID.
     * @member {number|Long} RowObjectReferenceID
     * @memberof Proto_DataTableRow
     * @instance
     */
    Proto_DataTableRow.prototype.RowObjectReferenceID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_DataTableRow RowObjectDBID.
     * @member {number|Long} RowObjectDBID
     * @memberof Proto_DataTableRow
     * @instance
     */
    Proto_DataTableRow.prototype.RowObjectDBID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_DataTableRow RowObjectRevisionInfo.
     * @member {Uint8Array} RowObjectRevisionInfo
     * @memberof Proto_DataTableRow
     * @instance
     */
    Proto_DataTableRow.prototype.RowObjectRevisionInfo = $util.newBuffer([]);

    /**
     * Proto_DataTableRow Sequence.
     * @member {number} Sequence
     * @memberof Proto_DataTableRow
     * @instance
     */
    Proto_DataTableRow.prototype.Sequence = 0;

    /**
     * Creates a new Proto_DataTableRow instance using the specified properties.
     * @function create
     * @memberof Proto_DataTableRow
     * @static
     * @param {IProto_DataTableRow=} [properties] Properties to set
     * @returns {Proto_DataTableRow} Proto_DataTableRow instance
     */
    Proto_DataTableRow.create = function create(properties) {
        return new Proto_DataTableRow(properties);
    };

    /**
     * Encodes the specified Proto_DataTableRow message. Does not implicitly {@link Proto_DataTableRow.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataTableRow
     * @static
     * @param {IProto_DataTableRow} message Proto_DataTableRow message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataTableRow.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.value != null && message.value.length)
            for (var i = 0; i < message.value.length; ++i)
                $root.Proto_DataTableValue.encode(message.value[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.RowObjectReferenceID != null && Object.hasOwnProperty.call(message, "RowObjectReferenceID"))
            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.RowObjectReferenceID);
        if (message.RowObjectDBID != null && Object.hasOwnProperty.call(message, "RowObjectDBID"))
            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.RowObjectDBID);
        if (message.RowObjectRevisionInfo != null && Object.hasOwnProperty.call(message, "RowObjectRevisionInfo"))
            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.RowObjectRevisionInfo);
        if (message.Sequence != null && Object.hasOwnProperty.call(message, "Sequence"))
            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.Sequence);
        return writer;
    };

    /**
     * Encodes the specified Proto_DataTableRow message, length delimited. Does not implicitly {@link Proto_DataTableRow.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataTableRow
     * @static
     * @param {IProto_DataTableRow} message Proto_DataTableRow message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataTableRow.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataTableRow message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataTableRow
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataTableRow} Proto_DataTableRow
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataTableRow.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataTableRow();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.value && message.value.length))
                    message.value = [];
                message.value.push($root.Proto_DataTableValue.decode(reader, reader.uint32()));
                break;
            case 3:
                message.RowObjectReferenceID = reader.int64();
                break;
            case 4:
                message.RowObjectDBID = reader.int64();
                break;
            case 7:
                message.RowObjectRevisionInfo = reader.bytes();
                break;
            case 8:
                message.Sequence = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataTableRow message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataTableRow
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataTableRow} Proto_DataTableRow
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataTableRow.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataTableRow message.
     * @function verify
     * @memberof Proto_DataTableRow
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataTableRow.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.value != null && message.hasOwnProperty("value")) {
            if (!Array.isArray(message.value))
                return "value: array expected";
            for (var i = 0; i < message.value.length; ++i) {
                var error = $root.Proto_DataTableValue.verify(message.value[i]);
                if (error)
                    return "value." + error;
            }
        }
        if (message.RowObjectReferenceID != null && message.hasOwnProperty("RowObjectReferenceID"))
            if (!$util.isInteger(message.RowObjectReferenceID) && !(message.RowObjectReferenceID && $util.isInteger(message.RowObjectReferenceID.low) && $util.isInteger(message.RowObjectReferenceID.high)))
                return "RowObjectReferenceID: integer|Long expected";
        if (message.RowObjectDBID != null && message.hasOwnProperty("RowObjectDBID"))
            if (!$util.isInteger(message.RowObjectDBID) && !(message.RowObjectDBID && $util.isInteger(message.RowObjectDBID.low) && $util.isInteger(message.RowObjectDBID.high)))
                return "RowObjectDBID: integer|Long expected";
        if (message.RowObjectRevisionInfo != null && message.hasOwnProperty("RowObjectRevisionInfo"))
            if (!(message.RowObjectRevisionInfo && typeof message.RowObjectRevisionInfo.length === "number" || $util.isString(message.RowObjectRevisionInfo)))
                return "RowObjectRevisionInfo: buffer expected";
        if (message.Sequence != null && message.hasOwnProperty("Sequence"))
            if (!$util.isInteger(message.Sequence))
                return "Sequence: integer expected";
        return null;
    };

    /**
     * Creates a Proto_DataTableRow message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataTableRow
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataTableRow} Proto_DataTableRow
     */
    Proto_DataTableRow.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataTableRow)
            return object;
        var message = new $root.Proto_DataTableRow();
        if (object.value) {
            if (!Array.isArray(object.value))
                throw TypeError(".Proto_DataTableRow.value: array expected");
            message.value = [];
            for (var i = 0; i < object.value.length; ++i) {
                if (typeof object.value[i] !== "object")
                    throw TypeError(".Proto_DataTableRow.value: object expected");
                message.value[i] = $root.Proto_DataTableValue.fromObject(object.value[i]);
            }
        }
        if (object.RowObjectReferenceID != null)
            if ($util.Long)
                (message.RowObjectReferenceID = $util.Long.fromValue(object.RowObjectReferenceID)).unsigned = false;
            else if (typeof object.RowObjectReferenceID === "string")
                message.RowObjectReferenceID = parseInt(object.RowObjectReferenceID, 10);
            else if (typeof object.RowObjectReferenceID === "number")
                message.RowObjectReferenceID = object.RowObjectReferenceID;
            else if (typeof object.RowObjectReferenceID === "object")
                message.RowObjectReferenceID = new $util.LongBits(object.RowObjectReferenceID.low >>> 0, object.RowObjectReferenceID.high >>> 0).toNumber();
        if (object.RowObjectDBID != null)
            if ($util.Long)
                (message.RowObjectDBID = $util.Long.fromValue(object.RowObjectDBID)).unsigned = false;
            else if (typeof object.RowObjectDBID === "string")
                message.RowObjectDBID = parseInt(object.RowObjectDBID, 10);
            else if (typeof object.RowObjectDBID === "number")
                message.RowObjectDBID = object.RowObjectDBID;
            else if (typeof object.RowObjectDBID === "object")
                message.RowObjectDBID = new $util.LongBits(object.RowObjectDBID.low >>> 0, object.RowObjectDBID.high >>> 0).toNumber();
        if (object.RowObjectRevisionInfo != null)
            if (typeof object.RowObjectRevisionInfo === "string")
                $util.base64.decode(object.RowObjectRevisionInfo, message.RowObjectRevisionInfo = $util.newBuffer($util.base64.length(object.RowObjectRevisionInfo)), 0);
            else if (object.RowObjectRevisionInfo.length)
                message.RowObjectRevisionInfo = object.RowObjectRevisionInfo;
        if (object.Sequence != null)
            message.Sequence = object.Sequence | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataTableRow message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataTableRow
     * @static
     * @param {Proto_DataTableRow} message Proto_DataTableRow
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataTableRow.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.value = [];
        if (options.defaults) {
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.RowObjectReferenceID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.RowObjectReferenceID = options.longs === String ? "0" : 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.RowObjectDBID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.RowObjectDBID = options.longs === String ? "0" : 0;
            if (options.bytes === String)
                object.RowObjectRevisionInfo = "";
            else {
                object.RowObjectRevisionInfo = [];
                if (options.bytes !== Array)
                    object.RowObjectRevisionInfo = $util.newBuffer(object.RowObjectRevisionInfo);
            }
            object.Sequence = 0;
        }
        if (message.value && message.value.length) {
            object.value = [];
            for (var j = 0; j < message.value.length; ++j)
                object.value[j] = $root.Proto_DataTableValue.toObject(message.value[j], options);
        }
        if (message.RowObjectReferenceID != null && message.hasOwnProperty("RowObjectReferenceID"))
            if (typeof message.RowObjectReferenceID === "number")
                object.RowObjectReferenceID = options.longs === String ? String(message.RowObjectReferenceID) : message.RowObjectReferenceID;
            else
                object.RowObjectReferenceID = options.longs === String ? $util.Long.prototype.toString.call(message.RowObjectReferenceID) : options.longs === Number ? new $util.LongBits(message.RowObjectReferenceID.low >>> 0, message.RowObjectReferenceID.high >>> 0).toNumber() : message.RowObjectReferenceID;
        if (message.RowObjectDBID != null && message.hasOwnProperty("RowObjectDBID"))
            if (typeof message.RowObjectDBID === "number")
                object.RowObjectDBID = options.longs === String ? String(message.RowObjectDBID) : message.RowObjectDBID;
            else
                object.RowObjectDBID = options.longs === String ? $util.Long.prototype.toString.call(message.RowObjectDBID) : options.longs === Number ? new $util.LongBits(message.RowObjectDBID.low >>> 0, message.RowObjectDBID.high >>> 0).toNumber() : message.RowObjectDBID;
        if (message.RowObjectRevisionInfo != null && message.hasOwnProperty("RowObjectRevisionInfo"))
            object.RowObjectRevisionInfo = options.bytes === String ? $util.base64.encode(message.RowObjectRevisionInfo, 0, message.RowObjectRevisionInfo.length) : options.bytes === Array ? Array.prototype.slice.call(message.RowObjectRevisionInfo) : message.RowObjectRevisionInfo;
        if (message.Sequence != null && message.hasOwnProperty("Sequence"))
            object.Sequence = message.Sequence;
        return object;
    };

    /**
     * Converts this Proto_DataTableRow to JSON.
     * @function toJSON
     * @memberof Proto_DataTableRow
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataTableRow.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataTableRow;
})();

$root.Proto_DataTableValue = (function() {

    /**
     * Properties of a Proto_DataTableValue.
     * @exports IProto_DataTableValue
     * @interface IProto_DataTableValue
     * @property {number|Long|null} [referenceid] Proto_DataTableValue referenceid
     * @property {Uint8Array|null} [stringvalue] Proto_DataTableValue stringvalue
     * @property {number|Long|null} [timevalue] Proto_DataTableValue timevalue
     * @property {number|null} [numbervalue] Proto_DataTableValue numbervalue
     * @property {number|null} [numbervalueInt32] Proto_DataTableValue numbervalueInt32
     * @property {number|Long|null} [numbervalueInt64] Proto_DataTableValue numbervalueInt64
     * @property {boolean|null} [numbervalueBool] Proto_DataTableValue numbervalueBool
     * @property {number|null} [stringindex] Proto_DataTableValue stringindex
     * @property {boolean|null} [isnullvalue] Proto_DataTableValue isnullvalue
     */

    /**
     * Constructs a new Proto_DataTableValue.
     * @exports Proto_DataTableValue
     * @classdesc Represents a Proto_DataTableValue.
     * @implements IProto_DataTableValue
     * @constructor
     * @param {IProto_DataTableValue=} [properties] Properties to set
     */
    function Proto_DataTableValue(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataTableValue referenceid.
     * @member {number|Long|null|undefined} referenceid
     * @memberof Proto_DataTableValue
     * @instance
     */
    Proto_DataTableValue.prototype.referenceid = null;

    /**
     * Proto_DataTableValue stringvalue.
     * @member {Uint8Array|null|undefined} stringvalue
     * @memberof Proto_DataTableValue
     * @instance
     */
    Proto_DataTableValue.prototype.stringvalue = null;

    /**
     * Proto_DataTableValue timevalue.
     * @member {number|Long|null|undefined} timevalue
     * @memberof Proto_DataTableValue
     * @instance
     */
    Proto_DataTableValue.prototype.timevalue = null;

    /**
     * Proto_DataTableValue numbervalue.
     * @member {number|null|undefined} numbervalue
     * @memberof Proto_DataTableValue
     * @instance
     */
    Proto_DataTableValue.prototype.numbervalue = null;

    /**
     * Proto_DataTableValue numbervalueInt32.
     * @member {number|null|undefined} numbervalueInt32
     * @memberof Proto_DataTableValue
     * @instance
     */
    Proto_DataTableValue.prototype.numbervalueInt32 = null;

    /**
     * Proto_DataTableValue numbervalueInt64.
     * @member {number|Long|null|undefined} numbervalueInt64
     * @memberof Proto_DataTableValue
     * @instance
     */
    Proto_DataTableValue.prototype.numbervalueInt64 = null;

    /**
     * Proto_DataTableValue numbervalueBool.
     * @member {boolean|null|undefined} numbervalueBool
     * @memberof Proto_DataTableValue
     * @instance
     */
    Proto_DataTableValue.prototype.numbervalueBool = null;

    /**
     * Proto_DataTableValue stringindex.
     * @member {number|null|undefined} stringindex
     * @memberof Proto_DataTableValue
     * @instance
     */
    Proto_DataTableValue.prototype.stringindex = null;

    /**
     * Proto_DataTableValue isnullvalue.
     * @member {boolean|null|undefined} isnullvalue
     * @memberof Proto_DataTableValue
     * @instance
     */
    Proto_DataTableValue.prototype.isnullvalue = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_DataTableValue value.
     * @member {"referenceid"|"stringvalue"|"timevalue"|"numbervalue"|"numbervalueInt32"|"numbervalueInt64"|"numbervalueBool"|"stringindex"|"isnullvalue"|undefined} value
     * @memberof Proto_DataTableValue
     * @instance
     */
    Object.defineProperty(Proto_DataTableValue.prototype, "value", {
        get: $util.oneOfGetter($oneOfFields = ["referenceid", "stringvalue", "timevalue", "numbervalue", "numbervalueInt32", "numbervalueInt64", "numbervalueBool", "stringindex", "isnullvalue"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_DataTableValue instance using the specified properties.
     * @function create
     * @memberof Proto_DataTableValue
     * @static
     * @param {IProto_DataTableValue=} [properties] Properties to set
     * @returns {Proto_DataTableValue} Proto_DataTableValue instance
     */
    Proto_DataTableValue.create = function create(properties) {
        return new Proto_DataTableValue(properties);
    };

    /**
     * Encodes the specified Proto_DataTableValue message. Does not implicitly {@link Proto_DataTableValue.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataTableValue
     * @static
     * @param {IProto_DataTableValue} message Proto_DataTableValue message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataTableValue.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.referenceid != null && Object.hasOwnProperty.call(message, "referenceid"))
            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.referenceid);
        if (message.stringvalue != null && Object.hasOwnProperty.call(message, "stringvalue"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.stringvalue);
        if (message.timevalue != null && Object.hasOwnProperty.call(message, "timevalue"))
            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.timevalue);
        if (message.numbervalue != null && Object.hasOwnProperty.call(message, "numbervalue"))
            writer.uint32(/* id 4, wireType 1 =*/33).double(message.numbervalue);
        if (message.numbervalueInt32 != null && Object.hasOwnProperty.call(message, "numbervalueInt32"))
            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.numbervalueInt32);
        if (message.numbervalueInt64 != null && Object.hasOwnProperty.call(message, "numbervalueInt64"))
            writer.uint32(/* id 6, wireType 0 =*/48).int64(message.numbervalueInt64);
        if (message.numbervalueBool != null && Object.hasOwnProperty.call(message, "numbervalueBool"))
            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.numbervalueBool);
        if (message.stringindex != null && Object.hasOwnProperty.call(message, "stringindex"))
            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.stringindex);
        if (message.isnullvalue != null && Object.hasOwnProperty.call(message, "isnullvalue"))
            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.isnullvalue);
        return writer;
    };

    /**
     * Encodes the specified Proto_DataTableValue message, length delimited. Does not implicitly {@link Proto_DataTableValue.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataTableValue
     * @static
     * @param {IProto_DataTableValue} message Proto_DataTableValue message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataTableValue.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataTableValue message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataTableValue
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataTableValue} Proto_DataTableValue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataTableValue.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataTableValue();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.referenceid = reader.int64();
                break;
            case 2:
                message.stringvalue = reader.bytes();
                break;
            case 3:
                message.timevalue = reader.int64();
                break;
            case 4:
                message.numbervalue = reader.double();
                break;
            case 5:
                message.numbervalueInt32 = reader.int32();
                break;
            case 6:
                message.numbervalueInt64 = reader.int64();
                break;
            case 7:
                message.numbervalueBool = reader.bool();
                break;
            case 8:
                message.stringindex = reader.int32();
                break;
            case 10:
                message.isnullvalue = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataTableValue message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataTableValue
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataTableValue} Proto_DataTableValue
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataTableValue.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataTableValue message.
     * @function verify
     * @memberof Proto_DataTableValue
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataTableValue.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.referenceid != null && message.hasOwnProperty("referenceid")) {
            properties.value = 1;
            if (!$util.isInteger(message.referenceid) && !(message.referenceid && $util.isInteger(message.referenceid.low) && $util.isInteger(message.referenceid.high)))
                return "referenceid: integer|Long expected";
        }
        if (message.stringvalue != null && message.hasOwnProperty("stringvalue")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!(message.stringvalue && typeof message.stringvalue.length === "number" || $util.isString(message.stringvalue)))
                return "stringvalue: buffer expected";
        }
        if (message.timevalue != null && message.hasOwnProperty("timevalue")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!$util.isInteger(message.timevalue) && !(message.timevalue && $util.isInteger(message.timevalue.low) && $util.isInteger(message.timevalue.high)))
                return "timevalue: integer|Long expected";
        }
        if (message.numbervalue != null && message.hasOwnProperty("numbervalue")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (typeof message.numbervalue !== "number")
                return "numbervalue: number expected";
        }
        if (message.numbervalueInt32 != null && message.hasOwnProperty("numbervalueInt32")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!$util.isInteger(message.numbervalueInt32))
                return "numbervalueInt32: integer expected";
        }
        if (message.numbervalueInt64 != null && message.hasOwnProperty("numbervalueInt64")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!$util.isInteger(message.numbervalueInt64) && !(message.numbervalueInt64 && $util.isInteger(message.numbervalueInt64.low) && $util.isInteger(message.numbervalueInt64.high)))
                return "numbervalueInt64: integer|Long expected";
        }
        if (message.numbervalueBool != null && message.hasOwnProperty("numbervalueBool")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (typeof message.numbervalueBool !== "boolean")
                return "numbervalueBool: boolean expected";
        }
        if (message.stringindex != null && message.hasOwnProperty("stringindex")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (!$util.isInteger(message.stringindex))
                return "stringindex: integer expected";
        }
        if (message.isnullvalue != null && message.hasOwnProperty("isnullvalue")) {
            if (properties.value === 1)
                return "value: multiple values";
            properties.value = 1;
            if (typeof message.isnullvalue !== "boolean")
                return "isnullvalue: boolean expected";
        }
        return null;
    };

    /**
     * Creates a Proto_DataTableValue message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataTableValue
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataTableValue} Proto_DataTableValue
     */
    Proto_DataTableValue.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataTableValue)
            return object;
        var message = new $root.Proto_DataTableValue();
        if (object.referenceid != null)
            if ($util.Long)
                (message.referenceid = $util.Long.fromValue(object.referenceid)).unsigned = false;
            else if (typeof object.referenceid === "string")
                message.referenceid = parseInt(object.referenceid, 10);
            else if (typeof object.referenceid === "number")
                message.referenceid = object.referenceid;
            else if (typeof object.referenceid === "object")
                message.referenceid = new $util.LongBits(object.referenceid.low >>> 0, object.referenceid.high >>> 0).toNumber();
        if (object.stringvalue != null)
            if (typeof object.stringvalue === "string")
                $util.base64.decode(object.stringvalue, message.stringvalue = $util.newBuffer($util.base64.length(object.stringvalue)), 0);
            else if (object.stringvalue.length)
                message.stringvalue = object.stringvalue;
        if (object.timevalue != null)
            if ($util.Long)
                (message.timevalue = $util.Long.fromValue(object.timevalue)).unsigned = false;
            else if (typeof object.timevalue === "string")
                message.timevalue = parseInt(object.timevalue, 10);
            else if (typeof object.timevalue === "number")
                message.timevalue = object.timevalue;
            else if (typeof object.timevalue === "object")
                message.timevalue = new $util.LongBits(object.timevalue.low >>> 0, object.timevalue.high >>> 0).toNumber();
        if (object.numbervalue != null)
            message.numbervalue = Number(object.numbervalue);
        if (object.numbervalueInt32 != null)
            message.numbervalueInt32 = object.numbervalueInt32 | 0;
        if (object.numbervalueInt64 != null)
            if ($util.Long)
                (message.numbervalueInt64 = $util.Long.fromValue(object.numbervalueInt64)).unsigned = false;
            else if (typeof object.numbervalueInt64 === "string")
                message.numbervalueInt64 = parseInt(object.numbervalueInt64, 10);
            else if (typeof object.numbervalueInt64 === "number")
                message.numbervalueInt64 = object.numbervalueInt64;
            else if (typeof object.numbervalueInt64 === "object")
                message.numbervalueInt64 = new $util.LongBits(object.numbervalueInt64.low >>> 0, object.numbervalueInt64.high >>> 0).toNumber();
        if (object.numbervalueBool != null)
            message.numbervalueBool = Boolean(object.numbervalueBool);
        if (object.stringindex != null)
            message.stringindex = object.stringindex | 0;
        if (object.isnullvalue != null)
            message.isnullvalue = Boolean(object.isnullvalue);
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataTableValue message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataTableValue
     * @static
     * @param {Proto_DataTableValue} message Proto_DataTableValue
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataTableValue.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (message.referenceid != null && message.hasOwnProperty("referenceid")) {
            if (typeof message.referenceid === "number")
                object.referenceid = options.longs === String ? String(message.referenceid) : message.referenceid;
            else
                object.referenceid = options.longs === String ? $util.Long.prototype.toString.call(message.referenceid) : options.longs === Number ? new $util.LongBits(message.referenceid.low >>> 0, message.referenceid.high >>> 0).toNumber() : message.referenceid;
            if (options.oneofs)
                object.value = "referenceid";
        }
        if (message.stringvalue != null && message.hasOwnProperty("stringvalue")) {
            object.stringvalue = options.bytes === String ? $util.base64.encode(message.stringvalue, 0, message.stringvalue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringvalue) : message.stringvalue;
            if (options.oneofs)
                object.value = "stringvalue";
        }
        if (message.timevalue != null && message.hasOwnProperty("timevalue")) {
            if (typeof message.timevalue === "number")
                object.timevalue = options.longs === String ? String(message.timevalue) : message.timevalue;
            else
                object.timevalue = options.longs === String ? $util.Long.prototype.toString.call(message.timevalue) : options.longs === Number ? new $util.LongBits(message.timevalue.low >>> 0, message.timevalue.high >>> 0).toNumber() : message.timevalue;
            if (options.oneofs)
                object.value = "timevalue";
        }
        if (message.numbervalue != null && message.hasOwnProperty("numbervalue")) {
            object.numbervalue = options.json && !isFinite(message.numbervalue) ? String(message.numbervalue) : message.numbervalue;
            if (options.oneofs)
                object.value = "numbervalue";
        }
        if (message.numbervalueInt32 != null && message.hasOwnProperty("numbervalueInt32")) {
            object.numbervalueInt32 = message.numbervalueInt32;
            if (options.oneofs)
                object.value = "numbervalueInt32";
        }
        if (message.numbervalueInt64 != null && message.hasOwnProperty("numbervalueInt64")) {
            if (typeof message.numbervalueInt64 === "number")
                object.numbervalueInt64 = options.longs === String ? String(message.numbervalueInt64) : message.numbervalueInt64;
            else
                object.numbervalueInt64 = options.longs === String ? $util.Long.prototype.toString.call(message.numbervalueInt64) : options.longs === Number ? new $util.LongBits(message.numbervalueInt64.low >>> 0, message.numbervalueInt64.high >>> 0).toNumber() : message.numbervalueInt64;
            if (options.oneofs)
                object.value = "numbervalueInt64";
        }
        if (message.numbervalueBool != null && message.hasOwnProperty("numbervalueBool")) {
            object.numbervalueBool = message.numbervalueBool;
            if (options.oneofs)
                object.value = "numbervalueBool";
        }
        if (message.stringindex != null && message.hasOwnProperty("stringindex")) {
            object.stringindex = message.stringindex;
            if (options.oneofs)
                object.value = "stringindex";
        }
        if (message.isnullvalue != null && message.hasOwnProperty("isnullvalue")) {
            object.isnullvalue = message.isnullvalue;
            if (options.oneofs)
                object.value = "isnullvalue";
        }
        return object;
    };

    /**
     * Converts this Proto_DataTableValue to JSON.
     * @function toJSON
     * @memberof Proto_DataTableValue
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataTableValue.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataTableValue;
})();

$root.Proto_CommandList = (function() {

    /**
     * Properties of a Proto_CommandList.
     * @exports IProto_CommandList
     * @interface IProto_CommandList
     * @property {Array.<IProto_Command>|null} [Commands] Proto_CommandList Commands
     */

    /**
     * Constructs a new Proto_CommandList.
     * @exports Proto_CommandList
     * @classdesc Represents a Proto_CommandList.
     * @implements IProto_CommandList
     * @constructor
     * @param {IProto_CommandList=} [properties] Properties to set
     */
    function Proto_CommandList(properties) {
        this.Commands = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_CommandList Commands.
     * @member {Array.<IProto_Command>} Commands
     * @memberof Proto_CommandList
     * @instance
     */
    Proto_CommandList.prototype.Commands = $util.emptyArray;

    /**
     * Creates a new Proto_CommandList instance using the specified properties.
     * @function create
     * @memberof Proto_CommandList
     * @static
     * @param {IProto_CommandList=} [properties] Properties to set
     * @returns {Proto_CommandList} Proto_CommandList instance
     */
    Proto_CommandList.create = function create(properties) {
        return new Proto_CommandList(properties);
    };

    /**
     * Encodes the specified Proto_CommandList message. Does not implicitly {@link Proto_CommandList.verify|verify} messages.
     * @function encode
     * @memberof Proto_CommandList
     * @static
     * @param {IProto_CommandList} message Proto_CommandList message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_CommandList.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Commands != null && message.Commands.length)
            for (var i = 0; i < message.Commands.length; ++i)
                $root.Proto_Command.encode(message.Commands[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_CommandList message, length delimited. Does not implicitly {@link Proto_CommandList.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_CommandList
     * @static
     * @param {IProto_CommandList} message Proto_CommandList message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_CommandList.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_CommandList message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_CommandList
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_CommandList} Proto_CommandList
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_CommandList.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_CommandList();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.Commands && message.Commands.length))
                    message.Commands = [];
                message.Commands.push($root.Proto_Command.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_CommandList message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_CommandList
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_CommandList} Proto_CommandList
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_CommandList.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_CommandList message.
     * @function verify
     * @memberof Proto_CommandList
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_CommandList.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Commands != null && message.hasOwnProperty("Commands")) {
            if (!Array.isArray(message.Commands))
                return "Commands: array expected";
            for (var i = 0; i < message.Commands.length; ++i) {
                var error = $root.Proto_Command.verify(message.Commands[i]);
                if (error)
                    return "Commands." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_CommandList message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_CommandList
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_CommandList} Proto_CommandList
     */
    Proto_CommandList.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_CommandList)
            return object;
        var message = new $root.Proto_CommandList();
        if (object.Commands) {
            if (!Array.isArray(object.Commands))
                throw TypeError(".Proto_CommandList.Commands: array expected");
            message.Commands = [];
            for (var i = 0; i < object.Commands.length; ++i) {
                if (typeof object.Commands[i] !== "object")
                    throw TypeError(".Proto_CommandList.Commands: object expected");
                message.Commands[i] = $root.Proto_Command.fromObject(object.Commands[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_CommandList message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_CommandList
     * @static
     * @param {Proto_CommandList} message Proto_CommandList
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_CommandList.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.Commands = [];
        if (message.Commands && message.Commands.length) {
            object.Commands = [];
            for (var j = 0; j < message.Commands.length; ++j)
                object.Commands[j] = $root.Proto_Command.toObject(message.Commands[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_CommandList to JSON.
     * @function toJSON
     * @memberof Proto_CommandList
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_CommandList.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_CommandList;
})();

$root.Proto_Command = (function() {

    /**
     * Properties of a Proto_Command.
     * @exports IProto_Command
     * @interface IProto_Command
     * @property {Uint8Array|null} [command] Proto_Command command
     * @property {Uint8Array|null} [label] Proto_Command label
     */

    /**
     * Constructs a new Proto_Command.
     * @exports Proto_Command
     * @classdesc Represents a Proto_Command.
     * @implements IProto_Command
     * @constructor
     * @param {IProto_Command=} [properties] Properties to set
     */
    function Proto_Command(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Command command.
     * @member {Uint8Array} command
     * @memberof Proto_Command
     * @instance
     */
    Proto_Command.prototype.command = $util.newBuffer([]);

    /**
     * Proto_Command label.
     * @member {Uint8Array} label
     * @memberof Proto_Command
     * @instance
     */
    Proto_Command.prototype.label = $util.newBuffer([]);

    /**
     * Creates a new Proto_Command instance using the specified properties.
     * @function create
     * @memberof Proto_Command
     * @static
     * @param {IProto_Command=} [properties] Properties to set
     * @returns {Proto_Command} Proto_Command instance
     */
    Proto_Command.create = function create(properties) {
        return new Proto_Command(properties);
    };

    /**
     * Encodes the specified Proto_Command message. Does not implicitly {@link Proto_Command.verify|verify} messages.
     * @function encode
     * @memberof Proto_Command
     * @static
     * @param {IProto_Command} message Proto_Command message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Command.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.command != null && Object.hasOwnProperty.call(message, "command"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.command);
        if (message.label != null && Object.hasOwnProperty.call(message, "label"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.label);
        return writer;
    };

    /**
     * Encodes the specified Proto_Command message, length delimited. Does not implicitly {@link Proto_Command.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Command
     * @static
     * @param {IProto_Command} message Proto_Command message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Command.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Command message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Command
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Command} Proto_Command
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Command.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Command();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.command = reader.bytes();
                break;
            case 2:
                message.label = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Command message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Command
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Command} Proto_Command
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Command.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Command message.
     * @function verify
     * @memberof Proto_Command
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Command.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.command != null && message.hasOwnProperty("command"))
            if (!(message.command && typeof message.command.length === "number" || $util.isString(message.command)))
                return "command: buffer expected";
        if (message.label != null && message.hasOwnProperty("label"))
            if (!(message.label && typeof message.label.length === "number" || $util.isString(message.label)))
                return "label: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_Command message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Command
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Command} Proto_Command
     */
    Proto_Command.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Command)
            return object;
        var message = new $root.Proto_Command();
        if (object.command != null)
            if (typeof object.command === "string")
                $util.base64.decode(object.command, message.command = $util.newBuffer($util.base64.length(object.command)), 0);
            else if (object.command.length)
                message.command = object.command;
        if (object.label != null)
            if (typeof object.label === "string")
                $util.base64.decode(object.label, message.label = $util.newBuffer($util.base64.length(object.label)), 0);
            else if (object.label.length)
                message.label = object.label;
        return message;
    };

    /**
     * Creates a plain object from a Proto_Command message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Command
     * @static
     * @param {Proto_Command} message Proto_Command
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Command.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.command = "";
            else {
                object.command = [];
                if (options.bytes !== Array)
                    object.command = $util.newBuffer(object.command);
            }
            if (options.bytes === String)
                object.label = "";
            else {
                object.label = [];
                if (options.bytes !== Array)
                    object.label = $util.newBuffer(object.label);
            }
        }
        if (message.command != null && message.hasOwnProperty("command"))
            object.command = options.bytes === String ? $util.base64.encode(message.command, 0, message.command.length) : options.bytes === Array ? Array.prototype.slice.call(message.command) : message.command;
        if (message.label != null && message.hasOwnProperty("label"))
            object.label = options.bytes === String ? $util.base64.encode(message.label, 0, message.label.length) : options.bytes === Array ? Array.prototype.slice.call(message.label) : message.label;
        return object;
    };

    /**
     * Converts this Proto_Command to JSON.
     * @function toJSON
     * @memberof Proto_Command
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Command.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Command;
})();

$root.Proto_RelationList = (function() {

    /**
     * Properties of a Proto_RelationList.
     * @exports IProto_RelationList
     * @interface IProto_RelationList
     * @property {Array.<IProto_Relation>|null} [Relations] Proto_RelationList Relations
     */

    /**
     * Constructs a new Proto_RelationList.
     * @exports Proto_RelationList
     * @classdesc Represents a Proto_RelationList.
     * @implements IProto_RelationList
     * @constructor
     * @param {IProto_RelationList=} [properties] Properties to set
     */
    function Proto_RelationList(properties) {
        this.Relations = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_RelationList Relations.
     * @member {Array.<IProto_Relation>} Relations
     * @memberof Proto_RelationList
     * @instance
     */
    Proto_RelationList.prototype.Relations = $util.emptyArray;

    /**
     * Creates a new Proto_RelationList instance using the specified properties.
     * @function create
     * @memberof Proto_RelationList
     * @static
     * @param {IProto_RelationList=} [properties] Properties to set
     * @returns {Proto_RelationList} Proto_RelationList instance
     */
    Proto_RelationList.create = function create(properties) {
        return new Proto_RelationList(properties);
    };

    /**
     * Encodes the specified Proto_RelationList message. Does not implicitly {@link Proto_RelationList.verify|verify} messages.
     * @function encode
     * @memberof Proto_RelationList
     * @static
     * @param {IProto_RelationList} message Proto_RelationList message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_RelationList.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Relations != null && message.Relations.length)
            for (var i = 0; i < message.Relations.length; ++i)
                $root.Proto_Relation.encode(message.Relations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_RelationList message, length delimited. Does not implicitly {@link Proto_RelationList.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_RelationList
     * @static
     * @param {IProto_RelationList} message Proto_RelationList message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_RelationList.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_RelationList message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_RelationList
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_RelationList} Proto_RelationList
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_RelationList.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_RelationList();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.Relations && message.Relations.length))
                    message.Relations = [];
                message.Relations.push($root.Proto_Relation.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_RelationList message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_RelationList
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_RelationList} Proto_RelationList
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_RelationList.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_RelationList message.
     * @function verify
     * @memberof Proto_RelationList
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_RelationList.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Relations != null && message.hasOwnProperty("Relations")) {
            if (!Array.isArray(message.Relations))
                return "Relations: array expected";
            for (var i = 0; i < message.Relations.length; ++i) {
                var error = $root.Proto_Relation.verify(message.Relations[i]);
                if (error)
                    return "Relations." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_RelationList message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_RelationList
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_RelationList} Proto_RelationList
     */
    Proto_RelationList.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_RelationList)
            return object;
        var message = new $root.Proto_RelationList();
        if (object.Relations) {
            if (!Array.isArray(object.Relations))
                throw TypeError(".Proto_RelationList.Relations: array expected");
            message.Relations = [];
            for (var i = 0; i < object.Relations.length; ++i) {
                if (typeof object.Relations[i] !== "object")
                    throw TypeError(".Proto_RelationList.Relations: object expected");
                message.Relations[i] = $root.Proto_Relation.fromObject(object.Relations[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_RelationList message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_RelationList
     * @static
     * @param {Proto_RelationList} message Proto_RelationList
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_RelationList.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.Relations = [];
        if (message.Relations && message.Relations.length) {
            object.Relations = [];
            for (var j = 0; j < message.Relations.length; ++j)
                object.Relations[j] = $root.Proto_Relation.toObject(message.Relations[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_RelationList to JSON.
     * @function toJSON
     * @memberof Proto_RelationList
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_RelationList.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_RelationList;
})();

$root.Proto_Relation = (function() {

    /**
     * Properties of a Proto_Relation.
     * @exports IProto_Relation
     * @interface IProto_Relation
     * @property {Uint8Array|null} ["function"] Proto_Relation function
     * @property {Uint8Array|null} [returnclassname] Proto_Relation returnclassname
     * @property {number|null} [clientaccesstype] Proto_Relation clientaccesstype
     * @property {number|null} [StandardOrReleaseClass] Proto_Relation StandardOrReleaseClass
     */

    /**
     * Constructs a new Proto_Relation.
     * @exports Proto_Relation
     * @classdesc Represents a Proto_Relation.
     * @implements IProto_Relation
     * @constructor
     * @param {IProto_Relation=} [properties] Properties to set
     */
    function Proto_Relation(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Relation function.
     * @member {Uint8Array} function
     * @memberof Proto_Relation
     * @instance
     */
    Proto_Relation.prototype["function"] = $util.newBuffer([]);

    /**
     * Proto_Relation returnclassname.
     * @member {Uint8Array} returnclassname
     * @memberof Proto_Relation
     * @instance
     */
    Proto_Relation.prototype.returnclassname = $util.newBuffer([]);

    /**
     * Proto_Relation clientaccesstype.
     * @member {number} clientaccesstype
     * @memberof Proto_Relation
     * @instance
     */
    Proto_Relation.prototype.clientaccesstype = 0;

    /**
     * Proto_Relation StandardOrReleaseClass.
     * @member {number} StandardOrReleaseClass
     * @memberof Proto_Relation
     * @instance
     */
    Proto_Relation.prototype.StandardOrReleaseClass = 0;

    /**
     * Creates a new Proto_Relation instance using the specified properties.
     * @function create
     * @memberof Proto_Relation
     * @static
     * @param {IProto_Relation=} [properties] Properties to set
     * @returns {Proto_Relation} Proto_Relation instance
     */
    Proto_Relation.create = function create(properties) {
        return new Proto_Relation(properties);
    };

    /**
     * Encodes the specified Proto_Relation message. Does not implicitly {@link Proto_Relation.verify|verify} messages.
     * @function encode
     * @memberof Proto_Relation
     * @static
     * @param {IProto_Relation} message Proto_Relation message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Relation.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message["function"]);
        if (message.returnclassname != null && Object.hasOwnProperty.call(message, "returnclassname"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.returnclassname);
        if (message.clientaccesstype != null && Object.hasOwnProperty.call(message, "clientaccesstype"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.clientaccesstype);
        if (message.StandardOrReleaseClass != null && Object.hasOwnProperty.call(message, "StandardOrReleaseClass"))
            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.StandardOrReleaseClass);
        return writer;
    };

    /**
     * Encodes the specified Proto_Relation message, length delimited. Does not implicitly {@link Proto_Relation.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Relation
     * @static
     * @param {IProto_Relation} message Proto_Relation message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Relation.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Relation message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Relation
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Relation} Proto_Relation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Relation.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Relation();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message["function"] = reader.bytes();
                break;
            case 3:
                message.returnclassname = reader.bytes();
                break;
            case 4:
                message.clientaccesstype = reader.int32();
                break;
            case 5:
                message.StandardOrReleaseClass = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Relation message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Relation
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Relation} Proto_Relation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Relation.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Relation message.
     * @function verify
     * @memberof Proto_Relation
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Relation.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message["function"] != null && message.hasOwnProperty("function"))
            if (!(message["function"] && typeof message["function"].length === "number" || $util.isString(message["function"])))
                return "function: buffer expected";
        if (message.returnclassname != null && message.hasOwnProperty("returnclassname"))
            if (!(message.returnclassname && typeof message.returnclassname.length === "number" || $util.isString(message.returnclassname)))
                return "returnclassname: buffer expected";
        if (message.clientaccesstype != null && message.hasOwnProperty("clientaccesstype"))
            if (!$util.isInteger(message.clientaccesstype))
                return "clientaccesstype: integer expected";
        if (message.StandardOrReleaseClass != null && message.hasOwnProperty("StandardOrReleaseClass"))
            if (!$util.isInteger(message.StandardOrReleaseClass))
                return "StandardOrReleaseClass: integer expected";
        return null;
    };

    /**
     * Creates a Proto_Relation message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Relation
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Relation} Proto_Relation
     */
    Proto_Relation.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Relation)
            return object;
        var message = new $root.Proto_Relation();
        if (object["function"] != null)
            if (typeof object["function"] === "string")
                $util.base64.decode(object["function"], message["function"] = $util.newBuffer($util.base64.length(object["function"])), 0);
            else if (object["function"].length)
                message["function"] = object["function"];
        if (object.returnclassname != null)
            if (typeof object.returnclassname === "string")
                $util.base64.decode(object.returnclassname, message.returnclassname = $util.newBuffer($util.base64.length(object.returnclassname)), 0);
            else if (object.returnclassname.length)
                message.returnclassname = object.returnclassname;
        if (object.clientaccesstype != null)
            message.clientaccesstype = object.clientaccesstype | 0;
        if (object.StandardOrReleaseClass != null)
            message.StandardOrReleaseClass = object.StandardOrReleaseClass | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_Relation message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Relation
     * @static
     * @param {Proto_Relation} message Proto_Relation
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Relation.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object["function"] = "";
            else {
                object["function"] = [];
                if (options.bytes !== Array)
                    object["function"] = $util.newBuffer(object["function"]);
            }
            if (options.bytes === String)
                object.returnclassname = "";
            else {
                object.returnclassname = [];
                if (options.bytes !== Array)
                    object.returnclassname = $util.newBuffer(object.returnclassname);
            }
            object.clientaccesstype = 0;
            object.StandardOrReleaseClass = 0;
        }
        if (message["function"] != null && message.hasOwnProperty("function"))
            object["function"] = options.bytes === String ? $util.base64.encode(message["function"], 0, message["function"].length) : options.bytes === Array ? Array.prototype.slice.call(message["function"]) : message["function"];
        if (message.returnclassname != null && message.hasOwnProperty("returnclassname"))
            object.returnclassname = options.bytes === String ? $util.base64.encode(message.returnclassname, 0, message.returnclassname.length) : options.bytes === Array ? Array.prototype.slice.call(message.returnclassname) : message.returnclassname;
        if (message.clientaccesstype != null && message.hasOwnProperty("clientaccesstype"))
            object.clientaccesstype = message.clientaccesstype;
        if (message.StandardOrReleaseClass != null && message.hasOwnProperty("StandardOrReleaseClass"))
            object.StandardOrReleaseClass = message.StandardOrReleaseClass;
        return object;
    };

    /**
     * Converts this Proto_Relation to JSON.
     * @function toJSON
     * @memberof Proto_Relation
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Relation.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Relation;
})();

$root.Proto_ServerProbe = (function() {

    /**
     * Properties of a Proto_ServerProbe.
     * @exports IProto_ServerProbe
     * @interface IProto_ServerProbe
     * @property {Uint8Array|null} [ServerCode] Proto_ServerProbe ServerCode
     * @property {Uint8Array|null} [Version] Proto_ServerProbe Version
     * @property {number|Long|null} [DomainState] Proto_ServerProbe DomainState
     * @property {Uint8Array|null} [Project] Proto_ServerProbe Project
     * @property {Uint8Array|null} [ProductName] Proto_ServerProbe ProductName
     * @property {Uint8Array|null} [PlatformVersion] Proto_ServerProbe PlatformVersion
     * @property {Uint8Array|null} [ProjectVersion] Proto_ServerProbe ProjectVersion
     * @property {Uint8Array|null} [ProductVersion] Proto_ServerProbe ProductVersion
     * @property {Uint8Array|null} [LicenseState] Proto_ServerProbe LicenseState
     * @property {number|Long|null} [ExpiredIn] Proto_ServerProbe ExpiredIn
     * @property {number|Long|null} [AuthenticationMode] Proto_ServerProbe AuthenticationMode
     * @property {Uint8Array|null} [ServerLabel] Proto_ServerProbe ServerLabel
     * @property {Uint8Array|null} [ServerICON] Proto_ServerProbe ServerICON
     * @property {number|null} [serverinstanceid] Proto_ServerProbe serverinstanceid
     * @property {number|null} [UserCommandTimeout] Proto_ServerProbe UserCommandTimeout
     * @property {number|null} [PlatformTimeout] Proto_ServerProbe PlatformTimeout
     * @property {number|null} [BackgroudSyncInterval] Proto_ServerProbe BackgroudSyncInterval
     * @property {number|null} [ClusterState] Proto_ServerProbe ClusterState
     * @property {Uint8Array|null} [DomainName] Proto_ServerProbe DomainName
     * @property {Uint8Array|null} [HostName] Proto_ServerProbe HostName
     * @property {Uint8Array|null} [BackupServer] Proto_ServerProbe BackupServer
     * @property {Uint8Array|null} [BackupRole] Proto_ServerProbe BackupRole
     * @property {number|null} [APIVersion] Proto_ServerProbe APIVersion
     * @property {number|null} [ProtoFileVersion] Proto_ServerProbe ProtoFileVersion
     * @property {number|null} [HasProductTour] Proto_ServerProbe HasProductTour
     * @property {number|null} [HasDocumentation] Proto_ServerProbe HasDocumentation
     */

    /**
     * Constructs a new Proto_ServerProbe.
     * @exports Proto_ServerProbe
     * @classdesc Represents a Proto_ServerProbe.
     * @implements IProto_ServerProbe
     * @constructor
     * @param {IProto_ServerProbe=} [properties] Properties to set
     */
    function Proto_ServerProbe(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ServerProbe ServerCode.
     * @member {Uint8Array} ServerCode
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.ServerCode = $util.newBuffer([]);

    /**
     * Proto_ServerProbe Version.
     * @member {Uint8Array} Version
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.Version = $util.newBuffer([]);

    /**
     * Proto_ServerProbe DomainState.
     * @member {number|Long} DomainState
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.DomainState = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ServerProbe Project.
     * @member {Uint8Array} Project
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.Project = $util.newBuffer([]);

    /**
     * Proto_ServerProbe ProductName.
     * @member {Uint8Array} ProductName
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.ProductName = $util.newBuffer([]);

    /**
     * Proto_ServerProbe PlatformVersion.
     * @member {Uint8Array} PlatformVersion
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.PlatformVersion = $util.newBuffer([]);

    /**
     * Proto_ServerProbe ProjectVersion.
     * @member {Uint8Array} ProjectVersion
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.ProjectVersion = $util.newBuffer([]);

    /**
     * Proto_ServerProbe ProductVersion.
     * @member {Uint8Array} ProductVersion
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.ProductVersion = $util.newBuffer([]);

    /**
     * Proto_ServerProbe LicenseState.
     * @member {Uint8Array} LicenseState
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.LicenseState = $util.newBuffer([]);

    /**
     * Proto_ServerProbe ExpiredIn.
     * @member {number|Long} ExpiredIn
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.ExpiredIn = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ServerProbe AuthenticationMode.
     * @member {number|Long} AuthenticationMode
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.AuthenticationMode = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ServerProbe ServerLabel.
     * @member {Uint8Array} ServerLabel
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.ServerLabel = $util.newBuffer([]);

    /**
     * Proto_ServerProbe ServerICON.
     * @member {Uint8Array} ServerICON
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.ServerICON = $util.newBuffer([]);

    /**
     * Proto_ServerProbe serverinstanceid.
     * @member {number} serverinstanceid
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.serverinstanceid = 0;

    /**
     * Proto_ServerProbe UserCommandTimeout.
     * @member {number} UserCommandTimeout
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.UserCommandTimeout = 0;

    /**
     * Proto_ServerProbe PlatformTimeout.
     * @member {number} PlatformTimeout
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.PlatformTimeout = 0;

    /**
     * Proto_ServerProbe BackgroudSyncInterval.
     * @member {number} BackgroudSyncInterval
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.BackgroudSyncInterval = 0;

    /**
     * Proto_ServerProbe ClusterState.
     * @member {number} ClusterState
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.ClusterState = 0;

    /**
     * Proto_ServerProbe DomainName.
     * @member {Uint8Array} DomainName
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.DomainName = $util.newBuffer([]);

    /**
     * Proto_ServerProbe HostName.
     * @member {Uint8Array} HostName
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.HostName = $util.newBuffer([]);

    /**
     * Proto_ServerProbe BackupServer.
     * @member {Uint8Array} BackupServer
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.BackupServer = $util.newBuffer([]);

    /**
     * Proto_ServerProbe BackupRole.
     * @member {Uint8Array} BackupRole
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.BackupRole = $util.newBuffer([]);

    /**
     * Proto_ServerProbe APIVersion.
     * @member {number} APIVersion
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.APIVersion = 0;

    /**
     * Proto_ServerProbe ProtoFileVersion.
     * @member {number} ProtoFileVersion
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.ProtoFileVersion = 0;

    /**
     * Proto_ServerProbe HasProductTour.
     * @member {number} HasProductTour
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.HasProductTour = 0;

    /**
     * Proto_ServerProbe HasDocumentation.
     * @member {number} HasDocumentation
     * @memberof Proto_ServerProbe
     * @instance
     */
    Proto_ServerProbe.prototype.HasDocumentation = 0;

    /**
     * Creates a new Proto_ServerProbe instance using the specified properties.
     * @function create
     * @memberof Proto_ServerProbe
     * @static
     * @param {IProto_ServerProbe=} [properties] Properties to set
     * @returns {Proto_ServerProbe} Proto_ServerProbe instance
     */
    Proto_ServerProbe.create = function create(properties) {
        return new Proto_ServerProbe(properties);
    };

    /**
     * Encodes the specified Proto_ServerProbe message. Does not implicitly {@link Proto_ServerProbe.verify|verify} messages.
     * @function encode
     * @memberof Proto_ServerProbe
     * @static
     * @param {IProto_ServerProbe} message Proto_ServerProbe message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ServerProbe.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ServerCode != null && Object.hasOwnProperty.call(message, "ServerCode"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ServerCode);
        if (message.Version != null && Object.hasOwnProperty.call(message, "Version"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.Version);
        if (message.DomainState != null && Object.hasOwnProperty.call(message, "DomainState"))
            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.DomainState);
        if (message.Project != null && Object.hasOwnProperty.call(message, "Project"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.Project);
        if (message.ProductName != null && Object.hasOwnProperty.call(message, "ProductName"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.ProductName);
        if (message.PlatformVersion != null && Object.hasOwnProperty.call(message, "PlatformVersion"))
            writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.PlatformVersion);
        if (message.ProjectVersion != null && Object.hasOwnProperty.call(message, "ProjectVersion"))
            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.ProjectVersion);
        if (message.ProductVersion != null && Object.hasOwnProperty.call(message, "ProductVersion"))
            writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.ProductVersion);
        if (message.LicenseState != null && Object.hasOwnProperty.call(message, "LicenseState"))
            writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.LicenseState);
        if (message.ExpiredIn != null && Object.hasOwnProperty.call(message, "ExpiredIn"))
            writer.uint32(/* id 10, wireType 0 =*/80).int64(message.ExpiredIn);
        if (message.AuthenticationMode != null && Object.hasOwnProperty.call(message, "AuthenticationMode"))
            writer.uint32(/* id 11, wireType 0 =*/88).int64(message.AuthenticationMode);
        if (message.ServerLabel != null && Object.hasOwnProperty.call(message, "ServerLabel"))
            writer.uint32(/* id 12, wireType 2 =*/98).bytes(message.ServerLabel);
        if (message.ServerICON != null && Object.hasOwnProperty.call(message, "ServerICON"))
            writer.uint32(/* id 13, wireType 2 =*/106).bytes(message.ServerICON);
        if (message.serverinstanceid != null && Object.hasOwnProperty.call(message, "serverinstanceid"))
            writer.uint32(/* id 14, wireType 0 =*/112).int32(message.serverinstanceid);
        if (message.UserCommandTimeout != null && Object.hasOwnProperty.call(message, "UserCommandTimeout"))
            writer.uint32(/* id 15, wireType 0 =*/120).int32(message.UserCommandTimeout);
        if (message.PlatformTimeout != null && Object.hasOwnProperty.call(message, "PlatformTimeout"))
            writer.uint32(/* id 16, wireType 0 =*/128).int32(message.PlatformTimeout);
        if (message.BackgroudSyncInterval != null && Object.hasOwnProperty.call(message, "BackgroudSyncInterval"))
            writer.uint32(/* id 17, wireType 0 =*/136).int32(message.BackgroudSyncInterval);
        if (message.ClusterState != null && Object.hasOwnProperty.call(message, "ClusterState"))
            writer.uint32(/* id 18, wireType 0 =*/144).int32(message.ClusterState);
        if (message.DomainName != null && Object.hasOwnProperty.call(message, "DomainName"))
            writer.uint32(/* id 19, wireType 2 =*/154).bytes(message.DomainName);
        if (message.HostName != null && Object.hasOwnProperty.call(message, "HostName"))
            writer.uint32(/* id 20, wireType 2 =*/162).bytes(message.HostName);
        if (message.BackupServer != null && Object.hasOwnProperty.call(message, "BackupServer"))
            writer.uint32(/* id 21, wireType 2 =*/170).bytes(message.BackupServer);
        if (message.BackupRole != null && Object.hasOwnProperty.call(message, "BackupRole"))
            writer.uint32(/* id 22, wireType 2 =*/178).bytes(message.BackupRole);
        if (message.APIVersion != null && Object.hasOwnProperty.call(message, "APIVersion"))
            writer.uint32(/* id 23, wireType 0 =*/184).int32(message.APIVersion);
        if (message.ProtoFileVersion != null && Object.hasOwnProperty.call(message, "ProtoFileVersion"))
            writer.uint32(/* id 24, wireType 0 =*/192).int32(message.ProtoFileVersion);
        if (message.HasProductTour != null && Object.hasOwnProperty.call(message, "HasProductTour"))
            writer.uint32(/* id 25, wireType 0 =*/200).int32(message.HasProductTour);
        if (message.HasDocumentation != null && Object.hasOwnProperty.call(message, "HasDocumentation"))
            writer.uint32(/* id 26, wireType 0 =*/208).int32(message.HasDocumentation);
        return writer;
    };

    /**
     * Encodes the specified Proto_ServerProbe message, length delimited. Does not implicitly {@link Proto_ServerProbe.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ServerProbe
     * @static
     * @param {IProto_ServerProbe} message Proto_ServerProbe message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ServerProbe.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ServerProbe message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ServerProbe
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ServerProbe} Proto_ServerProbe
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ServerProbe.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ServerProbe();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ServerCode = reader.bytes();
                break;
            case 2:
                message.Version = reader.bytes();
                break;
            case 3:
                message.DomainState = reader.int64();
                break;
            case 4:
                message.Project = reader.bytes();
                break;
            case 5:
                message.ProductName = reader.bytes();
                break;
            case 6:
                message.PlatformVersion = reader.bytes();
                break;
            case 7:
                message.ProjectVersion = reader.bytes();
                break;
            case 8:
                message.ProductVersion = reader.bytes();
                break;
            case 9:
                message.LicenseState = reader.bytes();
                break;
            case 10:
                message.ExpiredIn = reader.int64();
                break;
            case 11:
                message.AuthenticationMode = reader.int64();
                break;
            case 12:
                message.ServerLabel = reader.bytes();
                break;
            case 13:
                message.ServerICON = reader.bytes();
                break;
            case 14:
                message.serverinstanceid = reader.int32();
                break;
            case 15:
                message.UserCommandTimeout = reader.int32();
                break;
            case 16:
                message.PlatformTimeout = reader.int32();
                break;
            case 17:
                message.BackgroudSyncInterval = reader.int32();
                break;
            case 18:
                message.ClusterState = reader.int32();
                break;
            case 19:
                message.DomainName = reader.bytes();
                break;
            case 20:
                message.HostName = reader.bytes();
                break;
            case 21:
                message.BackupServer = reader.bytes();
                break;
            case 22:
                message.BackupRole = reader.bytes();
                break;
            case 23:
                message.APIVersion = reader.int32();
                break;
            case 24:
                message.ProtoFileVersion = reader.int32();
                break;
            case 25:
                message.HasProductTour = reader.int32();
                break;
            case 26:
                message.HasDocumentation = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ServerProbe message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ServerProbe
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ServerProbe} Proto_ServerProbe
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ServerProbe.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ServerProbe message.
     * @function verify
     * @memberof Proto_ServerProbe
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ServerProbe.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ServerCode != null && message.hasOwnProperty("ServerCode"))
            if (!(message.ServerCode && typeof message.ServerCode.length === "number" || $util.isString(message.ServerCode)))
                return "ServerCode: buffer expected";
        if (message.Version != null && message.hasOwnProperty("Version"))
            if (!(message.Version && typeof message.Version.length === "number" || $util.isString(message.Version)))
                return "Version: buffer expected";
        if (message.DomainState != null && message.hasOwnProperty("DomainState"))
            if (!$util.isInteger(message.DomainState) && !(message.DomainState && $util.isInteger(message.DomainState.low) && $util.isInteger(message.DomainState.high)))
                return "DomainState: integer|Long expected";
        if (message.Project != null && message.hasOwnProperty("Project"))
            if (!(message.Project && typeof message.Project.length === "number" || $util.isString(message.Project)))
                return "Project: buffer expected";
        if (message.ProductName != null && message.hasOwnProperty("ProductName"))
            if (!(message.ProductName && typeof message.ProductName.length === "number" || $util.isString(message.ProductName)))
                return "ProductName: buffer expected";
        if (message.PlatformVersion != null && message.hasOwnProperty("PlatformVersion"))
            if (!(message.PlatformVersion && typeof message.PlatformVersion.length === "number" || $util.isString(message.PlatformVersion)))
                return "PlatformVersion: buffer expected";
        if (message.ProjectVersion != null && message.hasOwnProperty("ProjectVersion"))
            if (!(message.ProjectVersion && typeof message.ProjectVersion.length === "number" || $util.isString(message.ProjectVersion)))
                return "ProjectVersion: buffer expected";
        if (message.ProductVersion != null && message.hasOwnProperty("ProductVersion"))
            if (!(message.ProductVersion && typeof message.ProductVersion.length === "number" || $util.isString(message.ProductVersion)))
                return "ProductVersion: buffer expected";
        if (message.LicenseState != null && message.hasOwnProperty("LicenseState"))
            if (!(message.LicenseState && typeof message.LicenseState.length === "number" || $util.isString(message.LicenseState)))
                return "LicenseState: buffer expected";
        if (message.ExpiredIn != null && message.hasOwnProperty("ExpiredIn"))
            if (!$util.isInteger(message.ExpiredIn) && !(message.ExpiredIn && $util.isInteger(message.ExpiredIn.low) && $util.isInteger(message.ExpiredIn.high)))
                return "ExpiredIn: integer|Long expected";
        if (message.AuthenticationMode != null && message.hasOwnProperty("AuthenticationMode"))
            if (!$util.isInteger(message.AuthenticationMode) && !(message.AuthenticationMode && $util.isInteger(message.AuthenticationMode.low) && $util.isInteger(message.AuthenticationMode.high)))
                return "AuthenticationMode: integer|Long expected";
        if (message.ServerLabel != null && message.hasOwnProperty("ServerLabel"))
            if (!(message.ServerLabel && typeof message.ServerLabel.length === "number" || $util.isString(message.ServerLabel)))
                return "ServerLabel: buffer expected";
        if (message.ServerICON != null && message.hasOwnProperty("ServerICON"))
            if (!(message.ServerICON && typeof message.ServerICON.length === "number" || $util.isString(message.ServerICON)))
                return "ServerICON: buffer expected";
        if (message.serverinstanceid != null && message.hasOwnProperty("serverinstanceid"))
            if (!$util.isInteger(message.serverinstanceid))
                return "serverinstanceid: integer expected";
        if (message.UserCommandTimeout != null && message.hasOwnProperty("UserCommandTimeout"))
            if (!$util.isInteger(message.UserCommandTimeout))
                return "UserCommandTimeout: integer expected";
        if (message.PlatformTimeout != null && message.hasOwnProperty("PlatformTimeout"))
            if (!$util.isInteger(message.PlatformTimeout))
                return "PlatformTimeout: integer expected";
        if (message.BackgroudSyncInterval != null && message.hasOwnProperty("BackgroudSyncInterval"))
            if (!$util.isInteger(message.BackgroudSyncInterval))
                return "BackgroudSyncInterval: integer expected";
        if (message.ClusterState != null && message.hasOwnProperty("ClusterState"))
            if (!$util.isInteger(message.ClusterState))
                return "ClusterState: integer expected";
        if (message.DomainName != null && message.hasOwnProperty("DomainName"))
            if (!(message.DomainName && typeof message.DomainName.length === "number" || $util.isString(message.DomainName)))
                return "DomainName: buffer expected";
        if (message.HostName != null && message.hasOwnProperty("HostName"))
            if (!(message.HostName && typeof message.HostName.length === "number" || $util.isString(message.HostName)))
                return "HostName: buffer expected";
        if (message.BackupServer != null && message.hasOwnProperty("BackupServer"))
            if (!(message.BackupServer && typeof message.BackupServer.length === "number" || $util.isString(message.BackupServer)))
                return "BackupServer: buffer expected";
        if (message.BackupRole != null && message.hasOwnProperty("BackupRole"))
            if (!(message.BackupRole && typeof message.BackupRole.length === "number" || $util.isString(message.BackupRole)))
                return "BackupRole: buffer expected";
        if (message.APIVersion != null && message.hasOwnProperty("APIVersion"))
            if (!$util.isInteger(message.APIVersion))
                return "APIVersion: integer expected";
        if (message.ProtoFileVersion != null && message.hasOwnProperty("ProtoFileVersion"))
            if (!$util.isInteger(message.ProtoFileVersion))
                return "ProtoFileVersion: integer expected";
        if (message.HasProductTour != null && message.hasOwnProperty("HasProductTour"))
            if (!$util.isInteger(message.HasProductTour))
                return "HasProductTour: integer expected";
        if (message.HasDocumentation != null && message.hasOwnProperty("HasDocumentation"))
            if (!$util.isInteger(message.HasDocumentation))
                return "HasDocumentation: integer expected";
        return null;
    };

    /**
     * Creates a Proto_ServerProbe message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ServerProbe
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ServerProbe} Proto_ServerProbe
     */
    Proto_ServerProbe.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ServerProbe)
            return object;
        var message = new $root.Proto_ServerProbe();
        if (object.ServerCode != null)
            if (typeof object.ServerCode === "string")
                $util.base64.decode(object.ServerCode, message.ServerCode = $util.newBuffer($util.base64.length(object.ServerCode)), 0);
            else if (object.ServerCode.length)
                message.ServerCode = object.ServerCode;
        if (object.Version != null)
            if (typeof object.Version === "string")
                $util.base64.decode(object.Version, message.Version = $util.newBuffer($util.base64.length(object.Version)), 0);
            else if (object.Version.length)
                message.Version = object.Version;
        if (object.DomainState != null)
            if ($util.Long)
                (message.DomainState = $util.Long.fromValue(object.DomainState)).unsigned = false;
            else if (typeof object.DomainState === "string")
                message.DomainState = parseInt(object.DomainState, 10);
            else if (typeof object.DomainState === "number")
                message.DomainState = object.DomainState;
            else if (typeof object.DomainState === "object")
                message.DomainState = new $util.LongBits(object.DomainState.low >>> 0, object.DomainState.high >>> 0).toNumber();
        if (object.Project != null)
            if (typeof object.Project === "string")
                $util.base64.decode(object.Project, message.Project = $util.newBuffer($util.base64.length(object.Project)), 0);
            else if (object.Project.length)
                message.Project = object.Project;
        if (object.ProductName != null)
            if (typeof object.ProductName === "string")
                $util.base64.decode(object.ProductName, message.ProductName = $util.newBuffer($util.base64.length(object.ProductName)), 0);
            else if (object.ProductName.length)
                message.ProductName = object.ProductName;
        if (object.PlatformVersion != null)
            if (typeof object.PlatformVersion === "string")
                $util.base64.decode(object.PlatformVersion, message.PlatformVersion = $util.newBuffer($util.base64.length(object.PlatformVersion)), 0);
            else if (object.PlatformVersion.length)
                message.PlatformVersion = object.PlatformVersion;
        if (object.ProjectVersion != null)
            if (typeof object.ProjectVersion === "string")
                $util.base64.decode(object.ProjectVersion, message.ProjectVersion = $util.newBuffer($util.base64.length(object.ProjectVersion)), 0);
            else if (object.ProjectVersion.length)
                message.ProjectVersion = object.ProjectVersion;
        if (object.ProductVersion != null)
            if (typeof object.ProductVersion === "string")
                $util.base64.decode(object.ProductVersion, message.ProductVersion = $util.newBuffer($util.base64.length(object.ProductVersion)), 0);
            else if (object.ProductVersion.length)
                message.ProductVersion = object.ProductVersion;
        if (object.LicenseState != null)
            if (typeof object.LicenseState === "string")
                $util.base64.decode(object.LicenseState, message.LicenseState = $util.newBuffer($util.base64.length(object.LicenseState)), 0);
            else if (object.LicenseState.length)
                message.LicenseState = object.LicenseState;
        if (object.ExpiredIn != null)
            if ($util.Long)
                (message.ExpiredIn = $util.Long.fromValue(object.ExpiredIn)).unsigned = false;
            else if (typeof object.ExpiredIn === "string")
                message.ExpiredIn = parseInt(object.ExpiredIn, 10);
            else if (typeof object.ExpiredIn === "number")
                message.ExpiredIn = object.ExpiredIn;
            else if (typeof object.ExpiredIn === "object")
                message.ExpiredIn = new $util.LongBits(object.ExpiredIn.low >>> 0, object.ExpiredIn.high >>> 0).toNumber();
        if (object.AuthenticationMode != null)
            if ($util.Long)
                (message.AuthenticationMode = $util.Long.fromValue(object.AuthenticationMode)).unsigned = false;
            else if (typeof object.AuthenticationMode === "string")
                message.AuthenticationMode = parseInt(object.AuthenticationMode, 10);
            else if (typeof object.AuthenticationMode === "number")
                message.AuthenticationMode = object.AuthenticationMode;
            else if (typeof object.AuthenticationMode === "object")
                message.AuthenticationMode = new $util.LongBits(object.AuthenticationMode.low >>> 0, object.AuthenticationMode.high >>> 0).toNumber();
        if (object.ServerLabel != null)
            if (typeof object.ServerLabel === "string")
                $util.base64.decode(object.ServerLabel, message.ServerLabel = $util.newBuffer($util.base64.length(object.ServerLabel)), 0);
            else if (object.ServerLabel.length)
                message.ServerLabel = object.ServerLabel;
        if (object.ServerICON != null)
            if (typeof object.ServerICON === "string")
                $util.base64.decode(object.ServerICON, message.ServerICON = $util.newBuffer($util.base64.length(object.ServerICON)), 0);
            else if (object.ServerICON.length)
                message.ServerICON = object.ServerICON;
        if (object.serverinstanceid != null)
            message.serverinstanceid = object.serverinstanceid | 0;
        if (object.UserCommandTimeout != null)
            message.UserCommandTimeout = object.UserCommandTimeout | 0;
        if (object.PlatformTimeout != null)
            message.PlatformTimeout = object.PlatformTimeout | 0;
        if (object.BackgroudSyncInterval != null)
            message.BackgroudSyncInterval = object.BackgroudSyncInterval | 0;
        if (object.ClusterState != null)
            message.ClusterState = object.ClusterState | 0;
        if (object.DomainName != null)
            if (typeof object.DomainName === "string")
                $util.base64.decode(object.DomainName, message.DomainName = $util.newBuffer($util.base64.length(object.DomainName)), 0);
            else if (object.DomainName.length)
                message.DomainName = object.DomainName;
        if (object.HostName != null)
            if (typeof object.HostName === "string")
                $util.base64.decode(object.HostName, message.HostName = $util.newBuffer($util.base64.length(object.HostName)), 0);
            else if (object.HostName.length)
                message.HostName = object.HostName;
        if (object.BackupServer != null)
            if (typeof object.BackupServer === "string")
                $util.base64.decode(object.BackupServer, message.BackupServer = $util.newBuffer($util.base64.length(object.BackupServer)), 0);
            else if (object.BackupServer.length)
                message.BackupServer = object.BackupServer;
        if (object.BackupRole != null)
            if (typeof object.BackupRole === "string")
                $util.base64.decode(object.BackupRole, message.BackupRole = $util.newBuffer($util.base64.length(object.BackupRole)), 0);
            else if (object.BackupRole.length)
                message.BackupRole = object.BackupRole;
        if (object.APIVersion != null)
            message.APIVersion = object.APIVersion | 0;
        if (object.ProtoFileVersion != null)
            message.ProtoFileVersion = object.ProtoFileVersion | 0;
        if (object.HasProductTour != null)
            message.HasProductTour = object.HasProductTour | 0;
        if (object.HasDocumentation != null)
            message.HasDocumentation = object.HasDocumentation | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_ServerProbe message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ServerProbe
     * @static
     * @param {Proto_ServerProbe} message Proto_ServerProbe
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ServerProbe.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ServerCode = "";
            else {
                object.ServerCode = [];
                if (options.bytes !== Array)
                    object.ServerCode = $util.newBuffer(object.ServerCode);
            }
            if (options.bytes === String)
                object.Version = "";
            else {
                object.Version = [];
                if (options.bytes !== Array)
                    object.Version = $util.newBuffer(object.Version);
            }
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.DomainState = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.DomainState = options.longs === String ? "0" : 0;
            if (options.bytes === String)
                object.Project = "";
            else {
                object.Project = [];
                if (options.bytes !== Array)
                    object.Project = $util.newBuffer(object.Project);
            }
            if (options.bytes === String)
                object.ProductName = "";
            else {
                object.ProductName = [];
                if (options.bytes !== Array)
                    object.ProductName = $util.newBuffer(object.ProductName);
            }
            if (options.bytes === String)
                object.PlatformVersion = "";
            else {
                object.PlatformVersion = [];
                if (options.bytes !== Array)
                    object.PlatformVersion = $util.newBuffer(object.PlatformVersion);
            }
            if (options.bytes === String)
                object.ProjectVersion = "";
            else {
                object.ProjectVersion = [];
                if (options.bytes !== Array)
                    object.ProjectVersion = $util.newBuffer(object.ProjectVersion);
            }
            if (options.bytes === String)
                object.ProductVersion = "";
            else {
                object.ProductVersion = [];
                if (options.bytes !== Array)
                    object.ProductVersion = $util.newBuffer(object.ProductVersion);
            }
            if (options.bytes === String)
                object.LicenseState = "";
            else {
                object.LicenseState = [];
                if (options.bytes !== Array)
                    object.LicenseState = $util.newBuffer(object.LicenseState);
            }
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.ExpiredIn = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.ExpiredIn = options.longs === String ? "0" : 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.AuthenticationMode = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.AuthenticationMode = options.longs === String ? "0" : 0;
            if (options.bytes === String)
                object.ServerLabel = "";
            else {
                object.ServerLabel = [];
                if (options.bytes !== Array)
                    object.ServerLabel = $util.newBuffer(object.ServerLabel);
            }
            if (options.bytes === String)
                object.ServerICON = "";
            else {
                object.ServerICON = [];
                if (options.bytes !== Array)
                    object.ServerICON = $util.newBuffer(object.ServerICON);
            }
            object.serverinstanceid = 0;
            object.UserCommandTimeout = 0;
            object.PlatformTimeout = 0;
            object.BackgroudSyncInterval = 0;
            object.ClusterState = 0;
            if (options.bytes === String)
                object.DomainName = "";
            else {
                object.DomainName = [];
                if (options.bytes !== Array)
                    object.DomainName = $util.newBuffer(object.DomainName);
            }
            if (options.bytes === String)
                object.HostName = "";
            else {
                object.HostName = [];
                if (options.bytes !== Array)
                    object.HostName = $util.newBuffer(object.HostName);
            }
            if (options.bytes === String)
                object.BackupServer = "";
            else {
                object.BackupServer = [];
                if (options.bytes !== Array)
                    object.BackupServer = $util.newBuffer(object.BackupServer);
            }
            if (options.bytes === String)
                object.BackupRole = "";
            else {
                object.BackupRole = [];
                if (options.bytes !== Array)
                    object.BackupRole = $util.newBuffer(object.BackupRole);
            }
            object.APIVersion = 0;
            object.ProtoFileVersion = 0;
            object.HasProductTour = 0;
            object.HasDocumentation = 0;
        }
        if (message.ServerCode != null && message.hasOwnProperty("ServerCode"))
            object.ServerCode = options.bytes === String ? $util.base64.encode(message.ServerCode, 0, message.ServerCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ServerCode) : message.ServerCode;
        if (message.Version != null && message.hasOwnProperty("Version"))
            object.Version = options.bytes === String ? $util.base64.encode(message.Version, 0, message.Version.length) : options.bytes === Array ? Array.prototype.slice.call(message.Version) : message.Version;
        if (message.DomainState != null && message.hasOwnProperty("DomainState"))
            if (typeof message.DomainState === "number")
                object.DomainState = options.longs === String ? String(message.DomainState) : message.DomainState;
            else
                object.DomainState = options.longs === String ? $util.Long.prototype.toString.call(message.DomainState) : options.longs === Number ? new $util.LongBits(message.DomainState.low >>> 0, message.DomainState.high >>> 0).toNumber() : message.DomainState;
        if (message.Project != null && message.hasOwnProperty("Project"))
            object.Project = options.bytes === String ? $util.base64.encode(message.Project, 0, message.Project.length) : options.bytes === Array ? Array.prototype.slice.call(message.Project) : message.Project;
        if (message.ProductName != null && message.hasOwnProperty("ProductName"))
            object.ProductName = options.bytes === String ? $util.base64.encode(message.ProductName, 0, message.ProductName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProductName) : message.ProductName;
        if (message.PlatformVersion != null && message.hasOwnProperty("PlatformVersion"))
            object.PlatformVersion = options.bytes === String ? $util.base64.encode(message.PlatformVersion, 0, message.PlatformVersion.length) : options.bytes === Array ? Array.prototype.slice.call(message.PlatformVersion) : message.PlatformVersion;
        if (message.ProjectVersion != null && message.hasOwnProperty("ProjectVersion"))
            object.ProjectVersion = options.bytes === String ? $util.base64.encode(message.ProjectVersion, 0, message.ProjectVersion.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProjectVersion) : message.ProjectVersion;
        if (message.ProductVersion != null && message.hasOwnProperty("ProductVersion"))
            object.ProductVersion = options.bytes === String ? $util.base64.encode(message.ProductVersion, 0, message.ProductVersion.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProductVersion) : message.ProductVersion;
        if (message.LicenseState != null && message.hasOwnProperty("LicenseState"))
            object.LicenseState = options.bytes === String ? $util.base64.encode(message.LicenseState, 0, message.LicenseState.length) : options.bytes === Array ? Array.prototype.slice.call(message.LicenseState) : message.LicenseState;
        if (message.ExpiredIn != null && message.hasOwnProperty("ExpiredIn"))
            if (typeof message.ExpiredIn === "number")
                object.ExpiredIn = options.longs === String ? String(message.ExpiredIn) : message.ExpiredIn;
            else
                object.ExpiredIn = options.longs === String ? $util.Long.prototype.toString.call(message.ExpiredIn) : options.longs === Number ? new $util.LongBits(message.ExpiredIn.low >>> 0, message.ExpiredIn.high >>> 0).toNumber() : message.ExpiredIn;
        if (message.AuthenticationMode != null && message.hasOwnProperty("AuthenticationMode"))
            if (typeof message.AuthenticationMode === "number")
                object.AuthenticationMode = options.longs === String ? String(message.AuthenticationMode) : message.AuthenticationMode;
            else
                object.AuthenticationMode = options.longs === String ? $util.Long.prototype.toString.call(message.AuthenticationMode) : options.longs === Number ? new $util.LongBits(message.AuthenticationMode.low >>> 0, message.AuthenticationMode.high >>> 0).toNumber() : message.AuthenticationMode;
        if (message.ServerLabel != null && message.hasOwnProperty("ServerLabel"))
            object.ServerLabel = options.bytes === String ? $util.base64.encode(message.ServerLabel, 0, message.ServerLabel.length) : options.bytes === Array ? Array.prototype.slice.call(message.ServerLabel) : message.ServerLabel;
        if (message.ServerICON != null && message.hasOwnProperty("ServerICON"))
            object.ServerICON = options.bytes === String ? $util.base64.encode(message.ServerICON, 0, message.ServerICON.length) : options.bytes === Array ? Array.prototype.slice.call(message.ServerICON) : message.ServerICON;
        if (message.serverinstanceid != null && message.hasOwnProperty("serverinstanceid"))
            object.serverinstanceid = message.serverinstanceid;
        if (message.UserCommandTimeout != null && message.hasOwnProperty("UserCommandTimeout"))
            object.UserCommandTimeout = message.UserCommandTimeout;
        if (message.PlatformTimeout != null && message.hasOwnProperty("PlatformTimeout"))
            object.PlatformTimeout = message.PlatformTimeout;
        if (message.BackgroudSyncInterval != null && message.hasOwnProperty("BackgroudSyncInterval"))
            object.BackgroudSyncInterval = message.BackgroudSyncInterval;
        if (message.ClusterState != null && message.hasOwnProperty("ClusterState"))
            object.ClusterState = message.ClusterState;
        if (message.DomainName != null && message.hasOwnProperty("DomainName"))
            object.DomainName = options.bytes === String ? $util.base64.encode(message.DomainName, 0, message.DomainName.length) : options.bytes === Array ? Array.prototype.slice.call(message.DomainName) : message.DomainName;
        if (message.HostName != null && message.hasOwnProperty("HostName"))
            object.HostName = options.bytes === String ? $util.base64.encode(message.HostName, 0, message.HostName.length) : options.bytes === Array ? Array.prototype.slice.call(message.HostName) : message.HostName;
        if (message.BackupServer != null && message.hasOwnProperty("BackupServer"))
            object.BackupServer = options.bytes === String ? $util.base64.encode(message.BackupServer, 0, message.BackupServer.length) : options.bytes === Array ? Array.prototype.slice.call(message.BackupServer) : message.BackupServer;
        if (message.BackupRole != null && message.hasOwnProperty("BackupRole"))
            object.BackupRole = options.bytes === String ? $util.base64.encode(message.BackupRole, 0, message.BackupRole.length) : options.bytes === Array ? Array.prototype.slice.call(message.BackupRole) : message.BackupRole;
        if (message.APIVersion != null && message.hasOwnProperty("APIVersion"))
            object.APIVersion = message.APIVersion;
        if (message.ProtoFileVersion != null && message.hasOwnProperty("ProtoFileVersion"))
            object.ProtoFileVersion = message.ProtoFileVersion;
        if (message.HasProductTour != null && message.hasOwnProperty("HasProductTour"))
            object.HasProductTour = message.HasProductTour;
        if (message.HasDocumentation != null && message.hasOwnProperty("HasDocumentation"))
            object.HasDocumentation = message.HasDocumentation;
        return object;
    };

    /**
     * Converts this Proto_ServerProbe to JSON.
     * @function toJSON
     * @memberof Proto_ServerProbe
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ServerProbe.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ServerProbe;
})();

$root.Proto_ExternalDataList = (function() {

    /**
     * Properties of a Proto_ExternalDataList.
     * @exports IProto_ExternalDataList
     * @interface IProto_ExternalDataList
     * @property {Array.<IProto_ExternalData>|null} [ExternalData] Proto_ExternalDataList ExternalData
     */

    /**
     * Constructs a new Proto_ExternalDataList.
     * @exports Proto_ExternalDataList
     * @classdesc Represents a Proto_ExternalDataList.
     * @implements IProto_ExternalDataList
     * @constructor
     * @param {IProto_ExternalDataList=} [properties] Properties to set
     */
    function Proto_ExternalDataList(properties) {
        this.ExternalData = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ExternalDataList ExternalData.
     * @member {Array.<IProto_ExternalData>} ExternalData
     * @memberof Proto_ExternalDataList
     * @instance
     */
    Proto_ExternalDataList.prototype.ExternalData = $util.emptyArray;

    /**
     * Creates a new Proto_ExternalDataList instance using the specified properties.
     * @function create
     * @memberof Proto_ExternalDataList
     * @static
     * @param {IProto_ExternalDataList=} [properties] Properties to set
     * @returns {Proto_ExternalDataList} Proto_ExternalDataList instance
     */
    Proto_ExternalDataList.create = function create(properties) {
        return new Proto_ExternalDataList(properties);
    };

    /**
     * Encodes the specified Proto_ExternalDataList message. Does not implicitly {@link Proto_ExternalDataList.verify|verify} messages.
     * @function encode
     * @memberof Proto_ExternalDataList
     * @static
     * @param {IProto_ExternalDataList} message Proto_ExternalDataList message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ExternalDataList.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ExternalData != null && message.ExternalData.length)
            for (var i = 0; i < message.ExternalData.length; ++i)
                $root.Proto_ExternalData.encode(message.ExternalData[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_ExternalDataList message, length delimited. Does not implicitly {@link Proto_ExternalDataList.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ExternalDataList
     * @static
     * @param {IProto_ExternalDataList} message Proto_ExternalDataList message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ExternalDataList.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ExternalDataList message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ExternalDataList
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ExternalDataList} Proto_ExternalDataList
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ExternalDataList.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ExternalDataList();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.ExternalData && message.ExternalData.length))
                    message.ExternalData = [];
                message.ExternalData.push($root.Proto_ExternalData.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ExternalDataList message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ExternalDataList
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ExternalDataList} Proto_ExternalDataList
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ExternalDataList.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ExternalDataList message.
     * @function verify
     * @memberof Proto_ExternalDataList
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ExternalDataList.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ExternalData != null && message.hasOwnProperty("ExternalData")) {
            if (!Array.isArray(message.ExternalData))
                return "ExternalData: array expected";
            for (var i = 0; i < message.ExternalData.length; ++i) {
                var error = $root.Proto_ExternalData.verify(message.ExternalData[i]);
                if (error)
                    return "ExternalData." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_ExternalDataList message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ExternalDataList
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ExternalDataList} Proto_ExternalDataList
     */
    Proto_ExternalDataList.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ExternalDataList)
            return object;
        var message = new $root.Proto_ExternalDataList();
        if (object.ExternalData) {
            if (!Array.isArray(object.ExternalData))
                throw TypeError(".Proto_ExternalDataList.ExternalData: array expected");
            message.ExternalData = [];
            for (var i = 0; i < object.ExternalData.length; ++i) {
                if (typeof object.ExternalData[i] !== "object")
                    throw TypeError(".Proto_ExternalDataList.ExternalData: object expected");
                message.ExternalData[i] = $root.Proto_ExternalData.fromObject(object.ExternalData[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_ExternalDataList message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ExternalDataList
     * @static
     * @param {Proto_ExternalDataList} message Proto_ExternalDataList
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ExternalDataList.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.ExternalData = [];
        if (message.ExternalData && message.ExternalData.length) {
            object.ExternalData = [];
            for (var j = 0; j < message.ExternalData.length; ++j)
                object.ExternalData[j] = $root.Proto_ExternalData.toObject(message.ExternalData[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_ExternalDataList to JSON.
     * @function toJSON
     * @memberof Proto_ExternalDataList
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ExternalDataList.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ExternalDataList;
})();

$root.Proto_ExternalData = (function() {

    /**
     * Properties of a Proto_ExternalData.
     * @exports IProto_ExternalData
     * @interface IProto_ExternalData
     * @property {Uint8Array|null} [Path] Proto_ExternalData Path
     * @property {Uint8Array|null} [Type] Proto_ExternalData Type
     * @property {Uint8Array|null} [Name] Proto_ExternalData Name
     * @property {Uint8Array|null} [Data] Proto_ExternalData Data
     * @property {Uint8Array|null} [Label] Proto_ExternalData Label
     * @property {number|Long|null} [VersionID] Proto_ExternalData VersionID
     * @property {number|Long|null} [BaseVersionID] Proto_ExternalData BaseVersionID
     * @property {number|Long|null} [BaseVersionLevel] Proto_ExternalData BaseVersionLevel
     * @property {Uint8Array|null} [ModifiedBy] Proto_ExternalData ModifiedBy
     * @property {number|Long|null} [ModificationDate] Proto_ExternalData ModificationDate
     * @property {number|null} [SourceDB] Proto_ExternalData SourceDB
     * @property {Uint8Array|null} [GUITag] Proto_ExternalData GUITag
     * @property {Uint8Array|null} [ProcessTag] Proto_ExternalData ProcessTag
     * @property {Uint8Array|null} [ActionTag] Proto_ExternalData ActionTag
     * @property {number|null} [DeletedFlag] Proto_ExternalData DeletedFlag
     * @property {Uint8Array|null} [XML] Proto_ExternalData XML
     * @property {Uint8Array|null} [Image] Proto_ExternalData Image
     * @property {Uint8Array|null} [RelationInfo] Proto_ExternalData RelationInfo
     * @property {number|null} [State] Proto_ExternalData State
     */

    /**
     * Constructs a new Proto_ExternalData.
     * @exports Proto_ExternalData
     * @classdesc Represents a Proto_ExternalData.
     * @implements IProto_ExternalData
     * @constructor
     * @param {IProto_ExternalData=} [properties] Properties to set
     */
    function Proto_ExternalData(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ExternalData Path.
     * @member {Uint8Array} Path
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.Path = $util.newBuffer([]);

    /**
     * Proto_ExternalData Type.
     * @member {Uint8Array} Type
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.Type = $util.newBuffer([]);

    /**
     * Proto_ExternalData Name.
     * @member {Uint8Array} Name
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.Name = $util.newBuffer([]);

    /**
     * Proto_ExternalData Data.
     * @member {Uint8Array} Data
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.Data = $util.newBuffer([]);

    /**
     * Proto_ExternalData Label.
     * @member {Uint8Array} Label
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.Label = $util.newBuffer([]);

    /**
     * Proto_ExternalData VersionID.
     * @member {number|Long} VersionID
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.VersionID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ExternalData BaseVersionID.
     * @member {number|Long} BaseVersionID
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.BaseVersionID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ExternalData BaseVersionLevel.
     * @member {number|Long} BaseVersionLevel
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.BaseVersionLevel = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ExternalData ModifiedBy.
     * @member {Uint8Array} ModifiedBy
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.ModifiedBy = $util.newBuffer([]);

    /**
     * Proto_ExternalData ModificationDate.
     * @member {number|Long} ModificationDate
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.ModificationDate = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ExternalData SourceDB.
     * @member {number} SourceDB
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.SourceDB = 0;

    /**
     * Proto_ExternalData GUITag.
     * @member {Uint8Array} GUITag
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.GUITag = $util.newBuffer([]);

    /**
     * Proto_ExternalData ProcessTag.
     * @member {Uint8Array} ProcessTag
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.ProcessTag = $util.newBuffer([]);

    /**
     * Proto_ExternalData ActionTag.
     * @member {Uint8Array} ActionTag
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.ActionTag = $util.newBuffer([]);

    /**
     * Proto_ExternalData DeletedFlag.
     * @member {number} DeletedFlag
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.DeletedFlag = 0;

    /**
     * Proto_ExternalData XML.
     * @member {Uint8Array} XML
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.XML = $util.newBuffer([]);

    /**
     * Proto_ExternalData Image.
     * @member {Uint8Array} Image
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.Image = $util.newBuffer([]);

    /**
     * Proto_ExternalData RelationInfo.
     * @member {Uint8Array} RelationInfo
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.RelationInfo = $util.newBuffer([]);

    /**
     * Proto_ExternalData State.
     * @member {number} State
     * @memberof Proto_ExternalData
     * @instance
     */
    Proto_ExternalData.prototype.State = 0;

    /**
     * Creates a new Proto_ExternalData instance using the specified properties.
     * @function create
     * @memberof Proto_ExternalData
     * @static
     * @param {IProto_ExternalData=} [properties] Properties to set
     * @returns {Proto_ExternalData} Proto_ExternalData instance
     */
    Proto_ExternalData.create = function create(properties) {
        return new Proto_ExternalData(properties);
    };

    /**
     * Encodes the specified Proto_ExternalData message. Does not implicitly {@link Proto_ExternalData.verify|verify} messages.
     * @function encode
     * @memberof Proto_ExternalData
     * @static
     * @param {IProto_ExternalData} message Proto_ExternalData message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ExternalData.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Path != null && Object.hasOwnProperty.call(message, "Path"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Path);
        if (message.Type != null && Object.hasOwnProperty.call(message, "Type"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.Type);
        if (message.Name != null && Object.hasOwnProperty.call(message, "Name"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.Name);
        if (message.Data != null && Object.hasOwnProperty.call(message, "Data"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.Data);
        if (message.Label != null && Object.hasOwnProperty.call(message, "Label"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.Label);
        if (message.VersionID != null && Object.hasOwnProperty.call(message, "VersionID"))
            writer.uint32(/* id 6, wireType 0 =*/48).int64(message.VersionID);
        if (message.BaseVersionID != null && Object.hasOwnProperty.call(message, "BaseVersionID"))
            writer.uint32(/* id 7, wireType 0 =*/56).int64(message.BaseVersionID);
        if (message.BaseVersionLevel != null && Object.hasOwnProperty.call(message, "BaseVersionLevel"))
            writer.uint32(/* id 8, wireType 0 =*/64).int64(message.BaseVersionLevel);
        if (message.ModifiedBy != null && Object.hasOwnProperty.call(message, "ModifiedBy"))
            writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.ModifiedBy);
        if (message.ModificationDate != null && Object.hasOwnProperty.call(message, "ModificationDate"))
            writer.uint32(/* id 10, wireType 0 =*/80).int64(message.ModificationDate);
        if (message.SourceDB != null && Object.hasOwnProperty.call(message, "SourceDB"))
            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.SourceDB);
        if (message.GUITag != null && Object.hasOwnProperty.call(message, "GUITag"))
            writer.uint32(/* id 12, wireType 2 =*/98).bytes(message.GUITag);
        if (message.ProcessTag != null && Object.hasOwnProperty.call(message, "ProcessTag"))
            writer.uint32(/* id 13, wireType 2 =*/106).bytes(message.ProcessTag);
        if (message.ActionTag != null && Object.hasOwnProperty.call(message, "ActionTag"))
            writer.uint32(/* id 14, wireType 2 =*/114).bytes(message.ActionTag);
        if (message.DeletedFlag != null && Object.hasOwnProperty.call(message, "DeletedFlag"))
            writer.uint32(/* id 15, wireType 0 =*/120).int32(message.DeletedFlag);
        if (message.XML != null && Object.hasOwnProperty.call(message, "XML"))
            writer.uint32(/* id 16, wireType 2 =*/130).bytes(message.XML);
        if (message.Image != null && Object.hasOwnProperty.call(message, "Image"))
            writer.uint32(/* id 17, wireType 2 =*/138).bytes(message.Image);
        if (message.RelationInfo != null && Object.hasOwnProperty.call(message, "RelationInfo"))
            writer.uint32(/* id 18, wireType 2 =*/146).bytes(message.RelationInfo);
        if (message.State != null && Object.hasOwnProperty.call(message, "State"))
            writer.uint32(/* id 20, wireType 0 =*/160).int32(message.State);
        return writer;
    };

    /**
     * Encodes the specified Proto_ExternalData message, length delimited. Does not implicitly {@link Proto_ExternalData.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ExternalData
     * @static
     * @param {IProto_ExternalData} message Proto_ExternalData message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ExternalData.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ExternalData message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ExternalData
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ExternalData} Proto_ExternalData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ExternalData.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ExternalData();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.Path = reader.bytes();
                break;
            case 2:
                message.Type = reader.bytes();
                break;
            case 3:
                message.Name = reader.bytes();
                break;
            case 4:
                message.Data = reader.bytes();
                break;
            case 5:
                message.Label = reader.bytes();
                break;
            case 6:
                message.VersionID = reader.int64();
                break;
            case 7:
                message.BaseVersionID = reader.int64();
                break;
            case 8:
                message.BaseVersionLevel = reader.int64();
                break;
            case 9:
                message.ModifiedBy = reader.bytes();
                break;
            case 10:
                message.ModificationDate = reader.int64();
                break;
            case 11:
                message.SourceDB = reader.int32();
                break;
            case 12:
                message.GUITag = reader.bytes();
                break;
            case 13:
                message.ProcessTag = reader.bytes();
                break;
            case 14:
                message.ActionTag = reader.bytes();
                break;
            case 15:
                message.DeletedFlag = reader.int32();
                break;
            case 16:
                message.XML = reader.bytes();
                break;
            case 17:
                message.Image = reader.bytes();
                break;
            case 18:
                message.RelationInfo = reader.bytes();
                break;
            case 20:
                message.State = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ExternalData message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ExternalData
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ExternalData} Proto_ExternalData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ExternalData.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ExternalData message.
     * @function verify
     * @memberof Proto_ExternalData
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ExternalData.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Path != null && message.hasOwnProperty("Path"))
            if (!(message.Path && typeof message.Path.length === "number" || $util.isString(message.Path)))
                return "Path: buffer expected";
        if (message.Type != null && message.hasOwnProperty("Type"))
            if (!(message.Type && typeof message.Type.length === "number" || $util.isString(message.Type)))
                return "Type: buffer expected";
        if (message.Name != null && message.hasOwnProperty("Name"))
            if (!(message.Name && typeof message.Name.length === "number" || $util.isString(message.Name)))
                return "Name: buffer expected";
        if (message.Data != null && message.hasOwnProperty("Data"))
            if (!(message.Data && typeof message.Data.length === "number" || $util.isString(message.Data)))
                return "Data: buffer expected";
        if (message.Label != null && message.hasOwnProperty("Label"))
            if (!(message.Label && typeof message.Label.length === "number" || $util.isString(message.Label)))
                return "Label: buffer expected";
        if (message.VersionID != null && message.hasOwnProperty("VersionID"))
            if (!$util.isInteger(message.VersionID) && !(message.VersionID && $util.isInteger(message.VersionID.low) && $util.isInteger(message.VersionID.high)))
                return "VersionID: integer|Long expected";
        if (message.BaseVersionID != null && message.hasOwnProperty("BaseVersionID"))
            if (!$util.isInteger(message.BaseVersionID) && !(message.BaseVersionID && $util.isInteger(message.BaseVersionID.low) && $util.isInteger(message.BaseVersionID.high)))
                return "BaseVersionID: integer|Long expected";
        if (message.BaseVersionLevel != null && message.hasOwnProperty("BaseVersionLevel"))
            if (!$util.isInteger(message.BaseVersionLevel) && !(message.BaseVersionLevel && $util.isInteger(message.BaseVersionLevel.low) && $util.isInteger(message.BaseVersionLevel.high)))
                return "BaseVersionLevel: integer|Long expected";
        if (message.ModifiedBy != null && message.hasOwnProperty("ModifiedBy"))
            if (!(message.ModifiedBy && typeof message.ModifiedBy.length === "number" || $util.isString(message.ModifiedBy)))
                return "ModifiedBy: buffer expected";
        if (message.ModificationDate != null && message.hasOwnProperty("ModificationDate"))
            if (!$util.isInteger(message.ModificationDate) && !(message.ModificationDate && $util.isInteger(message.ModificationDate.low) && $util.isInteger(message.ModificationDate.high)))
                return "ModificationDate: integer|Long expected";
        if (message.SourceDB != null && message.hasOwnProperty("SourceDB"))
            if (!$util.isInteger(message.SourceDB))
                return "SourceDB: integer expected";
        if (message.GUITag != null && message.hasOwnProperty("GUITag"))
            if (!(message.GUITag && typeof message.GUITag.length === "number" || $util.isString(message.GUITag)))
                return "GUITag: buffer expected";
        if (message.ProcessTag != null && message.hasOwnProperty("ProcessTag"))
            if (!(message.ProcessTag && typeof message.ProcessTag.length === "number" || $util.isString(message.ProcessTag)))
                return "ProcessTag: buffer expected";
        if (message.ActionTag != null && message.hasOwnProperty("ActionTag"))
            if (!(message.ActionTag && typeof message.ActionTag.length === "number" || $util.isString(message.ActionTag)))
                return "ActionTag: buffer expected";
        if (message.DeletedFlag != null && message.hasOwnProperty("DeletedFlag"))
            if (!$util.isInteger(message.DeletedFlag))
                return "DeletedFlag: integer expected";
        if (message.XML != null && message.hasOwnProperty("XML"))
            if (!(message.XML && typeof message.XML.length === "number" || $util.isString(message.XML)))
                return "XML: buffer expected";
        if (message.Image != null && message.hasOwnProperty("Image"))
            if (!(message.Image && typeof message.Image.length === "number" || $util.isString(message.Image)))
                return "Image: buffer expected";
        if (message.RelationInfo != null && message.hasOwnProperty("RelationInfo"))
            if (!(message.RelationInfo && typeof message.RelationInfo.length === "number" || $util.isString(message.RelationInfo)))
                return "RelationInfo: buffer expected";
        if (message.State != null && message.hasOwnProperty("State"))
            if (!$util.isInteger(message.State))
                return "State: integer expected";
        return null;
    };

    /**
     * Creates a Proto_ExternalData message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ExternalData
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ExternalData} Proto_ExternalData
     */
    Proto_ExternalData.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ExternalData)
            return object;
        var message = new $root.Proto_ExternalData();
        if (object.Path != null)
            if (typeof object.Path === "string")
                $util.base64.decode(object.Path, message.Path = $util.newBuffer($util.base64.length(object.Path)), 0);
            else if (object.Path.length)
                message.Path = object.Path;
        if (object.Type != null)
            if (typeof object.Type === "string")
                $util.base64.decode(object.Type, message.Type = $util.newBuffer($util.base64.length(object.Type)), 0);
            else if (object.Type.length)
                message.Type = object.Type;
        if (object.Name != null)
            if (typeof object.Name === "string")
                $util.base64.decode(object.Name, message.Name = $util.newBuffer($util.base64.length(object.Name)), 0);
            else if (object.Name.length)
                message.Name = object.Name;
        if (object.Data != null)
            if (typeof object.Data === "string")
                $util.base64.decode(object.Data, message.Data = $util.newBuffer($util.base64.length(object.Data)), 0);
            else if (object.Data.length)
                message.Data = object.Data;
        if (object.Label != null)
            if (typeof object.Label === "string")
                $util.base64.decode(object.Label, message.Label = $util.newBuffer($util.base64.length(object.Label)), 0);
            else if (object.Label.length)
                message.Label = object.Label;
        if (object.VersionID != null)
            if ($util.Long)
                (message.VersionID = $util.Long.fromValue(object.VersionID)).unsigned = false;
            else if (typeof object.VersionID === "string")
                message.VersionID = parseInt(object.VersionID, 10);
            else if (typeof object.VersionID === "number")
                message.VersionID = object.VersionID;
            else if (typeof object.VersionID === "object")
                message.VersionID = new $util.LongBits(object.VersionID.low >>> 0, object.VersionID.high >>> 0).toNumber();
        if (object.BaseVersionID != null)
            if ($util.Long)
                (message.BaseVersionID = $util.Long.fromValue(object.BaseVersionID)).unsigned = false;
            else if (typeof object.BaseVersionID === "string")
                message.BaseVersionID = parseInt(object.BaseVersionID, 10);
            else if (typeof object.BaseVersionID === "number")
                message.BaseVersionID = object.BaseVersionID;
            else if (typeof object.BaseVersionID === "object")
                message.BaseVersionID = new $util.LongBits(object.BaseVersionID.low >>> 0, object.BaseVersionID.high >>> 0).toNumber();
        if (object.BaseVersionLevel != null)
            if ($util.Long)
                (message.BaseVersionLevel = $util.Long.fromValue(object.BaseVersionLevel)).unsigned = false;
            else if (typeof object.BaseVersionLevel === "string")
                message.BaseVersionLevel = parseInt(object.BaseVersionLevel, 10);
            else if (typeof object.BaseVersionLevel === "number")
                message.BaseVersionLevel = object.BaseVersionLevel;
            else if (typeof object.BaseVersionLevel === "object")
                message.BaseVersionLevel = new $util.LongBits(object.BaseVersionLevel.low >>> 0, object.BaseVersionLevel.high >>> 0).toNumber();
        if (object.ModifiedBy != null)
            if (typeof object.ModifiedBy === "string")
                $util.base64.decode(object.ModifiedBy, message.ModifiedBy = $util.newBuffer($util.base64.length(object.ModifiedBy)), 0);
            else if (object.ModifiedBy.length)
                message.ModifiedBy = object.ModifiedBy;
        if (object.ModificationDate != null)
            if ($util.Long)
                (message.ModificationDate = $util.Long.fromValue(object.ModificationDate)).unsigned = false;
            else if (typeof object.ModificationDate === "string")
                message.ModificationDate = parseInt(object.ModificationDate, 10);
            else if (typeof object.ModificationDate === "number")
                message.ModificationDate = object.ModificationDate;
            else if (typeof object.ModificationDate === "object")
                message.ModificationDate = new $util.LongBits(object.ModificationDate.low >>> 0, object.ModificationDate.high >>> 0).toNumber();
        if (object.SourceDB != null)
            message.SourceDB = object.SourceDB | 0;
        if (object.GUITag != null)
            if (typeof object.GUITag === "string")
                $util.base64.decode(object.GUITag, message.GUITag = $util.newBuffer($util.base64.length(object.GUITag)), 0);
            else if (object.GUITag.length)
                message.GUITag = object.GUITag;
        if (object.ProcessTag != null)
            if (typeof object.ProcessTag === "string")
                $util.base64.decode(object.ProcessTag, message.ProcessTag = $util.newBuffer($util.base64.length(object.ProcessTag)), 0);
            else if (object.ProcessTag.length)
                message.ProcessTag = object.ProcessTag;
        if (object.ActionTag != null)
            if (typeof object.ActionTag === "string")
                $util.base64.decode(object.ActionTag, message.ActionTag = $util.newBuffer($util.base64.length(object.ActionTag)), 0);
            else if (object.ActionTag.length)
                message.ActionTag = object.ActionTag;
        if (object.DeletedFlag != null)
            message.DeletedFlag = object.DeletedFlag | 0;
        if (object.XML != null)
            if (typeof object.XML === "string")
                $util.base64.decode(object.XML, message.XML = $util.newBuffer($util.base64.length(object.XML)), 0);
            else if (object.XML.length)
                message.XML = object.XML;
        if (object.Image != null)
            if (typeof object.Image === "string")
                $util.base64.decode(object.Image, message.Image = $util.newBuffer($util.base64.length(object.Image)), 0);
            else if (object.Image.length)
                message.Image = object.Image;
        if (object.RelationInfo != null)
            if (typeof object.RelationInfo === "string")
                $util.base64.decode(object.RelationInfo, message.RelationInfo = $util.newBuffer($util.base64.length(object.RelationInfo)), 0);
            else if (object.RelationInfo.length)
                message.RelationInfo = object.RelationInfo;
        if (object.State != null)
            message.State = object.State | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_ExternalData message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ExternalData
     * @static
     * @param {Proto_ExternalData} message Proto_ExternalData
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ExternalData.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.Path = "";
            else {
                object.Path = [];
                if (options.bytes !== Array)
                    object.Path = $util.newBuffer(object.Path);
            }
            if (options.bytes === String)
                object.Type = "";
            else {
                object.Type = [];
                if (options.bytes !== Array)
                    object.Type = $util.newBuffer(object.Type);
            }
            if (options.bytes === String)
                object.Name = "";
            else {
                object.Name = [];
                if (options.bytes !== Array)
                    object.Name = $util.newBuffer(object.Name);
            }
            if (options.bytes === String)
                object.Data = "";
            else {
                object.Data = [];
                if (options.bytes !== Array)
                    object.Data = $util.newBuffer(object.Data);
            }
            if (options.bytes === String)
                object.Label = "";
            else {
                object.Label = [];
                if (options.bytes !== Array)
                    object.Label = $util.newBuffer(object.Label);
            }
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.VersionID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.VersionID = options.longs === String ? "0" : 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.BaseVersionID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.BaseVersionID = options.longs === String ? "0" : 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.BaseVersionLevel = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.BaseVersionLevel = options.longs === String ? "0" : 0;
            if (options.bytes === String)
                object.ModifiedBy = "";
            else {
                object.ModifiedBy = [];
                if (options.bytes !== Array)
                    object.ModifiedBy = $util.newBuffer(object.ModifiedBy);
            }
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.ModificationDate = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.ModificationDate = options.longs === String ? "0" : 0;
            object.SourceDB = 0;
            if (options.bytes === String)
                object.GUITag = "";
            else {
                object.GUITag = [];
                if (options.bytes !== Array)
                    object.GUITag = $util.newBuffer(object.GUITag);
            }
            if (options.bytes === String)
                object.ProcessTag = "";
            else {
                object.ProcessTag = [];
                if (options.bytes !== Array)
                    object.ProcessTag = $util.newBuffer(object.ProcessTag);
            }
            if (options.bytes === String)
                object.ActionTag = "";
            else {
                object.ActionTag = [];
                if (options.bytes !== Array)
                    object.ActionTag = $util.newBuffer(object.ActionTag);
            }
            object.DeletedFlag = 0;
            if (options.bytes === String)
                object.XML = "";
            else {
                object.XML = [];
                if (options.bytes !== Array)
                    object.XML = $util.newBuffer(object.XML);
            }
            if (options.bytes === String)
                object.Image = "";
            else {
                object.Image = [];
                if (options.bytes !== Array)
                    object.Image = $util.newBuffer(object.Image);
            }
            if (options.bytes === String)
                object.RelationInfo = "";
            else {
                object.RelationInfo = [];
                if (options.bytes !== Array)
                    object.RelationInfo = $util.newBuffer(object.RelationInfo);
            }
            object.State = 0;
        }
        if (message.Path != null && message.hasOwnProperty("Path"))
            object.Path = options.bytes === String ? $util.base64.encode(message.Path, 0, message.Path.length) : options.bytes === Array ? Array.prototype.slice.call(message.Path) : message.Path;
        if (message.Type != null && message.hasOwnProperty("Type"))
            object.Type = options.bytes === String ? $util.base64.encode(message.Type, 0, message.Type.length) : options.bytes === Array ? Array.prototype.slice.call(message.Type) : message.Type;
        if (message.Name != null && message.hasOwnProperty("Name"))
            object.Name = options.bytes === String ? $util.base64.encode(message.Name, 0, message.Name.length) : options.bytes === Array ? Array.prototype.slice.call(message.Name) : message.Name;
        if (message.Data != null && message.hasOwnProperty("Data"))
            object.Data = options.bytes === String ? $util.base64.encode(message.Data, 0, message.Data.length) : options.bytes === Array ? Array.prototype.slice.call(message.Data) : message.Data;
        if (message.Label != null && message.hasOwnProperty("Label"))
            object.Label = options.bytes === String ? $util.base64.encode(message.Label, 0, message.Label.length) : options.bytes === Array ? Array.prototype.slice.call(message.Label) : message.Label;
        if (message.VersionID != null && message.hasOwnProperty("VersionID"))
            if (typeof message.VersionID === "number")
                object.VersionID = options.longs === String ? String(message.VersionID) : message.VersionID;
            else
                object.VersionID = options.longs === String ? $util.Long.prototype.toString.call(message.VersionID) : options.longs === Number ? new $util.LongBits(message.VersionID.low >>> 0, message.VersionID.high >>> 0).toNumber() : message.VersionID;
        if (message.BaseVersionID != null && message.hasOwnProperty("BaseVersionID"))
            if (typeof message.BaseVersionID === "number")
                object.BaseVersionID = options.longs === String ? String(message.BaseVersionID) : message.BaseVersionID;
            else
                object.BaseVersionID = options.longs === String ? $util.Long.prototype.toString.call(message.BaseVersionID) : options.longs === Number ? new $util.LongBits(message.BaseVersionID.low >>> 0, message.BaseVersionID.high >>> 0).toNumber() : message.BaseVersionID;
        if (message.BaseVersionLevel != null && message.hasOwnProperty("BaseVersionLevel"))
            if (typeof message.BaseVersionLevel === "number")
                object.BaseVersionLevel = options.longs === String ? String(message.BaseVersionLevel) : message.BaseVersionLevel;
            else
                object.BaseVersionLevel = options.longs === String ? $util.Long.prototype.toString.call(message.BaseVersionLevel) : options.longs === Number ? new $util.LongBits(message.BaseVersionLevel.low >>> 0, message.BaseVersionLevel.high >>> 0).toNumber() : message.BaseVersionLevel;
        if (message.ModifiedBy != null && message.hasOwnProperty("ModifiedBy"))
            object.ModifiedBy = options.bytes === String ? $util.base64.encode(message.ModifiedBy, 0, message.ModifiedBy.length) : options.bytes === Array ? Array.prototype.slice.call(message.ModifiedBy) : message.ModifiedBy;
        if (message.ModificationDate != null && message.hasOwnProperty("ModificationDate"))
            if (typeof message.ModificationDate === "number")
                object.ModificationDate = options.longs === String ? String(message.ModificationDate) : message.ModificationDate;
            else
                object.ModificationDate = options.longs === String ? $util.Long.prototype.toString.call(message.ModificationDate) : options.longs === Number ? new $util.LongBits(message.ModificationDate.low >>> 0, message.ModificationDate.high >>> 0).toNumber() : message.ModificationDate;
        if (message.SourceDB != null && message.hasOwnProperty("SourceDB"))
            object.SourceDB = message.SourceDB;
        if (message.GUITag != null && message.hasOwnProperty("GUITag"))
            object.GUITag = options.bytes === String ? $util.base64.encode(message.GUITag, 0, message.GUITag.length) : options.bytes === Array ? Array.prototype.slice.call(message.GUITag) : message.GUITag;
        if (message.ProcessTag != null && message.hasOwnProperty("ProcessTag"))
            object.ProcessTag = options.bytes === String ? $util.base64.encode(message.ProcessTag, 0, message.ProcessTag.length) : options.bytes === Array ? Array.prototype.slice.call(message.ProcessTag) : message.ProcessTag;
        if (message.ActionTag != null && message.hasOwnProperty("ActionTag"))
            object.ActionTag = options.bytes === String ? $util.base64.encode(message.ActionTag, 0, message.ActionTag.length) : options.bytes === Array ? Array.prototype.slice.call(message.ActionTag) : message.ActionTag;
        if (message.DeletedFlag != null && message.hasOwnProperty("DeletedFlag"))
            object.DeletedFlag = message.DeletedFlag;
        if (message.XML != null && message.hasOwnProperty("XML"))
            object.XML = options.bytes === String ? $util.base64.encode(message.XML, 0, message.XML.length) : options.bytes === Array ? Array.prototype.slice.call(message.XML) : message.XML;
        if (message.Image != null && message.hasOwnProperty("Image"))
            object.Image = options.bytes === String ? $util.base64.encode(message.Image, 0, message.Image.length) : options.bytes === Array ? Array.prototype.slice.call(message.Image) : message.Image;
        if (message.RelationInfo != null && message.hasOwnProperty("RelationInfo"))
            object.RelationInfo = options.bytes === String ? $util.base64.encode(message.RelationInfo, 0, message.RelationInfo.length) : options.bytes === Array ? Array.prototype.slice.call(message.RelationInfo) : message.RelationInfo;
        if (message.State != null && message.hasOwnProperty("State"))
            object.State = message.State;
        return object;
    };

    /**
     * Converts this Proto_ExternalData to JSON.
     * @function toJSON
     * @memberof Proto_ExternalData
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ExternalData.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ExternalData;
})();

$root.Proto_KeyStringMap = (function() {

    /**
     * Properties of a Proto_KeyStringMap.
     * @exports IProto_KeyStringMap
     * @interface IProto_KeyStringMap
     * @property {Array.<IProto_KeyString>|null} [KeyStrings] Proto_KeyStringMap KeyStrings
     * @property {Uint8Array|null} [Language] Proto_KeyStringMap Language
     */

    /**
     * Constructs a new Proto_KeyStringMap.
     * @exports Proto_KeyStringMap
     * @classdesc Represents a Proto_KeyStringMap.
     * @implements IProto_KeyStringMap
     * @constructor
     * @param {IProto_KeyStringMap=} [properties] Properties to set
     */
    function Proto_KeyStringMap(properties) {
        this.KeyStrings = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_KeyStringMap KeyStrings.
     * @member {Array.<IProto_KeyString>} KeyStrings
     * @memberof Proto_KeyStringMap
     * @instance
     */
    Proto_KeyStringMap.prototype.KeyStrings = $util.emptyArray;

    /**
     * Proto_KeyStringMap Language.
     * @member {Uint8Array} Language
     * @memberof Proto_KeyStringMap
     * @instance
     */
    Proto_KeyStringMap.prototype.Language = $util.newBuffer([]);

    /**
     * Creates a new Proto_KeyStringMap instance using the specified properties.
     * @function create
     * @memberof Proto_KeyStringMap
     * @static
     * @param {IProto_KeyStringMap=} [properties] Properties to set
     * @returns {Proto_KeyStringMap} Proto_KeyStringMap instance
     */
    Proto_KeyStringMap.create = function create(properties) {
        return new Proto_KeyStringMap(properties);
    };

    /**
     * Encodes the specified Proto_KeyStringMap message. Does not implicitly {@link Proto_KeyStringMap.verify|verify} messages.
     * @function encode
     * @memberof Proto_KeyStringMap
     * @static
     * @param {IProto_KeyStringMap} message Proto_KeyStringMap message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_KeyStringMap.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.KeyStrings != null && message.KeyStrings.length)
            for (var i = 0; i < message.KeyStrings.length; ++i)
                $root.Proto_KeyString.encode(message.KeyStrings[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.Language != null && Object.hasOwnProperty.call(message, "Language"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.Language);
        return writer;
    };

    /**
     * Encodes the specified Proto_KeyStringMap message, length delimited. Does not implicitly {@link Proto_KeyStringMap.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_KeyStringMap
     * @static
     * @param {IProto_KeyStringMap} message Proto_KeyStringMap message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_KeyStringMap.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_KeyStringMap message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_KeyStringMap
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_KeyStringMap} Proto_KeyStringMap
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_KeyStringMap.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_KeyStringMap();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.KeyStrings && message.KeyStrings.length))
                    message.KeyStrings = [];
                message.KeyStrings.push($root.Proto_KeyString.decode(reader, reader.uint32()));
                break;
            case 2:
                message.Language = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_KeyStringMap message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_KeyStringMap
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_KeyStringMap} Proto_KeyStringMap
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_KeyStringMap.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_KeyStringMap message.
     * @function verify
     * @memberof Proto_KeyStringMap
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_KeyStringMap.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.KeyStrings != null && message.hasOwnProperty("KeyStrings")) {
            if (!Array.isArray(message.KeyStrings))
                return "KeyStrings: array expected";
            for (var i = 0; i < message.KeyStrings.length; ++i) {
                var error = $root.Proto_KeyString.verify(message.KeyStrings[i]);
                if (error)
                    return "KeyStrings." + error;
            }
        }
        if (message.Language != null && message.hasOwnProperty("Language"))
            if (!(message.Language && typeof message.Language.length === "number" || $util.isString(message.Language)))
                return "Language: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_KeyStringMap message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_KeyStringMap
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_KeyStringMap} Proto_KeyStringMap
     */
    Proto_KeyStringMap.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_KeyStringMap)
            return object;
        var message = new $root.Proto_KeyStringMap();
        if (object.KeyStrings) {
            if (!Array.isArray(object.KeyStrings))
                throw TypeError(".Proto_KeyStringMap.KeyStrings: array expected");
            message.KeyStrings = [];
            for (var i = 0; i < object.KeyStrings.length; ++i) {
                if (typeof object.KeyStrings[i] !== "object")
                    throw TypeError(".Proto_KeyStringMap.KeyStrings: object expected");
                message.KeyStrings[i] = $root.Proto_KeyString.fromObject(object.KeyStrings[i]);
            }
        }
        if (object.Language != null)
            if (typeof object.Language === "string")
                $util.base64.decode(object.Language, message.Language = $util.newBuffer($util.base64.length(object.Language)), 0);
            else if (object.Language.length)
                message.Language = object.Language;
        return message;
    };

    /**
     * Creates a plain object from a Proto_KeyStringMap message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_KeyStringMap
     * @static
     * @param {Proto_KeyStringMap} message Proto_KeyStringMap
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_KeyStringMap.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.KeyStrings = [];
        if (options.defaults)
            if (options.bytes === String)
                object.Language = "";
            else {
                object.Language = [];
                if (options.bytes !== Array)
                    object.Language = $util.newBuffer(object.Language);
            }
        if (message.KeyStrings && message.KeyStrings.length) {
            object.KeyStrings = [];
            for (var j = 0; j < message.KeyStrings.length; ++j)
                object.KeyStrings[j] = $root.Proto_KeyString.toObject(message.KeyStrings[j], options);
        }
        if (message.Language != null && message.hasOwnProperty("Language"))
            object.Language = options.bytes === String ? $util.base64.encode(message.Language, 0, message.Language.length) : options.bytes === Array ? Array.prototype.slice.call(message.Language) : message.Language;
        return object;
    };

    /**
     * Converts this Proto_KeyStringMap to JSON.
     * @function toJSON
     * @memberof Proto_KeyStringMap
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_KeyStringMap.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_KeyStringMap;
})();

$root.Proto_KeyString = (function() {

    /**
     * Properties of a Proto_KeyString.
     * @exports IProto_KeyString
     * @interface IProto_KeyString
     * @property {Uint8Array|null} [Key] Proto_KeyString Key
     * @property {Uint8Array|null} [Text] Proto_KeyString Text
     */

    /**
     * Constructs a new Proto_KeyString.
     * @exports Proto_KeyString
     * @classdesc Represents a Proto_KeyString.
     * @implements IProto_KeyString
     * @constructor
     * @param {IProto_KeyString=} [properties] Properties to set
     */
    function Proto_KeyString(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_KeyString Key.
     * @member {Uint8Array} Key
     * @memberof Proto_KeyString
     * @instance
     */
    Proto_KeyString.prototype.Key = $util.newBuffer([]);

    /**
     * Proto_KeyString Text.
     * @member {Uint8Array} Text
     * @memberof Proto_KeyString
     * @instance
     */
    Proto_KeyString.prototype.Text = $util.newBuffer([]);

    /**
     * Creates a new Proto_KeyString instance using the specified properties.
     * @function create
     * @memberof Proto_KeyString
     * @static
     * @param {IProto_KeyString=} [properties] Properties to set
     * @returns {Proto_KeyString} Proto_KeyString instance
     */
    Proto_KeyString.create = function create(properties) {
        return new Proto_KeyString(properties);
    };

    /**
     * Encodes the specified Proto_KeyString message. Does not implicitly {@link Proto_KeyString.verify|verify} messages.
     * @function encode
     * @memberof Proto_KeyString
     * @static
     * @param {IProto_KeyString} message Proto_KeyString message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_KeyString.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Key != null && Object.hasOwnProperty.call(message, "Key"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Key);
        if (message.Text != null && Object.hasOwnProperty.call(message, "Text"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.Text);
        return writer;
    };

    /**
     * Encodes the specified Proto_KeyString message, length delimited. Does not implicitly {@link Proto_KeyString.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_KeyString
     * @static
     * @param {IProto_KeyString} message Proto_KeyString message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_KeyString.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_KeyString message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_KeyString
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_KeyString} Proto_KeyString
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_KeyString.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_KeyString();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.Key = reader.bytes();
                break;
            case 2:
                message.Text = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_KeyString message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_KeyString
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_KeyString} Proto_KeyString
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_KeyString.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_KeyString message.
     * @function verify
     * @memberof Proto_KeyString
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_KeyString.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Key != null && message.hasOwnProperty("Key"))
            if (!(message.Key && typeof message.Key.length === "number" || $util.isString(message.Key)))
                return "Key: buffer expected";
        if (message.Text != null && message.hasOwnProperty("Text"))
            if (!(message.Text && typeof message.Text.length === "number" || $util.isString(message.Text)))
                return "Text: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_KeyString message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_KeyString
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_KeyString} Proto_KeyString
     */
    Proto_KeyString.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_KeyString)
            return object;
        var message = new $root.Proto_KeyString();
        if (object.Key != null)
            if (typeof object.Key === "string")
                $util.base64.decode(object.Key, message.Key = $util.newBuffer($util.base64.length(object.Key)), 0);
            else if (object.Key.length)
                message.Key = object.Key;
        if (object.Text != null)
            if (typeof object.Text === "string")
                $util.base64.decode(object.Text, message.Text = $util.newBuffer($util.base64.length(object.Text)), 0);
            else if (object.Text.length)
                message.Text = object.Text;
        return message;
    };

    /**
     * Creates a plain object from a Proto_KeyString message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_KeyString
     * @static
     * @param {Proto_KeyString} message Proto_KeyString
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_KeyString.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.Key = "";
            else {
                object.Key = [];
                if (options.bytes !== Array)
                    object.Key = $util.newBuffer(object.Key);
            }
            if (options.bytes === String)
                object.Text = "";
            else {
                object.Text = [];
                if (options.bytes !== Array)
                    object.Text = $util.newBuffer(object.Text);
            }
        }
        if (message.Key != null && message.hasOwnProperty("Key"))
            object.Key = options.bytes === String ? $util.base64.encode(message.Key, 0, message.Key.length) : options.bytes === Array ? Array.prototype.slice.call(message.Key) : message.Key;
        if (message.Text != null && message.hasOwnProperty("Text"))
            object.Text = options.bytes === String ? $util.base64.encode(message.Text, 0, message.Text.length) : options.bytes === Array ? Array.prototype.slice.call(message.Text) : message.Text;
        return object;
    };

    /**
     * Converts this Proto_KeyString to JSON.
     * @function toJSON
     * @memberof Proto_KeyString
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_KeyString.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_KeyString;
})();

$root.Proto_Form = (function() {

    /**
     * Properties of a Proto_Form.
     * @exports IProto_Form
     * @interface IProto_Form
     * @property {Array.<IProto_FormField>|null} [Fields] Proto_Form Fields
     * @property {IProto_DataTableRow|null} [Row] Proto_Form Row
     */

    /**
     * Constructs a new Proto_Form.
     * @exports Proto_Form
     * @classdesc Represents a Proto_Form.
     * @implements IProto_Form
     * @constructor
     * @param {IProto_Form=} [properties] Properties to set
     */
    function Proto_Form(properties) {
        this.Fields = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Form Fields.
     * @member {Array.<IProto_FormField>} Fields
     * @memberof Proto_Form
     * @instance
     */
    Proto_Form.prototype.Fields = $util.emptyArray;

    /**
     * Proto_Form Row.
     * @member {IProto_DataTableRow|null|undefined} Row
     * @memberof Proto_Form
     * @instance
     */
    Proto_Form.prototype.Row = null;

    /**
     * Creates a new Proto_Form instance using the specified properties.
     * @function create
     * @memberof Proto_Form
     * @static
     * @param {IProto_Form=} [properties] Properties to set
     * @returns {Proto_Form} Proto_Form instance
     */
    Proto_Form.create = function create(properties) {
        return new Proto_Form(properties);
    };

    /**
     * Encodes the specified Proto_Form message. Does not implicitly {@link Proto_Form.verify|verify} messages.
     * @function encode
     * @memberof Proto_Form
     * @static
     * @param {IProto_Form} message Proto_Form message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Form.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Fields != null && message.Fields.length)
            for (var i = 0; i < message.Fields.length; ++i)
                $root.Proto_FormField.encode(message.Fields[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.Row != null && Object.hasOwnProperty.call(message, "Row"))
            $root.Proto_DataTableRow.encode(message.Row, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_Form message, length delimited. Does not implicitly {@link Proto_Form.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Form
     * @static
     * @param {IProto_Form} message Proto_Form message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Form.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Form message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Form
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Form} Proto_Form
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Form.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Form();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.Fields && message.Fields.length))
                    message.Fields = [];
                message.Fields.push($root.Proto_FormField.decode(reader, reader.uint32()));
                break;
            case 2:
                message.Row = $root.Proto_DataTableRow.decode(reader, reader.uint32());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Form message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Form
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Form} Proto_Form
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Form.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Form message.
     * @function verify
     * @memberof Proto_Form
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Form.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Fields != null && message.hasOwnProperty("Fields")) {
            if (!Array.isArray(message.Fields))
                return "Fields: array expected";
            for (var i = 0; i < message.Fields.length; ++i) {
                var error = $root.Proto_FormField.verify(message.Fields[i]);
                if (error)
                    return "Fields." + error;
            }
        }
        if (message.Row != null && message.hasOwnProperty("Row")) {
            var error = $root.Proto_DataTableRow.verify(message.Row);
            if (error)
                return "Row." + error;
        }
        return null;
    };

    /**
     * Creates a Proto_Form message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Form
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Form} Proto_Form
     */
    Proto_Form.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Form)
            return object;
        var message = new $root.Proto_Form();
        if (object.Fields) {
            if (!Array.isArray(object.Fields))
                throw TypeError(".Proto_Form.Fields: array expected");
            message.Fields = [];
            for (var i = 0; i < object.Fields.length; ++i) {
                if (typeof object.Fields[i] !== "object")
                    throw TypeError(".Proto_Form.Fields: object expected");
                message.Fields[i] = $root.Proto_FormField.fromObject(object.Fields[i]);
            }
        }
        if (object.Row != null) {
            if (typeof object.Row !== "object")
                throw TypeError(".Proto_Form.Row: object expected");
            message.Row = $root.Proto_DataTableRow.fromObject(object.Row);
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_Form message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Form
     * @static
     * @param {Proto_Form} message Proto_Form
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Form.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.Fields = [];
        if (options.defaults)
            object.Row = null;
        if (message.Fields && message.Fields.length) {
            object.Fields = [];
            for (var j = 0; j < message.Fields.length; ++j)
                object.Fields[j] = $root.Proto_FormField.toObject(message.Fields[j], options);
        }
        if (message.Row != null && message.hasOwnProperty("Row"))
            object.Row = $root.Proto_DataTableRow.toObject(message.Row, options);
        return object;
    };

    /**
     * Converts this Proto_Form to JSON.
     * @function toJSON
     * @memberof Proto_Form
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Form.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Form;
})();

$root.Proto_FormField = (function() {

    /**
     * Properties of a Proto_FormField.
     * @exports IProto_FormField
     * @interface IProto_FormField
     * @property {Uint8Array|null} [FieldName] Proto_FormField FieldName
     * @property {number|null} [Visibility] Proto_FormField Visibility
     * @property {boolean|null} [IsMultipleSelection] Proto_FormField IsMultipleSelection
     * @property {Uint8Array|null} [Options] Proto_FormField Options
     * @property {Uint8Array|null} [ErrorText] Proto_FormField ErrorText
     */

    /**
     * Constructs a new Proto_FormField.
     * @exports Proto_FormField
     * @classdesc Represents a Proto_FormField.
     * @implements IProto_FormField
     * @constructor
     * @param {IProto_FormField=} [properties] Properties to set
     */
    function Proto_FormField(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_FormField FieldName.
     * @member {Uint8Array} FieldName
     * @memberof Proto_FormField
     * @instance
     */
    Proto_FormField.prototype.FieldName = $util.newBuffer([]);

    /**
     * Proto_FormField Visibility.
     * @member {number} Visibility
     * @memberof Proto_FormField
     * @instance
     */
    Proto_FormField.prototype.Visibility = 0;

    /**
     * Proto_FormField IsMultipleSelection.
     * @member {boolean} IsMultipleSelection
     * @memberof Proto_FormField
     * @instance
     */
    Proto_FormField.prototype.IsMultipleSelection = false;

    /**
     * Proto_FormField Options.
     * @member {Uint8Array} Options
     * @memberof Proto_FormField
     * @instance
     */
    Proto_FormField.prototype.Options = $util.newBuffer([]);

    /**
     * Proto_FormField ErrorText.
     * @member {Uint8Array} ErrorText
     * @memberof Proto_FormField
     * @instance
     */
    Proto_FormField.prototype.ErrorText = $util.newBuffer([]);

    /**
     * Creates a new Proto_FormField instance using the specified properties.
     * @function create
     * @memberof Proto_FormField
     * @static
     * @param {IProto_FormField=} [properties] Properties to set
     * @returns {Proto_FormField} Proto_FormField instance
     */
    Proto_FormField.create = function create(properties) {
        return new Proto_FormField(properties);
    };

    /**
     * Encodes the specified Proto_FormField message. Does not implicitly {@link Proto_FormField.verify|verify} messages.
     * @function encode
     * @memberof Proto_FormField
     * @static
     * @param {IProto_FormField} message Proto_FormField message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_FormField.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.FieldName != null && Object.hasOwnProperty.call(message, "FieldName"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.FieldName);
        if (message.Visibility != null && Object.hasOwnProperty.call(message, "Visibility"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.Visibility);
        if (message.IsMultipleSelection != null && Object.hasOwnProperty.call(message, "IsMultipleSelection"))
            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.IsMultipleSelection);
        if (message.Options != null && Object.hasOwnProperty.call(message, "Options"))
            writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.Options);
        if (message.ErrorText != null && Object.hasOwnProperty.call(message, "ErrorText"))
            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.ErrorText);
        return writer;
    };

    /**
     * Encodes the specified Proto_FormField message, length delimited. Does not implicitly {@link Proto_FormField.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_FormField
     * @static
     * @param {IProto_FormField} message Proto_FormField message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_FormField.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_FormField message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_FormField
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_FormField} Proto_FormField
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_FormField.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_FormField();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.FieldName = reader.bytes();
                break;
            case 4:
                message.Visibility = reader.int32();
                break;
            case 5:
                message.IsMultipleSelection = reader.bool();
                break;
            case 6:
                message.Options = reader.bytes();
                break;
            case 7:
                message.ErrorText = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_FormField message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_FormField
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_FormField} Proto_FormField
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_FormField.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_FormField message.
     * @function verify
     * @memberof Proto_FormField
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_FormField.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.FieldName != null && message.hasOwnProperty("FieldName"))
            if (!(message.FieldName && typeof message.FieldName.length === "number" || $util.isString(message.FieldName)))
                return "FieldName: buffer expected";
        if (message.Visibility != null && message.hasOwnProperty("Visibility"))
            if (!$util.isInteger(message.Visibility))
                return "Visibility: integer expected";
        if (message.IsMultipleSelection != null && message.hasOwnProperty("IsMultipleSelection"))
            if (typeof message.IsMultipleSelection !== "boolean")
                return "IsMultipleSelection: boolean expected";
        if (message.Options != null && message.hasOwnProperty("Options"))
            if (!(message.Options && typeof message.Options.length === "number" || $util.isString(message.Options)))
                return "Options: buffer expected";
        if (message.ErrorText != null && message.hasOwnProperty("ErrorText"))
            if (!(message.ErrorText && typeof message.ErrorText.length === "number" || $util.isString(message.ErrorText)))
                return "ErrorText: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_FormField message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_FormField
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_FormField} Proto_FormField
     */
    Proto_FormField.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_FormField)
            return object;
        var message = new $root.Proto_FormField();
        if (object.FieldName != null)
            if (typeof object.FieldName === "string")
                $util.base64.decode(object.FieldName, message.FieldName = $util.newBuffer($util.base64.length(object.FieldName)), 0);
            else if (object.FieldName.length)
                message.FieldName = object.FieldName;
        if (object.Visibility != null)
            message.Visibility = object.Visibility | 0;
        if (object.IsMultipleSelection != null)
            message.IsMultipleSelection = Boolean(object.IsMultipleSelection);
        if (object.Options != null)
            if (typeof object.Options === "string")
                $util.base64.decode(object.Options, message.Options = $util.newBuffer($util.base64.length(object.Options)), 0);
            else if (object.Options.length)
                message.Options = object.Options;
        if (object.ErrorText != null)
            if (typeof object.ErrorText === "string")
                $util.base64.decode(object.ErrorText, message.ErrorText = $util.newBuffer($util.base64.length(object.ErrorText)), 0);
            else if (object.ErrorText.length)
                message.ErrorText = object.ErrorText;
        return message;
    };

    /**
     * Creates a plain object from a Proto_FormField message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_FormField
     * @static
     * @param {Proto_FormField} message Proto_FormField
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_FormField.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.FieldName = "";
            else {
                object.FieldName = [];
                if (options.bytes !== Array)
                    object.FieldName = $util.newBuffer(object.FieldName);
            }
            object.Visibility = 0;
            object.IsMultipleSelection = false;
            if (options.bytes === String)
                object.Options = "";
            else {
                object.Options = [];
                if (options.bytes !== Array)
                    object.Options = $util.newBuffer(object.Options);
            }
            if (options.bytes === String)
                object.ErrorText = "";
            else {
                object.ErrorText = [];
                if (options.bytes !== Array)
                    object.ErrorText = $util.newBuffer(object.ErrorText);
            }
        }
        if (message.FieldName != null && message.hasOwnProperty("FieldName"))
            object.FieldName = options.bytes === String ? $util.base64.encode(message.FieldName, 0, message.FieldName.length) : options.bytes === Array ? Array.prototype.slice.call(message.FieldName) : message.FieldName;
        if (message.Visibility != null && message.hasOwnProperty("Visibility"))
            object.Visibility = message.Visibility;
        if (message.IsMultipleSelection != null && message.hasOwnProperty("IsMultipleSelection"))
            object.IsMultipleSelection = message.IsMultipleSelection;
        if (message.Options != null && message.hasOwnProperty("Options"))
            object.Options = options.bytes === String ? $util.base64.encode(message.Options, 0, message.Options.length) : options.bytes === Array ? Array.prototype.slice.call(message.Options) : message.Options;
        if (message.ErrorText != null && message.hasOwnProperty("ErrorText"))
            object.ErrorText = options.bytes === String ? $util.base64.encode(message.ErrorText, 0, message.ErrorText.length) : options.bytes === Array ? Array.prototype.slice.call(message.ErrorText) : message.ErrorText;
        return object;
    };

    /**
     * Converts this Proto_FormField to JSON.
     * @function toJSON
     * @memberof Proto_FormField
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_FormField.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_FormField;
})();

$root.Proto_Model = (function() {

    /**
     * Properties of a Proto_Model.
     * @exports IProto_Model
     * @interface IProto_Model
     * @property {Array.<IProto_Class>|null} [iclclass] Proto_Model iclclass
     */

    /**
     * Constructs a new Proto_Model.
     * @exports Proto_Model
     * @classdesc Represents a Proto_Model.
     * @implements IProto_Model
     * @constructor
     * @param {IProto_Model=} [properties] Properties to set
     */
    function Proto_Model(properties) {
        this.iclclass = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Model iclclass.
     * @member {Array.<IProto_Class>} iclclass
     * @memberof Proto_Model
     * @instance
     */
    Proto_Model.prototype.iclclass = $util.emptyArray;

    /**
     * Creates a new Proto_Model instance using the specified properties.
     * @function create
     * @memberof Proto_Model
     * @static
     * @param {IProto_Model=} [properties] Properties to set
     * @returns {Proto_Model} Proto_Model instance
     */
    Proto_Model.create = function create(properties) {
        return new Proto_Model(properties);
    };

    /**
     * Encodes the specified Proto_Model message. Does not implicitly {@link Proto_Model.verify|verify} messages.
     * @function encode
     * @memberof Proto_Model
     * @static
     * @param {IProto_Model} message Proto_Model message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Model.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.iclclass != null && message.iclclass.length)
            for (var i = 0; i < message.iclclass.length; ++i)
                $root.Proto_Class.encode(message.iclclass[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_Model message, length delimited. Does not implicitly {@link Proto_Model.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Model
     * @static
     * @param {IProto_Model} message Proto_Model message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Model.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Model message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Model
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Model} Proto_Model
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Model.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Model();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.iclclass && message.iclclass.length))
                    message.iclclass = [];
                message.iclclass.push($root.Proto_Class.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Model message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Model
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Model} Proto_Model
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Model.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Model message.
     * @function verify
     * @memberof Proto_Model
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Model.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.iclclass != null && message.hasOwnProperty("iclclass")) {
            if (!Array.isArray(message.iclclass))
                return "iclclass: array expected";
            for (var i = 0; i < message.iclclass.length; ++i) {
                var error = $root.Proto_Class.verify(message.iclclass[i]);
                if (error)
                    return "iclclass." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_Model message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Model
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Model} Proto_Model
     */
    Proto_Model.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Model)
            return object;
        var message = new $root.Proto_Model();
        if (object.iclclass) {
            if (!Array.isArray(object.iclclass))
                throw TypeError(".Proto_Model.iclclass: array expected");
            message.iclclass = [];
            for (var i = 0; i < object.iclclass.length; ++i) {
                if (typeof object.iclclass[i] !== "object")
                    throw TypeError(".Proto_Model.iclclass: object expected");
                message.iclclass[i] = $root.Proto_Class.fromObject(object.iclclass[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_Model message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Model
     * @static
     * @param {Proto_Model} message Proto_Model
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Model.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.iclclass = [];
        if (message.iclclass && message.iclclass.length) {
            object.iclclass = [];
            for (var j = 0; j < message.iclclass.length; ++j)
                object.iclclass[j] = $root.Proto_Class.toObject(message.iclclass[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_Model to JSON.
     * @function toJSON
     * @memberof Proto_Model
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Model.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Model;
})();

$root.Proto_Class = (function() {

    /**
     * Properties of a Proto_Class.
     * @exports IProto_Class
     * @interface IProto_Class
     * @property {Array.<IProto_ClassField>|null} [classfield] Proto_Class classfield
     * @property {Uint8Array|null} [ClassName] Proto_Class ClassName
     * @property {number|null} [CreationSource] Proto_Class CreationSource
     * @property {number|null} [ClassType] Proto_Class ClassType
     * @property {Uint8Array|null} [GroupMemberClassName] Proto_Class GroupMemberClassName
     */

    /**
     * Constructs a new Proto_Class.
     * @exports Proto_Class
     * @classdesc Represents a Proto_Class.
     * @implements IProto_Class
     * @constructor
     * @param {IProto_Class=} [properties] Properties to set
     */
    function Proto_Class(properties) {
        this.classfield = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Class classfield.
     * @member {Array.<IProto_ClassField>} classfield
     * @memberof Proto_Class
     * @instance
     */
    Proto_Class.prototype.classfield = $util.emptyArray;

    /**
     * Proto_Class ClassName.
     * @member {Uint8Array} ClassName
     * @memberof Proto_Class
     * @instance
     */
    Proto_Class.prototype.ClassName = $util.newBuffer([]);

    /**
     * Proto_Class CreationSource.
     * @member {number} CreationSource
     * @memberof Proto_Class
     * @instance
     */
    Proto_Class.prototype.CreationSource = 0;

    /**
     * Proto_Class ClassType.
     * @member {number} ClassType
     * @memberof Proto_Class
     * @instance
     */
    Proto_Class.prototype.ClassType = 0;

    /**
     * Proto_Class GroupMemberClassName.
     * @member {Uint8Array} GroupMemberClassName
     * @memberof Proto_Class
     * @instance
     */
    Proto_Class.prototype.GroupMemberClassName = $util.newBuffer([]);

    /**
     * Creates a new Proto_Class instance using the specified properties.
     * @function create
     * @memberof Proto_Class
     * @static
     * @param {IProto_Class=} [properties] Properties to set
     * @returns {Proto_Class} Proto_Class instance
     */
    Proto_Class.create = function create(properties) {
        return new Proto_Class(properties);
    };

    /**
     * Encodes the specified Proto_Class message. Does not implicitly {@link Proto_Class.verify|verify} messages.
     * @function encode
     * @memberof Proto_Class
     * @static
     * @param {IProto_Class} message Proto_Class message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Class.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.classfield != null && message.classfield.length)
            for (var i = 0; i < message.classfield.length; ++i)
                $root.Proto_ClassField.encode(message.classfield[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.ClassName != null && Object.hasOwnProperty.call(message, "ClassName"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.ClassName);
        if (message.CreationSource != null && Object.hasOwnProperty.call(message, "CreationSource"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.CreationSource);
        if (message.ClassType != null && Object.hasOwnProperty.call(message, "ClassType"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.ClassType);
        if (message.GroupMemberClassName != null && Object.hasOwnProperty.call(message, "GroupMemberClassName"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.GroupMemberClassName);
        return writer;
    };

    /**
     * Encodes the specified Proto_Class message, length delimited. Does not implicitly {@link Proto_Class.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Class
     * @static
     * @param {IProto_Class} message Proto_Class message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Class.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Class message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Class
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Class} Proto_Class
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Class.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Class();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.classfield && message.classfield.length))
                    message.classfield = [];
                message.classfield.push($root.Proto_ClassField.decode(reader, reader.uint32()));
                break;
            case 2:
                message.ClassName = reader.bytes();
                break;
            case 3:
                message.CreationSource = reader.int32();
                break;
            case 4:
                message.ClassType = reader.int32();
                break;
            case 5:
                message.GroupMemberClassName = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Class message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Class
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Class} Proto_Class
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Class.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Class message.
     * @function verify
     * @memberof Proto_Class
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Class.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.classfield != null && message.hasOwnProperty("classfield")) {
            if (!Array.isArray(message.classfield))
                return "classfield: array expected";
            for (var i = 0; i < message.classfield.length; ++i) {
                var error = $root.Proto_ClassField.verify(message.classfield[i]);
                if (error)
                    return "classfield." + error;
            }
        }
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            if (!(message.ClassName && typeof message.ClassName.length === "number" || $util.isString(message.ClassName)))
                return "ClassName: buffer expected";
        if (message.CreationSource != null && message.hasOwnProperty("CreationSource"))
            if (!$util.isInteger(message.CreationSource))
                return "CreationSource: integer expected";
        if (message.ClassType != null && message.hasOwnProperty("ClassType"))
            if (!$util.isInteger(message.ClassType))
                return "ClassType: integer expected";
        if (message.GroupMemberClassName != null && message.hasOwnProperty("GroupMemberClassName"))
            if (!(message.GroupMemberClassName && typeof message.GroupMemberClassName.length === "number" || $util.isString(message.GroupMemberClassName)))
                return "GroupMemberClassName: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_Class message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Class
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Class} Proto_Class
     */
    Proto_Class.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Class)
            return object;
        var message = new $root.Proto_Class();
        if (object.classfield) {
            if (!Array.isArray(object.classfield))
                throw TypeError(".Proto_Class.classfield: array expected");
            message.classfield = [];
            for (var i = 0; i < object.classfield.length; ++i) {
                if (typeof object.classfield[i] !== "object")
                    throw TypeError(".Proto_Class.classfield: object expected");
                message.classfield[i] = $root.Proto_ClassField.fromObject(object.classfield[i]);
            }
        }
        if (object.ClassName != null)
            if (typeof object.ClassName === "string")
                $util.base64.decode(object.ClassName, message.ClassName = $util.newBuffer($util.base64.length(object.ClassName)), 0);
            else if (object.ClassName.length)
                message.ClassName = object.ClassName;
        if (object.CreationSource != null)
            message.CreationSource = object.CreationSource | 0;
        if (object.ClassType != null)
            message.ClassType = object.ClassType | 0;
        if (object.GroupMemberClassName != null)
            if (typeof object.GroupMemberClassName === "string")
                $util.base64.decode(object.GroupMemberClassName, message.GroupMemberClassName = $util.newBuffer($util.base64.length(object.GroupMemberClassName)), 0);
            else if (object.GroupMemberClassName.length)
                message.GroupMemberClassName = object.GroupMemberClassName;
        return message;
    };

    /**
     * Creates a plain object from a Proto_Class message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Class
     * @static
     * @param {Proto_Class} message Proto_Class
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Class.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.classfield = [];
        if (options.defaults) {
            if (options.bytes === String)
                object.ClassName = "";
            else {
                object.ClassName = [];
                if (options.bytes !== Array)
                    object.ClassName = $util.newBuffer(object.ClassName);
            }
            object.CreationSource = 0;
            object.ClassType = 0;
            if (options.bytes === String)
                object.GroupMemberClassName = "";
            else {
                object.GroupMemberClassName = [];
                if (options.bytes !== Array)
                    object.GroupMemberClassName = $util.newBuffer(object.GroupMemberClassName);
            }
        }
        if (message.classfield && message.classfield.length) {
            object.classfield = [];
            for (var j = 0; j < message.classfield.length; ++j)
                object.classfield[j] = $root.Proto_ClassField.toObject(message.classfield[j], options);
        }
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            object.ClassName = options.bytes === String ? $util.base64.encode(message.ClassName, 0, message.ClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ClassName) : message.ClassName;
        if (message.CreationSource != null && message.hasOwnProperty("CreationSource"))
            object.CreationSource = message.CreationSource;
        if (message.ClassType != null && message.hasOwnProperty("ClassType"))
            object.ClassType = message.ClassType;
        if (message.GroupMemberClassName != null && message.hasOwnProperty("GroupMemberClassName"))
            object.GroupMemberClassName = options.bytes === String ? $util.base64.encode(message.GroupMemberClassName, 0, message.GroupMemberClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.GroupMemberClassName) : message.GroupMemberClassName;
        return object;
    };

    /**
     * Converts this Proto_Class to JSON.
     * @function toJSON
     * @memberof Proto_Class
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Class.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Class;
})();

$root.Proto_ClassField = (function() {

    /**
     * Properties of a Proto_ClassField.
     * @exports IProto_ClassField
     * @interface IProto_ClassField
     * @property {Uint8Array|null} [FieldName] Proto_ClassField FieldName
     * @property {number|null} [FieldIndex] Proto_ClassField FieldIndex
     * @property {number|null} [FieldType] Proto_ClassField FieldType
     * @property {Uint8Array|null} [Tooltip] Proto_ClassField Tooltip
     * @property {Uint8Array|null} [DisplayFormat] Proto_ClassField DisplayFormat
     * @property {number|null} [SubType] Proto_ClassField SubType
     * @property {boolean|null} [Editable] Proto_ClassField Editable
     * @property {Uint8Array|null} [EditMask] Proto_ClassField EditMask
     * @property {boolean|null} [Browsable] Proto_ClassField Browsable
     * @property {Uint8Array|null} [ReturnClassName] Proto_ClassField ReturnClassName
     * @property {number|null} [HasOptions] Proto_ClassField HasOptions
     * @property {Uint8Array|null} [FieldClassName] Proto_ClassField FieldClassName
     * @property {Uint8Array|null} [WEBDisplayFormat] Proto_ClassField WEBDisplayFormat
     * @property {Uint8Array|null} [WEBEditMask] Proto_ClassField WEBEditMask
     * @property {boolean|null} [IsPK] Proto_ClassField IsPK
     * @property {boolean|null} [IsOptional] Proto_ClassField IsOptional
     * @property {boolean|null} [CanBeUsedForGrouping] Proto_ClassField CanBeUsedForGrouping
     * @property {boolean|null} [HasObjectToolTip] Proto_ClassField HasObjectToolTip
     */

    /**
     * Constructs a new Proto_ClassField.
     * @exports Proto_ClassField
     * @classdesc Represents a Proto_ClassField.
     * @implements IProto_ClassField
     * @constructor
     * @param {IProto_ClassField=} [properties] Properties to set
     */
    function Proto_ClassField(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ClassField FieldName.
     * @member {Uint8Array} FieldName
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.FieldName = $util.newBuffer([]);

    /**
     * Proto_ClassField FieldIndex.
     * @member {number} FieldIndex
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.FieldIndex = 0;

    /**
     * Proto_ClassField FieldType.
     * @member {number} FieldType
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.FieldType = 0;

    /**
     * Proto_ClassField Tooltip.
     * @member {Uint8Array} Tooltip
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.Tooltip = $util.newBuffer([]);

    /**
     * Proto_ClassField DisplayFormat.
     * @member {Uint8Array} DisplayFormat
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.DisplayFormat = $util.newBuffer([]);

    /**
     * Proto_ClassField SubType.
     * @member {number} SubType
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.SubType = 0;

    /**
     * Proto_ClassField Editable.
     * @member {boolean} Editable
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.Editable = false;

    /**
     * Proto_ClassField EditMask.
     * @member {Uint8Array} EditMask
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.EditMask = $util.newBuffer([]);

    /**
     * Proto_ClassField Browsable.
     * @member {boolean} Browsable
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.Browsable = false;

    /**
     * Proto_ClassField ReturnClassName.
     * @member {Uint8Array} ReturnClassName
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.ReturnClassName = $util.newBuffer([]);

    /**
     * Proto_ClassField HasOptions.
     * @member {number} HasOptions
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.HasOptions = 0;

    /**
     * Proto_ClassField FieldClassName.
     * @member {Uint8Array} FieldClassName
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.FieldClassName = $util.newBuffer([]);

    /**
     * Proto_ClassField WEBDisplayFormat.
     * @member {Uint8Array} WEBDisplayFormat
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.WEBDisplayFormat = $util.newBuffer([]);

    /**
     * Proto_ClassField WEBEditMask.
     * @member {Uint8Array} WEBEditMask
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.WEBEditMask = $util.newBuffer([]);

    /**
     * Proto_ClassField IsPK.
     * @member {boolean} IsPK
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.IsPK = false;

    /**
     * Proto_ClassField IsOptional.
     * @member {boolean} IsOptional
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.IsOptional = false;

    /**
     * Proto_ClassField CanBeUsedForGrouping.
     * @member {boolean} CanBeUsedForGrouping
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.CanBeUsedForGrouping = false;

    /**
     * Proto_ClassField HasObjectToolTip.
     * @member {boolean} HasObjectToolTip
     * @memberof Proto_ClassField
     * @instance
     */
    Proto_ClassField.prototype.HasObjectToolTip = false;

    /**
     * Creates a new Proto_ClassField instance using the specified properties.
     * @function create
     * @memberof Proto_ClassField
     * @static
     * @param {IProto_ClassField=} [properties] Properties to set
     * @returns {Proto_ClassField} Proto_ClassField instance
     */
    Proto_ClassField.create = function create(properties) {
        return new Proto_ClassField(properties);
    };

    /**
     * Encodes the specified Proto_ClassField message. Does not implicitly {@link Proto_ClassField.verify|verify} messages.
     * @function encode
     * @memberof Proto_ClassField
     * @static
     * @param {IProto_ClassField} message Proto_ClassField message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ClassField.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.FieldName != null && Object.hasOwnProperty.call(message, "FieldName"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.FieldName);
        if (message.FieldIndex != null && Object.hasOwnProperty.call(message, "FieldIndex"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.FieldIndex);
        if (message.FieldType != null && Object.hasOwnProperty.call(message, "FieldType"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.FieldType);
        if (message.Tooltip != null && Object.hasOwnProperty.call(message, "Tooltip"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.Tooltip);
        if (message.DisplayFormat != null && Object.hasOwnProperty.call(message, "DisplayFormat"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.DisplayFormat);
        if (message.SubType != null && Object.hasOwnProperty.call(message, "SubType"))
            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.SubType);
        if (message.Editable != null && Object.hasOwnProperty.call(message, "Editable"))
            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.Editable);
        if (message.EditMask != null && Object.hasOwnProperty.call(message, "EditMask"))
            writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.EditMask);
        if (message.Browsable != null && Object.hasOwnProperty.call(message, "Browsable"))
            writer.uint32(/* id 9, wireType 0 =*/72).bool(message.Browsable);
        if (message.ReturnClassName != null && Object.hasOwnProperty.call(message, "ReturnClassName"))
            writer.uint32(/* id 10, wireType 2 =*/82).bytes(message.ReturnClassName);
        if (message.HasOptions != null && Object.hasOwnProperty.call(message, "HasOptions"))
            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.HasOptions);
        if (message.FieldClassName != null && Object.hasOwnProperty.call(message, "FieldClassName"))
            writer.uint32(/* id 12, wireType 2 =*/98).bytes(message.FieldClassName);
        if (message.WEBDisplayFormat != null && Object.hasOwnProperty.call(message, "WEBDisplayFormat"))
            writer.uint32(/* id 13, wireType 2 =*/106).bytes(message.WEBDisplayFormat);
        if (message.WEBEditMask != null && Object.hasOwnProperty.call(message, "WEBEditMask"))
            writer.uint32(/* id 14, wireType 2 =*/114).bytes(message.WEBEditMask);
        if (message.IsPK != null && Object.hasOwnProperty.call(message, "IsPK"))
            writer.uint32(/* id 15, wireType 0 =*/120).bool(message.IsPK);
        if (message.IsOptional != null && Object.hasOwnProperty.call(message, "IsOptional"))
            writer.uint32(/* id 16, wireType 0 =*/128).bool(message.IsOptional);
        if (message.CanBeUsedForGrouping != null && Object.hasOwnProperty.call(message, "CanBeUsedForGrouping"))
            writer.uint32(/* id 17, wireType 0 =*/136).bool(message.CanBeUsedForGrouping);
        if (message.HasObjectToolTip != null && Object.hasOwnProperty.call(message, "HasObjectToolTip"))
            writer.uint32(/* id 18, wireType 0 =*/144).bool(message.HasObjectToolTip);
        return writer;
    };

    /**
     * Encodes the specified Proto_ClassField message, length delimited. Does not implicitly {@link Proto_ClassField.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ClassField
     * @static
     * @param {IProto_ClassField} message Proto_ClassField message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ClassField.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ClassField message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ClassField
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ClassField} Proto_ClassField
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ClassField.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ClassField();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.FieldName = reader.bytes();
                break;
            case 2:
                message.FieldIndex = reader.int32();
                break;
            case 3:
                message.FieldType = reader.int32();
                break;
            case 4:
                message.Tooltip = reader.bytes();
                break;
            case 5:
                message.DisplayFormat = reader.bytes();
                break;
            case 6:
                message.SubType = reader.int32();
                break;
            case 7:
                message.Editable = reader.bool();
                break;
            case 8:
                message.EditMask = reader.bytes();
                break;
            case 9:
                message.Browsable = reader.bool();
                break;
            case 10:
                message.ReturnClassName = reader.bytes();
                break;
            case 11:
                message.HasOptions = reader.int32();
                break;
            case 12:
                message.FieldClassName = reader.bytes();
                break;
            case 13:
                message.WEBDisplayFormat = reader.bytes();
                break;
            case 14:
                message.WEBEditMask = reader.bytes();
                break;
            case 15:
                message.IsPK = reader.bool();
                break;
            case 16:
                message.IsOptional = reader.bool();
                break;
            case 17:
                message.CanBeUsedForGrouping = reader.bool();
                break;
            case 18:
                message.HasObjectToolTip = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ClassField message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ClassField
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ClassField} Proto_ClassField
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ClassField.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ClassField message.
     * @function verify
     * @memberof Proto_ClassField
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ClassField.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.FieldName != null && message.hasOwnProperty("FieldName"))
            if (!(message.FieldName && typeof message.FieldName.length === "number" || $util.isString(message.FieldName)))
                return "FieldName: buffer expected";
        if (message.FieldIndex != null && message.hasOwnProperty("FieldIndex"))
            if (!$util.isInteger(message.FieldIndex))
                return "FieldIndex: integer expected";
        if (message.FieldType != null && message.hasOwnProperty("FieldType"))
            if (!$util.isInteger(message.FieldType))
                return "FieldType: integer expected";
        if (message.Tooltip != null && message.hasOwnProperty("Tooltip"))
            if (!(message.Tooltip && typeof message.Tooltip.length === "number" || $util.isString(message.Tooltip)))
                return "Tooltip: buffer expected";
        if (message.DisplayFormat != null && message.hasOwnProperty("DisplayFormat"))
            if (!(message.DisplayFormat && typeof message.DisplayFormat.length === "number" || $util.isString(message.DisplayFormat)))
                return "DisplayFormat: buffer expected";
        if (message.SubType != null && message.hasOwnProperty("SubType"))
            if (!$util.isInteger(message.SubType))
                return "SubType: integer expected";
        if (message.Editable != null && message.hasOwnProperty("Editable"))
            if (typeof message.Editable !== "boolean")
                return "Editable: boolean expected";
        if (message.EditMask != null && message.hasOwnProperty("EditMask"))
            if (!(message.EditMask && typeof message.EditMask.length === "number" || $util.isString(message.EditMask)))
                return "EditMask: buffer expected";
        if (message.Browsable != null && message.hasOwnProperty("Browsable"))
            if (typeof message.Browsable !== "boolean")
                return "Browsable: boolean expected";
        if (message.ReturnClassName != null && message.hasOwnProperty("ReturnClassName"))
            if (!(message.ReturnClassName && typeof message.ReturnClassName.length === "number" || $util.isString(message.ReturnClassName)))
                return "ReturnClassName: buffer expected";
        if (message.HasOptions != null && message.hasOwnProperty("HasOptions"))
            if (!$util.isInteger(message.HasOptions))
                return "HasOptions: integer expected";
        if (message.FieldClassName != null && message.hasOwnProperty("FieldClassName"))
            if (!(message.FieldClassName && typeof message.FieldClassName.length === "number" || $util.isString(message.FieldClassName)))
                return "FieldClassName: buffer expected";
        if (message.WEBDisplayFormat != null && message.hasOwnProperty("WEBDisplayFormat"))
            if (!(message.WEBDisplayFormat && typeof message.WEBDisplayFormat.length === "number" || $util.isString(message.WEBDisplayFormat)))
                return "WEBDisplayFormat: buffer expected";
        if (message.WEBEditMask != null && message.hasOwnProperty("WEBEditMask"))
            if (!(message.WEBEditMask && typeof message.WEBEditMask.length === "number" || $util.isString(message.WEBEditMask)))
                return "WEBEditMask: buffer expected";
        if (message.IsPK != null && message.hasOwnProperty("IsPK"))
            if (typeof message.IsPK !== "boolean")
                return "IsPK: boolean expected";
        if (message.IsOptional != null && message.hasOwnProperty("IsOptional"))
            if (typeof message.IsOptional !== "boolean")
                return "IsOptional: boolean expected";
        if (message.CanBeUsedForGrouping != null && message.hasOwnProperty("CanBeUsedForGrouping"))
            if (typeof message.CanBeUsedForGrouping !== "boolean")
                return "CanBeUsedForGrouping: boolean expected";
        if (message.HasObjectToolTip != null && message.hasOwnProperty("HasObjectToolTip"))
            if (typeof message.HasObjectToolTip !== "boolean")
                return "HasObjectToolTip: boolean expected";
        return null;
    };

    /**
     * Creates a Proto_ClassField message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ClassField
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ClassField} Proto_ClassField
     */
    Proto_ClassField.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ClassField)
            return object;
        var message = new $root.Proto_ClassField();
        if (object.FieldName != null)
            if (typeof object.FieldName === "string")
                $util.base64.decode(object.FieldName, message.FieldName = $util.newBuffer($util.base64.length(object.FieldName)), 0);
            else if (object.FieldName.length)
                message.FieldName = object.FieldName;
        if (object.FieldIndex != null)
            message.FieldIndex = object.FieldIndex | 0;
        if (object.FieldType != null)
            message.FieldType = object.FieldType | 0;
        if (object.Tooltip != null)
            if (typeof object.Tooltip === "string")
                $util.base64.decode(object.Tooltip, message.Tooltip = $util.newBuffer($util.base64.length(object.Tooltip)), 0);
            else if (object.Tooltip.length)
                message.Tooltip = object.Tooltip;
        if (object.DisplayFormat != null)
            if (typeof object.DisplayFormat === "string")
                $util.base64.decode(object.DisplayFormat, message.DisplayFormat = $util.newBuffer($util.base64.length(object.DisplayFormat)), 0);
            else if (object.DisplayFormat.length)
                message.DisplayFormat = object.DisplayFormat;
        if (object.SubType != null)
            message.SubType = object.SubType | 0;
        if (object.Editable != null)
            message.Editable = Boolean(object.Editable);
        if (object.EditMask != null)
            if (typeof object.EditMask === "string")
                $util.base64.decode(object.EditMask, message.EditMask = $util.newBuffer($util.base64.length(object.EditMask)), 0);
            else if (object.EditMask.length)
                message.EditMask = object.EditMask;
        if (object.Browsable != null)
            message.Browsable = Boolean(object.Browsable);
        if (object.ReturnClassName != null)
            if (typeof object.ReturnClassName === "string")
                $util.base64.decode(object.ReturnClassName, message.ReturnClassName = $util.newBuffer($util.base64.length(object.ReturnClassName)), 0);
            else if (object.ReturnClassName.length)
                message.ReturnClassName = object.ReturnClassName;
        if (object.HasOptions != null)
            message.HasOptions = object.HasOptions | 0;
        if (object.FieldClassName != null)
            if (typeof object.FieldClassName === "string")
                $util.base64.decode(object.FieldClassName, message.FieldClassName = $util.newBuffer($util.base64.length(object.FieldClassName)), 0);
            else if (object.FieldClassName.length)
                message.FieldClassName = object.FieldClassName;
        if (object.WEBDisplayFormat != null)
            if (typeof object.WEBDisplayFormat === "string")
                $util.base64.decode(object.WEBDisplayFormat, message.WEBDisplayFormat = $util.newBuffer($util.base64.length(object.WEBDisplayFormat)), 0);
            else if (object.WEBDisplayFormat.length)
                message.WEBDisplayFormat = object.WEBDisplayFormat;
        if (object.WEBEditMask != null)
            if (typeof object.WEBEditMask === "string")
                $util.base64.decode(object.WEBEditMask, message.WEBEditMask = $util.newBuffer($util.base64.length(object.WEBEditMask)), 0);
            else if (object.WEBEditMask.length)
                message.WEBEditMask = object.WEBEditMask;
        if (object.IsPK != null)
            message.IsPK = Boolean(object.IsPK);
        if (object.IsOptional != null)
            message.IsOptional = Boolean(object.IsOptional);
        if (object.CanBeUsedForGrouping != null)
            message.CanBeUsedForGrouping = Boolean(object.CanBeUsedForGrouping);
        if (object.HasObjectToolTip != null)
            message.HasObjectToolTip = Boolean(object.HasObjectToolTip);
        return message;
    };

    /**
     * Creates a plain object from a Proto_ClassField message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ClassField
     * @static
     * @param {Proto_ClassField} message Proto_ClassField
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ClassField.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.FieldName = "";
            else {
                object.FieldName = [];
                if (options.bytes !== Array)
                    object.FieldName = $util.newBuffer(object.FieldName);
            }
            object.FieldIndex = 0;
            object.FieldType = 0;
            if (options.bytes === String)
                object.Tooltip = "";
            else {
                object.Tooltip = [];
                if (options.bytes !== Array)
                    object.Tooltip = $util.newBuffer(object.Tooltip);
            }
            if (options.bytes === String)
                object.DisplayFormat = "";
            else {
                object.DisplayFormat = [];
                if (options.bytes !== Array)
                    object.DisplayFormat = $util.newBuffer(object.DisplayFormat);
            }
            object.SubType = 0;
            object.Editable = false;
            if (options.bytes === String)
                object.EditMask = "";
            else {
                object.EditMask = [];
                if (options.bytes !== Array)
                    object.EditMask = $util.newBuffer(object.EditMask);
            }
            object.Browsable = false;
            if (options.bytes === String)
                object.ReturnClassName = "";
            else {
                object.ReturnClassName = [];
                if (options.bytes !== Array)
                    object.ReturnClassName = $util.newBuffer(object.ReturnClassName);
            }
            object.HasOptions = 0;
            if (options.bytes === String)
                object.FieldClassName = "";
            else {
                object.FieldClassName = [];
                if (options.bytes !== Array)
                    object.FieldClassName = $util.newBuffer(object.FieldClassName);
            }
            if (options.bytes === String)
                object.WEBDisplayFormat = "";
            else {
                object.WEBDisplayFormat = [];
                if (options.bytes !== Array)
                    object.WEBDisplayFormat = $util.newBuffer(object.WEBDisplayFormat);
            }
            if (options.bytes === String)
                object.WEBEditMask = "";
            else {
                object.WEBEditMask = [];
                if (options.bytes !== Array)
                    object.WEBEditMask = $util.newBuffer(object.WEBEditMask);
            }
            object.IsPK = false;
            object.IsOptional = false;
            object.CanBeUsedForGrouping = false;
            object.HasObjectToolTip = false;
        }
        if (message.FieldName != null && message.hasOwnProperty("FieldName"))
            object.FieldName = options.bytes === String ? $util.base64.encode(message.FieldName, 0, message.FieldName.length) : options.bytes === Array ? Array.prototype.slice.call(message.FieldName) : message.FieldName;
        if (message.FieldIndex != null && message.hasOwnProperty("FieldIndex"))
            object.FieldIndex = message.FieldIndex;
        if (message.FieldType != null && message.hasOwnProperty("FieldType"))
            object.FieldType = message.FieldType;
        if (message.Tooltip != null && message.hasOwnProperty("Tooltip"))
            object.Tooltip = options.bytes === String ? $util.base64.encode(message.Tooltip, 0, message.Tooltip.length) : options.bytes === Array ? Array.prototype.slice.call(message.Tooltip) : message.Tooltip;
        if (message.DisplayFormat != null && message.hasOwnProperty("DisplayFormat"))
            object.DisplayFormat = options.bytes === String ? $util.base64.encode(message.DisplayFormat, 0, message.DisplayFormat.length) : options.bytes === Array ? Array.prototype.slice.call(message.DisplayFormat) : message.DisplayFormat;
        if (message.SubType != null && message.hasOwnProperty("SubType"))
            object.SubType = message.SubType;
        if (message.Editable != null && message.hasOwnProperty("Editable"))
            object.Editable = message.Editable;
        if (message.EditMask != null && message.hasOwnProperty("EditMask"))
            object.EditMask = options.bytes === String ? $util.base64.encode(message.EditMask, 0, message.EditMask.length) : options.bytes === Array ? Array.prototype.slice.call(message.EditMask) : message.EditMask;
        if (message.Browsable != null && message.hasOwnProperty("Browsable"))
            object.Browsable = message.Browsable;
        if (message.ReturnClassName != null && message.hasOwnProperty("ReturnClassName"))
            object.ReturnClassName = options.bytes === String ? $util.base64.encode(message.ReturnClassName, 0, message.ReturnClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ReturnClassName) : message.ReturnClassName;
        if (message.HasOptions != null && message.hasOwnProperty("HasOptions"))
            object.HasOptions = message.HasOptions;
        if (message.FieldClassName != null && message.hasOwnProperty("FieldClassName"))
            object.FieldClassName = options.bytes === String ? $util.base64.encode(message.FieldClassName, 0, message.FieldClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.FieldClassName) : message.FieldClassName;
        if (message.WEBDisplayFormat != null && message.hasOwnProperty("WEBDisplayFormat"))
            object.WEBDisplayFormat = options.bytes === String ? $util.base64.encode(message.WEBDisplayFormat, 0, message.WEBDisplayFormat.length) : options.bytes === Array ? Array.prototype.slice.call(message.WEBDisplayFormat) : message.WEBDisplayFormat;
        if (message.WEBEditMask != null && message.hasOwnProperty("WEBEditMask"))
            object.WEBEditMask = options.bytes === String ? $util.base64.encode(message.WEBEditMask, 0, message.WEBEditMask.length) : options.bytes === Array ? Array.prototype.slice.call(message.WEBEditMask) : message.WEBEditMask;
        if (message.IsPK != null && message.hasOwnProperty("IsPK"))
            object.IsPK = message.IsPK;
        if (message.IsOptional != null && message.hasOwnProperty("IsOptional"))
            object.IsOptional = message.IsOptional;
        if (message.CanBeUsedForGrouping != null && message.hasOwnProperty("CanBeUsedForGrouping"))
            object.CanBeUsedForGrouping = message.CanBeUsedForGrouping;
        if (message.HasObjectToolTip != null && message.hasOwnProperty("HasObjectToolTip"))
            object.HasObjectToolTip = message.HasObjectToolTip;
        return object;
    };

    /**
     * Converts this Proto_ClassField to JSON.
     * @function toJSON
     * @memberof Proto_ClassField
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ClassField.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ClassField;
})();

$root.Proto_DataSetRequest = (function() {

    /**
     * Properties of a Proto_DataSetRequest.
     * @exports IProto_DataSetRequest
     * @interface IProto_DataSetRequest
     * @property {number|null} [PreserveSequenceInfo] Proto_DataSetRequest PreserveSequenceInfo
     * @property {Array.<IProto_DataRelationRequest>|null} [relationrequest] Proto_DataSetRequest relationrequest
     * @property {Array.<IProto_GlobalFilterItem>|null} [filteritem] Proto_DataSetRequest filteritem
     */

    /**
     * Constructs a new Proto_DataSetRequest.
     * @exports Proto_DataSetRequest
     * @classdesc Represents a Proto_DataSetRequest.
     * @implements IProto_DataSetRequest
     * @constructor
     * @param {IProto_DataSetRequest=} [properties] Properties to set
     */
    function Proto_DataSetRequest(properties) {
        this.relationrequest = [];
        this.filteritem = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataSetRequest PreserveSequenceInfo.
     * @member {number} PreserveSequenceInfo
     * @memberof Proto_DataSetRequest
     * @instance
     */
    Proto_DataSetRequest.prototype.PreserveSequenceInfo = 0;

    /**
     * Proto_DataSetRequest relationrequest.
     * @member {Array.<IProto_DataRelationRequest>} relationrequest
     * @memberof Proto_DataSetRequest
     * @instance
     */
    Proto_DataSetRequest.prototype.relationrequest = $util.emptyArray;

    /**
     * Proto_DataSetRequest filteritem.
     * @member {Array.<IProto_GlobalFilterItem>} filteritem
     * @memberof Proto_DataSetRequest
     * @instance
     */
    Proto_DataSetRequest.prototype.filteritem = $util.emptyArray;

    /**
     * Creates a new Proto_DataSetRequest instance using the specified properties.
     * @function create
     * @memberof Proto_DataSetRequest
     * @static
     * @param {IProto_DataSetRequest=} [properties] Properties to set
     * @returns {Proto_DataSetRequest} Proto_DataSetRequest instance
     */
    Proto_DataSetRequest.create = function create(properties) {
        return new Proto_DataSetRequest(properties);
    };

    /**
     * Encodes the specified Proto_DataSetRequest message. Does not implicitly {@link Proto_DataSetRequest.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataSetRequest
     * @static
     * @param {IProto_DataSetRequest} message Proto_DataSetRequest message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRequest.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.PreserveSequenceInfo != null && Object.hasOwnProperty.call(message, "PreserveSequenceInfo"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.PreserveSequenceInfo);
        if (message.relationrequest != null && message.relationrequest.length)
            for (var i = 0; i < message.relationrequest.length; ++i)
                $root.Proto_DataRelationRequest.encode(message.relationrequest[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
        if (message.filteritem != null && message.filteritem.length)
            for (var i = 0; i < message.filteritem.length; ++i)
                $root.Proto_GlobalFilterItem.encode(message.filteritem[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_DataSetRequest message, length delimited. Does not implicitly {@link Proto_DataSetRequest.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataSetRequest
     * @static
     * @param {IProto_DataSetRequest} message Proto_DataSetRequest message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataSetRequest message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataSetRequest
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataSetRequest} Proto_DataSetRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRequest.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataSetRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.PreserveSequenceInfo = reader.int32();
                break;
            case 2:
                if (!(message.relationrequest && message.relationrequest.length))
                    message.relationrequest = [];
                message.relationrequest.push($root.Proto_DataRelationRequest.decode(reader, reader.uint32()));
                break;
            case 3:
                if (!(message.filteritem && message.filteritem.length))
                    message.filteritem = [];
                message.filteritem.push($root.Proto_GlobalFilterItem.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataSetRequest message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataSetRequest
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataSetRequest} Proto_DataSetRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRequest.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataSetRequest message.
     * @function verify
     * @memberof Proto_DataSetRequest
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataSetRequest.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.PreserveSequenceInfo != null && message.hasOwnProperty("PreserveSequenceInfo"))
            if (!$util.isInteger(message.PreserveSequenceInfo))
                return "PreserveSequenceInfo: integer expected";
        if (message.relationrequest != null && message.hasOwnProperty("relationrequest")) {
            if (!Array.isArray(message.relationrequest))
                return "relationrequest: array expected";
            for (var i = 0; i < message.relationrequest.length; ++i) {
                var error = $root.Proto_DataRelationRequest.verify(message.relationrequest[i]);
                if (error)
                    return "relationrequest." + error;
            }
        }
        if (message.filteritem != null && message.hasOwnProperty("filteritem")) {
            if (!Array.isArray(message.filteritem))
                return "filteritem: array expected";
            for (var i = 0; i < message.filteritem.length; ++i) {
                var error = $root.Proto_GlobalFilterItem.verify(message.filteritem[i]);
                if (error)
                    return "filteritem." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_DataSetRequest message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataSetRequest
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataSetRequest} Proto_DataSetRequest
     */
    Proto_DataSetRequest.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataSetRequest)
            return object;
        var message = new $root.Proto_DataSetRequest();
        if (object.PreserveSequenceInfo != null)
            message.PreserveSequenceInfo = object.PreserveSequenceInfo | 0;
        if (object.relationrequest) {
            if (!Array.isArray(object.relationrequest))
                throw TypeError(".Proto_DataSetRequest.relationrequest: array expected");
            message.relationrequest = [];
            for (var i = 0; i < object.relationrequest.length; ++i) {
                if (typeof object.relationrequest[i] !== "object")
                    throw TypeError(".Proto_DataSetRequest.relationrequest: object expected");
                message.relationrequest[i] = $root.Proto_DataRelationRequest.fromObject(object.relationrequest[i]);
            }
        }
        if (object.filteritem) {
            if (!Array.isArray(object.filteritem))
                throw TypeError(".Proto_DataSetRequest.filteritem: array expected");
            message.filteritem = [];
            for (var i = 0; i < object.filteritem.length; ++i) {
                if (typeof object.filteritem[i] !== "object")
                    throw TypeError(".Proto_DataSetRequest.filteritem: object expected");
                message.filteritem[i] = $root.Proto_GlobalFilterItem.fromObject(object.filteritem[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataSetRequest message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataSetRequest
     * @static
     * @param {Proto_DataSetRequest} message Proto_DataSetRequest
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataSetRequest.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.relationrequest = [];
            object.filteritem = [];
        }
        if (options.defaults)
            object.PreserveSequenceInfo = 0;
        if (message.PreserveSequenceInfo != null && message.hasOwnProperty("PreserveSequenceInfo"))
            object.PreserveSequenceInfo = message.PreserveSequenceInfo;
        if (message.relationrequest && message.relationrequest.length) {
            object.relationrequest = [];
            for (var j = 0; j < message.relationrequest.length; ++j)
                object.relationrequest[j] = $root.Proto_DataRelationRequest.toObject(message.relationrequest[j], options);
        }
        if (message.filteritem && message.filteritem.length) {
            object.filteritem = [];
            for (var j = 0; j < message.filteritem.length; ++j)
                object.filteritem[j] = $root.Proto_GlobalFilterItem.toObject(message.filteritem[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_DataSetRequest to JSON.
     * @function toJSON
     * @memberof Proto_DataSetRequest
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataSetRequest.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataSetRequest;
})();

$root.Proto_GlobalFilterItem = (function() {

    /**
     * Properties of a Proto_GlobalFilterItem.
     * @exports IProto_GlobalFilterItem
     * @interface IProto_GlobalFilterItem
     * @property {Array.<IProto_GlobalFilterField>|null} [FilterField] Proto_GlobalFilterItem FilterField
     * @property {Array.<number>|null} [ExcludedRelations] Proto_GlobalFilterItem ExcludedRelations
     * @property {boolean|null} [IsNull] Proto_GlobalFilterItem IsNull
     * @property {IProto_GlobalFilter_String_Unary|null} [String_Unary] Proto_GlobalFilterItem String_Unary
     * @property {IProto_GlobalFilter_String_Multiary|null} [String_Multiary] Proto_GlobalFilterItem String_Multiary
     * @property {IProto_GlobalFilter_Integer_Unary|null} [Integer_Unary] Proto_GlobalFilterItem Integer_Unary
     * @property {IProto_GlobalFilter_Integer_Binary|null} [Integer_Binary] Proto_GlobalFilterItem Integer_Binary
     * @property {IProto_GlobalFilter_Integer_Multiary|null} [Integer_Multiary] Proto_GlobalFilterItem Integer_Multiary
     * @property {IProto_GlobalFilter_Decimal_Unary|null} [Decimal_Unary] Proto_GlobalFilterItem Decimal_Unary
     * @property {IProto_GlobalFilter_Decimal_Binary|null} [Decimal_Binary] Proto_GlobalFilterItem Decimal_Binary
     * @property {IProto_GlobalFilter_Decimal_Multiary|null} [Decimal_Multiary] Proto_GlobalFilterItem Decimal_Multiary
     * @property {IProto_GlobalFilter_Datetime_Binary|null} [Datetime_Binary] Proto_GlobalFilterItem Datetime_Binary
     * @property {IProto_GlobalFilter_Datetime_Unary|null} [Datetime_Unary] Proto_GlobalFilterItem Datetime_Unary
     */

    /**
     * Constructs a new Proto_GlobalFilterItem.
     * @exports Proto_GlobalFilterItem
     * @classdesc Represents a Proto_GlobalFilterItem.
     * @implements IProto_GlobalFilterItem
     * @constructor
     * @param {IProto_GlobalFilterItem=} [properties] Properties to set
     */
    function Proto_GlobalFilterItem(properties) {
        this.FilterField = [];
        this.ExcludedRelations = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilterItem FilterField.
     * @member {Array.<IProto_GlobalFilterField>} FilterField
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.FilterField = $util.emptyArray;

    /**
     * Proto_GlobalFilterItem ExcludedRelations.
     * @member {Array.<number>} ExcludedRelations
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.ExcludedRelations = $util.emptyArray;

    /**
     * Proto_GlobalFilterItem IsNull.
     * @member {boolean|null|undefined} IsNull
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.IsNull = null;

    /**
     * Proto_GlobalFilterItem String_Unary.
     * @member {IProto_GlobalFilter_String_Unary|null|undefined} String_Unary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.String_Unary = null;

    /**
     * Proto_GlobalFilterItem String_Multiary.
     * @member {IProto_GlobalFilter_String_Multiary|null|undefined} String_Multiary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.String_Multiary = null;

    /**
     * Proto_GlobalFilterItem Integer_Unary.
     * @member {IProto_GlobalFilter_Integer_Unary|null|undefined} Integer_Unary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.Integer_Unary = null;

    /**
     * Proto_GlobalFilterItem Integer_Binary.
     * @member {IProto_GlobalFilter_Integer_Binary|null|undefined} Integer_Binary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.Integer_Binary = null;

    /**
     * Proto_GlobalFilterItem Integer_Multiary.
     * @member {IProto_GlobalFilter_Integer_Multiary|null|undefined} Integer_Multiary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.Integer_Multiary = null;

    /**
     * Proto_GlobalFilterItem Decimal_Unary.
     * @member {IProto_GlobalFilter_Decimal_Unary|null|undefined} Decimal_Unary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.Decimal_Unary = null;

    /**
     * Proto_GlobalFilterItem Decimal_Binary.
     * @member {IProto_GlobalFilter_Decimal_Binary|null|undefined} Decimal_Binary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.Decimal_Binary = null;

    /**
     * Proto_GlobalFilterItem Decimal_Multiary.
     * @member {IProto_GlobalFilter_Decimal_Multiary|null|undefined} Decimal_Multiary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.Decimal_Multiary = null;

    /**
     * Proto_GlobalFilterItem Datetime_Binary.
     * @member {IProto_GlobalFilter_Datetime_Binary|null|undefined} Datetime_Binary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.Datetime_Binary = null;

    /**
     * Proto_GlobalFilterItem Datetime_Unary.
     * @member {IProto_GlobalFilter_Datetime_Unary|null|undefined} Datetime_Unary
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Proto_GlobalFilterItem.prototype.Datetime_Unary = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_GlobalFilterItem FieldValue.
     * @member {"IsNull"|"String_Unary"|"String_Multiary"|"Integer_Unary"|"Integer_Binary"|"Integer_Multiary"|"Decimal_Unary"|"Decimal_Binary"|"Decimal_Multiary"|"Datetime_Binary"|"Datetime_Unary"|undefined} FieldValue
     * @memberof Proto_GlobalFilterItem
     * @instance
     */
    Object.defineProperty(Proto_GlobalFilterItem.prototype, "FieldValue", {
        get: $util.oneOfGetter($oneOfFields = ["IsNull", "String_Unary", "String_Multiary", "Integer_Unary", "Integer_Binary", "Integer_Multiary", "Decimal_Unary", "Decimal_Binary", "Decimal_Multiary", "Datetime_Binary", "Datetime_Unary"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_GlobalFilterItem instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilterItem
     * @static
     * @param {IProto_GlobalFilterItem=} [properties] Properties to set
     * @returns {Proto_GlobalFilterItem} Proto_GlobalFilterItem instance
     */
    Proto_GlobalFilterItem.create = function create(properties) {
        return new Proto_GlobalFilterItem(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilterItem message. Does not implicitly {@link Proto_GlobalFilterItem.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilterItem
     * @static
     * @param {IProto_GlobalFilterItem} message Proto_GlobalFilterItem message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilterItem.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.FilterField != null && message.FilterField.length)
            for (var i = 0; i < message.FilterField.length; ++i)
                $root.Proto_GlobalFilterField.encode(message.FilterField[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.ExcludedRelations != null && message.ExcludedRelations.length) {
            writer.uint32(/* id 2, wireType 2 =*/18).fork();
            for (var i = 0; i < message.ExcludedRelations.length; ++i)
                writer.int32(message.ExcludedRelations[i]);
            writer.ldelim();
        }
        if (message.IsNull != null && Object.hasOwnProperty.call(message, "IsNull"))
            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.IsNull);
        if (message.String_Unary != null && Object.hasOwnProperty.call(message, "String_Unary"))
            $root.Proto_GlobalFilter_String_Unary.encode(message.String_Unary, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
        if (message.String_Multiary != null && Object.hasOwnProperty.call(message, "String_Multiary"))
            $root.Proto_GlobalFilter_String_Multiary.encode(message.String_Multiary, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
        if (message.Integer_Unary != null && Object.hasOwnProperty.call(message, "Integer_Unary"))
            $root.Proto_GlobalFilter_Integer_Unary.encode(message.Integer_Unary, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
        if (message.Integer_Binary != null && Object.hasOwnProperty.call(message, "Integer_Binary"))
            $root.Proto_GlobalFilter_Integer_Binary.encode(message.Integer_Binary, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
        if (message.Integer_Multiary != null && Object.hasOwnProperty.call(message, "Integer_Multiary"))
            $root.Proto_GlobalFilter_Integer_Multiary.encode(message.Integer_Multiary, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
        if (message.Decimal_Unary != null && Object.hasOwnProperty.call(message, "Decimal_Unary"))
            $root.Proto_GlobalFilter_Decimal_Unary.encode(message.Decimal_Unary, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
        if (message.Decimal_Binary != null && Object.hasOwnProperty.call(message, "Decimal_Binary"))
            $root.Proto_GlobalFilter_Decimal_Binary.encode(message.Decimal_Binary, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
        if (message.Decimal_Multiary != null && Object.hasOwnProperty.call(message, "Decimal_Multiary"))
            $root.Proto_GlobalFilter_Decimal_Multiary.encode(message.Decimal_Multiary, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
        if (message.Datetime_Binary != null && Object.hasOwnProperty.call(message, "Datetime_Binary"))
            $root.Proto_GlobalFilter_Datetime_Binary.encode(message.Datetime_Binary, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
        if (message.Datetime_Unary != null && Object.hasOwnProperty.call(message, "Datetime_Unary"))
            $root.Proto_GlobalFilter_Datetime_Unary.encode(message.Datetime_Unary, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilterItem message, length delimited. Does not implicitly {@link Proto_GlobalFilterItem.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilterItem
     * @static
     * @param {IProto_GlobalFilterItem} message Proto_GlobalFilterItem message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilterItem.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilterItem message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilterItem
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilterItem} Proto_GlobalFilterItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilterItem.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilterItem();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.FilterField && message.FilterField.length))
                    message.FilterField = [];
                message.FilterField.push($root.Proto_GlobalFilterField.decode(reader, reader.uint32()));
                break;
            case 2:
                if (!(message.ExcludedRelations && message.ExcludedRelations.length))
                    message.ExcludedRelations = [];
                if ((tag & 7) === 2) {
                    var end2 = reader.uint32() + reader.pos;
                    while (reader.pos < end2)
                        message.ExcludedRelations.push(reader.int32());
                } else
                    message.ExcludedRelations.push(reader.int32());
                break;
            case 10:
                message.IsNull = reader.bool();
                break;
            case 11:
                message.String_Unary = $root.Proto_GlobalFilter_String_Unary.decode(reader, reader.uint32());
                break;
            case 12:
                message.String_Multiary = $root.Proto_GlobalFilter_String_Multiary.decode(reader, reader.uint32());
                break;
            case 13:
                message.Integer_Unary = $root.Proto_GlobalFilter_Integer_Unary.decode(reader, reader.uint32());
                break;
            case 14:
                message.Integer_Binary = $root.Proto_GlobalFilter_Integer_Binary.decode(reader, reader.uint32());
                break;
            case 15:
                message.Integer_Multiary = $root.Proto_GlobalFilter_Integer_Multiary.decode(reader, reader.uint32());
                break;
            case 16:
                message.Decimal_Unary = $root.Proto_GlobalFilter_Decimal_Unary.decode(reader, reader.uint32());
                break;
            case 17:
                message.Decimal_Binary = $root.Proto_GlobalFilter_Decimal_Binary.decode(reader, reader.uint32());
                break;
            case 18:
                message.Decimal_Multiary = $root.Proto_GlobalFilter_Decimal_Multiary.decode(reader, reader.uint32());
                break;
            case 19:
                message.Datetime_Binary = $root.Proto_GlobalFilter_Datetime_Binary.decode(reader, reader.uint32());
                break;
            case 20:
                message.Datetime_Unary = $root.Proto_GlobalFilter_Datetime_Unary.decode(reader, reader.uint32());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilterItem message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilterItem
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilterItem} Proto_GlobalFilterItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilterItem.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilterItem message.
     * @function verify
     * @memberof Proto_GlobalFilterItem
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilterItem.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.FilterField != null && message.hasOwnProperty("FilterField")) {
            if (!Array.isArray(message.FilterField))
                return "FilterField: array expected";
            for (var i = 0; i < message.FilterField.length; ++i) {
                var error = $root.Proto_GlobalFilterField.verify(message.FilterField[i]);
                if (error)
                    return "FilterField." + error;
            }
        }
        if (message.ExcludedRelations != null && message.hasOwnProperty("ExcludedRelations")) {
            if (!Array.isArray(message.ExcludedRelations))
                return "ExcludedRelations: array expected";
            for (var i = 0; i < message.ExcludedRelations.length; ++i)
                if (!$util.isInteger(message.ExcludedRelations[i]))
                    return "ExcludedRelations: integer[] expected";
        }
        if (message.IsNull != null && message.hasOwnProperty("IsNull")) {
            properties.FieldValue = 1;
            if (typeof message.IsNull !== "boolean")
                return "IsNull: boolean expected";
        }
        if (message.String_Unary != null && message.hasOwnProperty("String_Unary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_String_Unary.verify(message.String_Unary);
                if (error)
                    return "String_Unary." + error;
            }
        }
        if (message.String_Multiary != null && message.hasOwnProperty("String_Multiary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_String_Multiary.verify(message.String_Multiary);
                if (error)
                    return "String_Multiary." + error;
            }
        }
        if (message.Integer_Unary != null && message.hasOwnProperty("Integer_Unary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_Integer_Unary.verify(message.Integer_Unary);
                if (error)
                    return "Integer_Unary." + error;
            }
        }
        if (message.Integer_Binary != null && message.hasOwnProperty("Integer_Binary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_Integer_Binary.verify(message.Integer_Binary);
                if (error)
                    return "Integer_Binary." + error;
            }
        }
        if (message.Integer_Multiary != null && message.hasOwnProperty("Integer_Multiary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_Integer_Multiary.verify(message.Integer_Multiary);
                if (error)
                    return "Integer_Multiary." + error;
            }
        }
        if (message.Decimal_Unary != null && message.hasOwnProperty("Decimal_Unary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_Decimal_Unary.verify(message.Decimal_Unary);
                if (error)
                    return "Decimal_Unary." + error;
            }
        }
        if (message.Decimal_Binary != null && message.hasOwnProperty("Decimal_Binary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_Decimal_Binary.verify(message.Decimal_Binary);
                if (error)
                    return "Decimal_Binary." + error;
            }
        }
        if (message.Decimal_Multiary != null && message.hasOwnProperty("Decimal_Multiary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_Decimal_Multiary.verify(message.Decimal_Multiary);
                if (error)
                    return "Decimal_Multiary." + error;
            }
        }
        if (message.Datetime_Binary != null && message.hasOwnProperty("Datetime_Binary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_Datetime_Binary.verify(message.Datetime_Binary);
                if (error)
                    return "Datetime_Binary." + error;
            }
        }
        if (message.Datetime_Unary != null && message.hasOwnProperty("Datetime_Unary")) {
            if (properties.FieldValue === 1)
                return "FieldValue: multiple values";
            properties.FieldValue = 1;
            {
                var error = $root.Proto_GlobalFilter_Datetime_Unary.verify(message.Datetime_Unary);
                if (error)
                    return "Datetime_Unary." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_GlobalFilterItem message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilterItem
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilterItem} Proto_GlobalFilterItem
     */
    Proto_GlobalFilterItem.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilterItem)
            return object;
        var message = new $root.Proto_GlobalFilterItem();
        if (object.FilterField) {
            if (!Array.isArray(object.FilterField))
                throw TypeError(".Proto_GlobalFilterItem.FilterField: array expected");
            message.FilterField = [];
            for (var i = 0; i < object.FilterField.length; ++i) {
                if (typeof object.FilterField[i] !== "object")
                    throw TypeError(".Proto_GlobalFilterItem.FilterField: object expected");
                message.FilterField[i] = $root.Proto_GlobalFilterField.fromObject(object.FilterField[i]);
            }
        }
        if (object.ExcludedRelations) {
            if (!Array.isArray(object.ExcludedRelations))
                throw TypeError(".Proto_GlobalFilterItem.ExcludedRelations: array expected");
            message.ExcludedRelations = [];
            for (var i = 0; i < object.ExcludedRelations.length; ++i)
                message.ExcludedRelations[i] = object.ExcludedRelations[i] | 0;
        }
        if (object.IsNull != null)
            message.IsNull = Boolean(object.IsNull);
        if (object.String_Unary != null) {
            if (typeof object.String_Unary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.String_Unary: object expected");
            message.String_Unary = $root.Proto_GlobalFilter_String_Unary.fromObject(object.String_Unary);
        }
        if (object.String_Multiary != null) {
            if (typeof object.String_Multiary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.String_Multiary: object expected");
            message.String_Multiary = $root.Proto_GlobalFilter_String_Multiary.fromObject(object.String_Multiary);
        }
        if (object.Integer_Unary != null) {
            if (typeof object.Integer_Unary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.Integer_Unary: object expected");
            message.Integer_Unary = $root.Proto_GlobalFilter_Integer_Unary.fromObject(object.Integer_Unary);
        }
        if (object.Integer_Binary != null) {
            if (typeof object.Integer_Binary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.Integer_Binary: object expected");
            message.Integer_Binary = $root.Proto_GlobalFilter_Integer_Binary.fromObject(object.Integer_Binary);
        }
        if (object.Integer_Multiary != null) {
            if (typeof object.Integer_Multiary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.Integer_Multiary: object expected");
            message.Integer_Multiary = $root.Proto_GlobalFilter_Integer_Multiary.fromObject(object.Integer_Multiary);
        }
        if (object.Decimal_Unary != null) {
            if (typeof object.Decimal_Unary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.Decimal_Unary: object expected");
            message.Decimal_Unary = $root.Proto_GlobalFilter_Decimal_Unary.fromObject(object.Decimal_Unary);
        }
        if (object.Decimal_Binary != null) {
            if (typeof object.Decimal_Binary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.Decimal_Binary: object expected");
            message.Decimal_Binary = $root.Proto_GlobalFilter_Decimal_Binary.fromObject(object.Decimal_Binary);
        }
        if (object.Decimal_Multiary != null) {
            if (typeof object.Decimal_Multiary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.Decimal_Multiary: object expected");
            message.Decimal_Multiary = $root.Proto_GlobalFilter_Decimal_Multiary.fromObject(object.Decimal_Multiary);
        }
        if (object.Datetime_Binary != null) {
            if (typeof object.Datetime_Binary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.Datetime_Binary: object expected");
            message.Datetime_Binary = $root.Proto_GlobalFilter_Datetime_Binary.fromObject(object.Datetime_Binary);
        }
        if (object.Datetime_Unary != null) {
            if (typeof object.Datetime_Unary !== "object")
                throw TypeError(".Proto_GlobalFilterItem.Datetime_Unary: object expected");
            message.Datetime_Unary = $root.Proto_GlobalFilter_Datetime_Unary.fromObject(object.Datetime_Unary);
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilterItem message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilterItem
     * @static
     * @param {Proto_GlobalFilterItem} message Proto_GlobalFilterItem
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilterItem.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.FilterField = [];
            object.ExcludedRelations = [];
        }
        if (message.FilterField && message.FilterField.length) {
            object.FilterField = [];
            for (var j = 0; j < message.FilterField.length; ++j)
                object.FilterField[j] = $root.Proto_GlobalFilterField.toObject(message.FilterField[j], options);
        }
        if (message.ExcludedRelations && message.ExcludedRelations.length) {
            object.ExcludedRelations = [];
            for (var j = 0; j < message.ExcludedRelations.length; ++j)
                object.ExcludedRelations[j] = message.ExcludedRelations[j];
        }
        if (message.IsNull != null && message.hasOwnProperty("IsNull")) {
            object.IsNull = message.IsNull;
            if (options.oneofs)
                object.FieldValue = "IsNull";
        }
        if (message.String_Unary != null && message.hasOwnProperty("String_Unary")) {
            object.String_Unary = $root.Proto_GlobalFilter_String_Unary.toObject(message.String_Unary, options);
            if (options.oneofs)
                object.FieldValue = "String_Unary";
        }
        if (message.String_Multiary != null && message.hasOwnProperty("String_Multiary")) {
            object.String_Multiary = $root.Proto_GlobalFilter_String_Multiary.toObject(message.String_Multiary, options);
            if (options.oneofs)
                object.FieldValue = "String_Multiary";
        }
        if (message.Integer_Unary != null && message.hasOwnProperty("Integer_Unary")) {
            object.Integer_Unary = $root.Proto_GlobalFilter_Integer_Unary.toObject(message.Integer_Unary, options);
            if (options.oneofs)
                object.FieldValue = "Integer_Unary";
        }
        if (message.Integer_Binary != null && message.hasOwnProperty("Integer_Binary")) {
            object.Integer_Binary = $root.Proto_GlobalFilter_Integer_Binary.toObject(message.Integer_Binary, options);
            if (options.oneofs)
                object.FieldValue = "Integer_Binary";
        }
        if (message.Integer_Multiary != null && message.hasOwnProperty("Integer_Multiary")) {
            object.Integer_Multiary = $root.Proto_GlobalFilter_Integer_Multiary.toObject(message.Integer_Multiary, options);
            if (options.oneofs)
                object.FieldValue = "Integer_Multiary";
        }
        if (message.Decimal_Unary != null && message.hasOwnProperty("Decimal_Unary")) {
            object.Decimal_Unary = $root.Proto_GlobalFilter_Decimal_Unary.toObject(message.Decimal_Unary, options);
            if (options.oneofs)
                object.FieldValue = "Decimal_Unary";
        }
        if (message.Decimal_Binary != null && message.hasOwnProperty("Decimal_Binary")) {
            object.Decimal_Binary = $root.Proto_GlobalFilter_Decimal_Binary.toObject(message.Decimal_Binary, options);
            if (options.oneofs)
                object.FieldValue = "Decimal_Binary";
        }
        if (message.Decimal_Multiary != null && message.hasOwnProperty("Decimal_Multiary")) {
            object.Decimal_Multiary = $root.Proto_GlobalFilter_Decimal_Multiary.toObject(message.Decimal_Multiary, options);
            if (options.oneofs)
                object.FieldValue = "Decimal_Multiary";
        }
        if (message.Datetime_Binary != null && message.hasOwnProperty("Datetime_Binary")) {
            object.Datetime_Binary = $root.Proto_GlobalFilter_Datetime_Binary.toObject(message.Datetime_Binary, options);
            if (options.oneofs)
                object.FieldValue = "Datetime_Binary";
        }
        if (message.Datetime_Unary != null && message.hasOwnProperty("Datetime_Unary")) {
            object.Datetime_Unary = $root.Proto_GlobalFilter_Datetime_Unary.toObject(message.Datetime_Unary, options);
            if (options.oneofs)
                object.FieldValue = "Datetime_Unary";
        }
        return object;
    };

    /**
     * Converts this Proto_GlobalFilterItem to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilterItem
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilterItem.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilterItem;
})();

$root.Proto_GlobalFilterField = (function() {

    /**
     * Properties of a Proto_GlobalFilterField.
     * @exports IProto_GlobalFilterField
     * @interface IProto_GlobalFilterField
     * @property {Uint8Array|null} [ClassName] Proto_GlobalFilterField ClassName
     * @property {Uint8Array|null} [FieldName] Proto_GlobalFilterField FieldName
     */

    /**
     * Constructs a new Proto_GlobalFilterField.
     * @exports Proto_GlobalFilterField
     * @classdesc Represents a Proto_GlobalFilterField.
     * @implements IProto_GlobalFilterField
     * @constructor
     * @param {IProto_GlobalFilterField=} [properties] Properties to set
     */
    function Proto_GlobalFilterField(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilterField ClassName.
     * @member {Uint8Array} ClassName
     * @memberof Proto_GlobalFilterField
     * @instance
     */
    Proto_GlobalFilterField.prototype.ClassName = $util.newBuffer([]);

    /**
     * Proto_GlobalFilterField FieldName.
     * @member {Uint8Array} FieldName
     * @memberof Proto_GlobalFilterField
     * @instance
     */
    Proto_GlobalFilterField.prototype.FieldName = $util.newBuffer([]);

    /**
     * Creates a new Proto_GlobalFilterField instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilterField
     * @static
     * @param {IProto_GlobalFilterField=} [properties] Properties to set
     * @returns {Proto_GlobalFilterField} Proto_GlobalFilterField instance
     */
    Proto_GlobalFilterField.create = function create(properties) {
        return new Proto_GlobalFilterField(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilterField message. Does not implicitly {@link Proto_GlobalFilterField.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilterField
     * @static
     * @param {IProto_GlobalFilterField} message Proto_GlobalFilterField message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilterField.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ClassName != null && Object.hasOwnProperty.call(message, "ClassName"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ClassName);
        if (message.FieldName != null && Object.hasOwnProperty.call(message, "FieldName"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.FieldName);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilterField message, length delimited. Does not implicitly {@link Proto_GlobalFilterField.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilterField
     * @static
     * @param {IProto_GlobalFilterField} message Proto_GlobalFilterField message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilterField.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilterField message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilterField
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilterField} Proto_GlobalFilterField
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilterField.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilterField();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ClassName = reader.bytes();
                break;
            case 2:
                message.FieldName = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilterField message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilterField
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilterField} Proto_GlobalFilterField
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilterField.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilterField message.
     * @function verify
     * @memberof Proto_GlobalFilterField
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilterField.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            if (!(message.ClassName && typeof message.ClassName.length === "number" || $util.isString(message.ClassName)))
                return "ClassName: buffer expected";
        if (message.FieldName != null && message.hasOwnProperty("FieldName"))
            if (!(message.FieldName && typeof message.FieldName.length === "number" || $util.isString(message.FieldName)))
                return "FieldName: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_GlobalFilterField message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilterField
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilterField} Proto_GlobalFilterField
     */
    Proto_GlobalFilterField.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilterField)
            return object;
        var message = new $root.Proto_GlobalFilterField();
        if (object.ClassName != null)
            if (typeof object.ClassName === "string")
                $util.base64.decode(object.ClassName, message.ClassName = $util.newBuffer($util.base64.length(object.ClassName)), 0);
            else if (object.ClassName.length)
                message.ClassName = object.ClassName;
        if (object.FieldName != null)
            if (typeof object.FieldName === "string")
                $util.base64.decode(object.FieldName, message.FieldName = $util.newBuffer($util.base64.length(object.FieldName)), 0);
            else if (object.FieldName.length)
                message.FieldName = object.FieldName;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilterField message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilterField
     * @static
     * @param {Proto_GlobalFilterField} message Proto_GlobalFilterField
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilterField.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ClassName = "";
            else {
                object.ClassName = [];
                if (options.bytes !== Array)
                    object.ClassName = $util.newBuffer(object.ClassName);
            }
            if (options.bytes === String)
                object.FieldName = "";
            else {
                object.FieldName = [];
                if (options.bytes !== Array)
                    object.FieldName = $util.newBuffer(object.FieldName);
            }
        }
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            object.ClassName = options.bytes === String ? $util.base64.encode(message.ClassName, 0, message.ClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ClassName) : message.ClassName;
        if (message.FieldName != null && message.hasOwnProperty("FieldName"))
            object.FieldName = options.bytes === String ? $util.base64.encode(message.FieldName, 0, message.FieldName.length) : options.bytes === Array ? Array.prototype.slice.call(message.FieldName) : message.FieldName;
        return object;
    };

    /**
     * Converts this Proto_GlobalFilterField to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilterField
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilterField.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilterField;
})();

$root.Proto_GlobalFilter_String_Unary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_String_Unary.
     * @exports IProto_GlobalFilter_String_Unary
     * @interface IProto_GlobalFilter_String_Unary
     * @property {Uint8Array|null} [Operand] Proto_GlobalFilter_String_Unary Operand
     * @property {boolean|null} [ICEquals] Proto_GlobalFilter_String_Unary ICEquals
     * @property {boolean|null} [DoesNotEqual] Proto_GlobalFilter_String_Unary DoesNotEqual
     * @property {boolean|null} [Contains] Proto_GlobalFilter_String_Unary Contains
     * @property {boolean|null} [NotContains] Proto_GlobalFilter_String_Unary NotContains
     * @property {boolean|null} [StartsWith] Proto_GlobalFilter_String_Unary StartsWith
     * @property {boolean|null} [EndsWith] Proto_GlobalFilter_String_Unary EndsWith
     * @property {boolean|null} [Like] Proto_GlobalFilter_String_Unary Like
     * @property {boolean|null} [NotLike] Proto_GlobalFilter_String_Unary NotLike
     */

    /**
     * Constructs a new Proto_GlobalFilter_String_Unary.
     * @exports Proto_GlobalFilter_String_Unary
     * @classdesc Represents a Proto_GlobalFilter_String_Unary.
     * @implements IProto_GlobalFilter_String_Unary
     * @constructor
     * @param {IProto_GlobalFilter_String_Unary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_String_Unary(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_String_Unary Operand.
     * @member {Uint8Array} Operand
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Proto_GlobalFilter_String_Unary.prototype.Operand = $util.newBuffer([]);

    /**
     * Proto_GlobalFilter_String_Unary ICEquals.
     * @member {boolean|null|undefined} ICEquals
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Proto_GlobalFilter_String_Unary.prototype.ICEquals = null;

    /**
     * Proto_GlobalFilter_String_Unary DoesNotEqual.
     * @member {boolean|null|undefined} DoesNotEqual
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Proto_GlobalFilter_String_Unary.prototype.DoesNotEqual = null;

    /**
     * Proto_GlobalFilter_String_Unary Contains.
     * @member {boolean|null|undefined} Contains
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Proto_GlobalFilter_String_Unary.prototype.Contains = null;

    /**
     * Proto_GlobalFilter_String_Unary NotContains.
     * @member {boolean|null|undefined} NotContains
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Proto_GlobalFilter_String_Unary.prototype.NotContains = null;

    /**
     * Proto_GlobalFilter_String_Unary StartsWith.
     * @member {boolean|null|undefined} StartsWith
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Proto_GlobalFilter_String_Unary.prototype.StartsWith = null;

    /**
     * Proto_GlobalFilter_String_Unary EndsWith.
     * @member {boolean|null|undefined} EndsWith
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Proto_GlobalFilter_String_Unary.prototype.EndsWith = null;

    /**
     * Proto_GlobalFilter_String_Unary Like.
     * @member {boolean|null|undefined} Like
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Proto_GlobalFilter_String_Unary.prototype.Like = null;

    /**
     * Proto_GlobalFilter_String_Unary NotLike.
     * @member {boolean|null|undefined} NotLike
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Proto_GlobalFilter_String_Unary.prototype.NotLike = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_GlobalFilter_String_Unary Operator.
     * @member {"ICEquals"|"DoesNotEqual"|"Contains"|"NotContains"|"StartsWith"|"EndsWith"|"Like"|"NotLike"|undefined} Operator
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     */
    Object.defineProperty(Proto_GlobalFilter_String_Unary.prototype, "Operator", {
        get: $util.oneOfGetter($oneOfFields = ["ICEquals", "DoesNotEqual", "Contains", "NotContains", "StartsWith", "EndsWith", "Like", "NotLike"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_GlobalFilter_String_Unary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_String_Unary
     * @static
     * @param {IProto_GlobalFilter_String_Unary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_String_Unary} Proto_GlobalFilter_String_Unary instance
     */
    Proto_GlobalFilter_String_Unary.create = function create(properties) {
        return new Proto_GlobalFilter_String_Unary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_String_Unary message. Does not implicitly {@link Proto_GlobalFilter_String_Unary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_String_Unary
     * @static
     * @param {IProto_GlobalFilter_String_Unary} message Proto_GlobalFilter_String_Unary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_String_Unary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operand != null && Object.hasOwnProperty.call(message, "Operand"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Operand);
        if (message.ICEquals != null && Object.hasOwnProperty.call(message, "ICEquals"))
            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.ICEquals);
        if (message.DoesNotEqual != null && Object.hasOwnProperty.call(message, "DoesNotEqual"))
            writer.uint32(/* id 11, wireType 0 =*/88).bool(message.DoesNotEqual);
        if (message.Contains != null && Object.hasOwnProperty.call(message, "Contains"))
            writer.uint32(/* id 12, wireType 0 =*/96).bool(message.Contains);
        if (message.NotContains != null && Object.hasOwnProperty.call(message, "NotContains"))
            writer.uint32(/* id 13, wireType 0 =*/104).bool(message.NotContains);
        if (message.StartsWith != null && Object.hasOwnProperty.call(message, "StartsWith"))
            writer.uint32(/* id 14, wireType 0 =*/112).bool(message.StartsWith);
        if (message.EndsWith != null && Object.hasOwnProperty.call(message, "EndsWith"))
            writer.uint32(/* id 15, wireType 0 =*/120).bool(message.EndsWith);
        if (message.Like != null && Object.hasOwnProperty.call(message, "Like"))
            writer.uint32(/* id 16, wireType 0 =*/128).bool(message.Like);
        if (message.NotLike != null && Object.hasOwnProperty.call(message, "NotLike"))
            writer.uint32(/* id 17, wireType 0 =*/136).bool(message.NotLike);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_String_Unary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_String_Unary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_String_Unary
     * @static
     * @param {IProto_GlobalFilter_String_Unary} message Proto_GlobalFilter_String_Unary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_String_Unary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_String_Unary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_String_Unary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_String_Unary} Proto_GlobalFilter_String_Unary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_String_Unary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_String_Unary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.Operand = reader.bytes();
                break;
            case 10:
                message.ICEquals = reader.bool();
                break;
            case 11:
                message.DoesNotEqual = reader.bool();
                break;
            case 12:
                message.Contains = reader.bool();
                break;
            case 13:
                message.NotContains = reader.bool();
                break;
            case 14:
                message.StartsWith = reader.bool();
                break;
            case 15:
                message.EndsWith = reader.bool();
                break;
            case 16:
                message.Like = reader.bool();
                break;
            case 17:
                message.NotLike = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_String_Unary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_String_Unary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_String_Unary} Proto_GlobalFilter_String_Unary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_String_Unary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_String_Unary message.
     * @function verify
     * @memberof Proto_GlobalFilter_String_Unary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_String_Unary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.Operand != null && message.hasOwnProperty("Operand"))
            if (!(message.Operand && typeof message.Operand.length === "number" || $util.isString(message.Operand)))
                return "Operand: buffer expected";
        if (message.ICEquals != null && message.hasOwnProperty("ICEquals")) {
            properties.Operator = 1;
            if (typeof message.ICEquals !== "boolean")
                return "ICEquals: boolean expected";
        }
        if (message.DoesNotEqual != null && message.hasOwnProperty("DoesNotEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.DoesNotEqual !== "boolean")
                return "DoesNotEqual: boolean expected";
        }
        if (message.Contains != null && message.hasOwnProperty("Contains")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.Contains !== "boolean")
                return "Contains: boolean expected";
        }
        if (message.NotContains != null && message.hasOwnProperty("NotContains")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.NotContains !== "boolean")
                return "NotContains: boolean expected";
        }
        if (message.StartsWith != null && message.hasOwnProperty("StartsWith")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.StartsWith !== "boolean")
                return "StartsWith: boolean expected";
        }
        if (message.EndsWith != null && message.hasOwnProperty("EndsWith")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.EndsWith !== "boolean")
                return "EndsWith: boolean expected";
        }
        if (message.Like != null && message.hasOwnProperty("Like")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.Like !== "boolean")
                return "Like: boolean expected";
        }
        if (message.NotLike != null && message.hasOwnProperty("NotLike")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.NotLike !== "boolean")
                return "NotLike: boolean expected";
        }
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_String_Unary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_String_Unary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_String_Unary} Proto_GlobalFilter_String_Unary
     */
    Proto_GlobalFilter_String_Unary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_String_Unary)
            return object;
        var message = new $root.Proto_GlobalFilter_String_Unary();
        if (object.Operand != null)
            if (typeof object.Operand === "string")
                $util.base64.decode(object.Operand, message.Operand = $util.newBuffer($util.base64.length(object.Operand)), 0);
            else if (object.Operand.length)
                message.Operand = object.Operand;
        if (object.ICEquals != null)
            message.ICEquals = Boolean(object.ICEquals);
        if (object.DoesNotEqual != null)
            message.DoesNotEqual = Boolean(object.DoesNotEqual);
        if (object.Contains != null)
            message.Contains = Boolean(object.Contains);
        if (object.NotContains != null)
            message.NotContains = Boolean(object.NotContains);
        if (object.StartsWith != null)
            message.StartsWith = Boolean(object.StartsWith);
        if (object.EndsWith != null)
            message.EndsWith = Boolean(object.EndsWith);
        if (object.Like != null)
            message.Like = Boolean(object.Like);
        if (object.NotLike != null)
            message.NotLike = Boolean(object.NotLike);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_String_Unary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_String_Unary
     * @static
     * @param {Proto_GlobalFilter_String_Unary} message Proto_GlobalFilter_String_Unary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_String_Unary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            if (options.bytes === String)
                object.Operand = "";
            else {
                object.Operand = [];
                if (options.bytes !== Array)
                    object.Operand = $util.newBuffer(object.Operand);
            }
        if (message.Operand != null && message.hasOwnProperty("Operand"))
            object.Operand = options.bytes === String ? $util.base64.encode(message.Operand, 0, message.Operand.length) : options.bytes === Array ? Array.prototype.slice.call(message.Operand) : message.Operand;
        if (message.ICEquals != null && message.hasOwnProperty("ICEquals")) {
            object.ICEquals = message.ICEquals;
            if (options.oneofs)
                object.Operator = "ICEquals";
        }
        if (message.DoesNotEqual != null && message.hasOwnProperty("DoesNotEqual")) {
            object.DoesNotEqual = message.DoesNotEqual;
            if (options.oneofs)
                object.Operator = "DoesNotEqual";
        }
        if (message.Contains != null && message.hasOwnProperty("Contains")) {
            object.Contains = message.Contains;
            if (options.oneofs)
                object.Operator = "Contains";
        }
        if (message.NotContains != null && message.hasOwnProperty("NotContains")) {
            object.NotContains = message.NotContains;
            if (options.oneofs)
                object.Operator = "NotContains";
        }
        if (message.StartsWith != null && message.hasOwnProperty("StartsWith")) {
            object.StartsWith = message.StartsWith;
            if (options.oneofs)
                object.Operator = "StartsWith";
        }
        if (message.EndsWith != null && message.hasOwnProperty("EndsWith")) {
            object.EndsWith = message.EndsWith;
            if (options.oneofs)
                object.Operator = "EndsWith";
        }
        if (message.Like != null && message.hasOwnProperty("Like")) {
            object.Like = message.Like;
            if (options.oneofs)
                object.Operator = "Like";
        }
        if (message.NotLike != null && message.hasOwnProperty("NotLike")) {
            object.NotLike = message.NotLike;
            if (options.oneofs)
                object.Operator = "NotLike";
        }
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_String_Unary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_String_Unary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_String_Unary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_String_Unary;
})();

$root.Proto_GlobalFilter_String_Multiary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_String_Multiary.
     * @exports IProto_GlobalFilter_String_Multiary
     * @interface IProto_GlobalFilter_String_Multiary
     * @property {Array.<Uint8Array>|null} [Operands] Proto_GlobalFilter_String_Multiary Operands
     * @property {boolean|null} [In] Proto_GlobalFilter_String_Multiary In
     */

    /**
     * Constructs a new Proto_GlobalFilter_String_Multiary.
     * @exports Proto_GlobalFilter_String_Multiary
     * @classdesc Represents a Proto_GlobalFilter_String_Multiary.
     * @implements IProto_GlobalFilter_String_Multiary
     * @constructor
     * @param {IProto_GlobalFilter_String_Multiary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_String_Multiary(properties) {
        this.Operands = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_String_Multiary Operands.
     * @member {Array.<Uint8Array>} Operands
     * @memberof Proto_GlobalFilter_String_Multiary
     * @instance
     */
    Proto_GlobalFilter_String_Multiary.prototype.Operands = $util.emptyArray;

    /**
     * Proto_GlobalFilter_String_Multiary In.
     * @member {boolean} In
     * @memberof Proto_GlobalFilter_String_Multiary
     * @instance
     */
    Proto_GlobalFilter_String_Multiary.prototype.In = false;

    /**
     * Creates a new Proto_GlobalFilter_String_Multiary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_String_Multiary
     * @static
     * @param {IProto_GlobalFilter_String_Multiary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_String_Multiary} Proto_GlobalFilter_String_Multiary instance
     */
    Proto_GlobalFilter_String_Multiary.create = function create(properties) {
        return new Proto_GlobalFilter_String_Multiary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_String_Multiary message. Does not implicitly {@link Proto_GlobalFilter_String_Multiary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_String_Multiary
     * @static
     * @param {IProto_GlobalFilter_String_Multiary} message Proto_GlobalFilter_String_Multiary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_String_Multiary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operands != null && message.Operands.length)
            for (var i = 0; i < message.Operands.length; ++i)
                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Operands[i]);
        if (message.In != null && Object.hasOwnProperty.call(message, "In"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.In);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_String_Multiary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_String_Multiary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_String_Multiary
     * @static
     * @param {IProto_GlobalFilter_String_Multiary} message Proto_GlobalFilter_String_Multiary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_String_Multiary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_String_Multiary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_String_Multiary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_String_Multiary} Proto_GlobalFilter_String_Multiary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_String_Multiary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_String_Multiary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.Operands && message.Operands.length))
                    message.Operands = [];
                message.Operands.push(reader.bytes());
                break;
            case 2:
                message.In = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_String_Multiary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_String_Multiary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_String_Multiary} Proto_GlobalFilter_String_Multiary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_String_Multiary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_String_Multiary message.
     * @function verify
     * @memberof Proto_GlobalFilter_String_Multiary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_String_Multiary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operands != null && message.hasOwnProperty("Operands")) {
            if (!Array.isArray(message.Operands))
                return "Operands: array expected";
            for (var i = 0; i < message.Operands.length; ++i)
                if (!(message.Operands[i] && typeof message.Operands[i].length === "number" || $util.isString(message.Operands[i])))
                    return "Operands: buffer[] expected";
        }
        if (message.In != null && message.hasOwnProperty("In"))
            if (typeof message.In !== "boolean")
                return "In: boolean expected";
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_String_Multiary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_String_Multiary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_String_Multiary} Proto_GlobalFilter_String_Multiary
     */
    Proto_GlobalFilter_String_Multiary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_String_Multiary)
            return object;
        var message = new $root.Proto_GlobalFilter_String_Multiary();
        if (object.Operands) {
            if (!Array.isArray(object.Operands))
                throw TypeError(".Proto_GlobalFilter_String_Multiary.Operands: array expected");
            message.Operands = [];
            for (var i = 0; i < object.Operands.length; ++i)
                if (typeof object.Operands[i] === "string")
                    $util.base64.decode(object.Operands[i], message.Operands[i] = $util.newBuffer($util.base64.length(object.Operands[i])), 0);
                else if (object.Operands[i].length)
                    message.Operands[i] = object.Operands[i];
        }
        if (object.In != null)
            message.In = Boolean(object.In);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_String_Multiary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_String_Multiary
     * @static
     * @param {Proto_GlobalFilter_String_Multiary} message Proto_GlobalFilter_String_Multiary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_String_Multiary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.Operands = [];
        if (options.defaults)
            object.In = false;
        if (message.Operands && message.Operands.length) {
            object.Operands = [];
            for (var j = 0; j < message.Operands.length; ++j)
                object.Operands[j] = options.bytes === String ? $util.base64.encode(message.Operands[j], 0, message.Operands[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.Operands[j]) : message.Operands[j];
        }
        if (message.In != null && message.hasOwnProperty("In"))
            object.In = message.In;
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_String_Multiary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_String_Multiary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_String_Multiary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_String_Multiary;
})();

$root.Proto_GlobalFilter_Integer_Unary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_Integer_Unary.
     * @exports IProto_GlobalFilter_Integer_Unary
     * @interface IProto_GlobalFilter_Integer_Unary
     * @property {number|Long|null} [Operand] Proto_GlobalFilter_Integer_Unary Operand
     * @property {boolean|null} [ICEquals] Proto_GlobalFilter_Integer_Unary ICEquals
     * @property {boolean|null} [DoesNotEqual] Proto_GlobalFilter_Integer_Unary DoesNotEqual
     * @property {boolean|null} [IsGreaterThan] Proto_GlobalFilter_Integer_Unary IsGreaterThan
     * @property {boolean|null} [IsGreaterThanOrEqual] Proto_GlobalFilter_Integer_Unary IsGreaterThanOrEqual
     * @property {boolean|null} [IsLessThan] Proto_GlobalFilter_Integer_Unary IsLessThan
     * @property {boolean|null} [IsLessThanOrEqual] Proto_GlobalFilter_Integer_Unary IsLessThanOrEqual
     */

    /**
     * Constructs a new Proto_GlobalFilter_Integer_Unary.
     * @exports Proto_GlobalFilter_Integer_Unary
     * @classdesc Represents a Proto_GlobalFilter_Integer_Unary.
     * @implements IProto_GlobalFilter_Integer_Unary
     * @constructor
     * @param {IProto_GlobalFilter_Integer_Unary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_Integer_Unary(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_Integer_Unary Operand.
     * @member {number|Long} Operand
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @instance
     */
    Proto_GlobalFilter_Integer_Unary.prototype.Operand = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_GlobalFilter_Integer_Unary ICEquals.
     * @member {boolean|null|undefined} ICEquals
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @instance
     */
    Proto_GlobalFilter_Integer_Unary.prototype.ICEquals = null;

    /**
     * Proto_GlobalFilter_Integer_Unary DoesNotEqual.
     * @member {boolean|null|undefined} DoesNotEqual
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @instance
     */
    Proto_GlobalFilter_Integer_Unary.prototype.DoesNotEqual = null;

    /**
     * Proto_GlobalFilter_Integer_Unary IsGreaterThan.
     * @member {boolean|null|undefined} IsGreaterThan
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @instance
     */
    Proto_GlobalFilter_Integer_Unary.prototype.IsGreaterThan = null;

    /**
     * Proto_GlobalFilter_Integer_Unary IsGreaterThanOrEqual.
     * @member {boolean|null|undefined} IsGreaterThanOrEqual
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @instance
     */
    Proto_GlobalFilter_Integer_Unary.prototype.IsGreaterThanOrEqual = null;

    /**
     * Proto_GlobalFilter_Integer_Unary IsLessThan.
     * @member {boolean|null|undefined} IsLessThan
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @instance
     */
    Proto_GlobalFilter_Integer_Unary.prototype.IsLessThan = null;

    /**
     * Proto_GlobalFilter_Integer_Unary IsLessThanOrEqual.
     * @member {boolean|null|undefined} IsLessThanOrEqual
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @instance
     */
    Proto_GlobalFilter_Integer_Unary.prototype.IsLessThanOrEqual = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_GlobalFilter_Integer_Unary Operator.
     * @member {"ICEquals"|"DoesNotEqual"|"IsGreaterThan"|"IsGreaterThanOrEqual"|"IsLessThan"|"IsLessThanOrEqual"|undefined} Operator
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @instance
     */
    Object.defineProperty(Proto_GlobalFilter_Integer_Unary.prototype, "Operator", {
        get: $util.oneOfGetter($oneOfFields = ["ICEquals", "DoesNotEqual", "IsGreaterThan", "IsGreaterThanOrEqual", "IsLessThan", "IsLessThanOrEqual"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_GlobalFilter_Integer_Unary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @static
     * @param {IProto_GlobalFilter_Integer_Unary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_Integer_Unary} Proto_GlobalFilter_Integer_Unary instance
     */
    Proto_GlobalFilter_Integer_Unary.create = function create(properties) {
        return new Proto_GlobalFilter_Integer_Unary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Integer_Unary message. Does not implicitly {@link Proto_GlobalFilter_Integer_Unary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @static
     * @param {IProto_GlobalFilter_Integer_Unary} message Proto_GlobalFilter_Integer_Unary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Integer_Unary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operand != null && Object.hasOwnProperty.call(message, "Operand"))
            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Operand);
        if (message.ICEquals != null && Object.hasOwnProperty.call(message, "ICEquals"))
            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.ICEquals);
        if (message.DoesNotEqual != null && Object.hasOwnProperty.call(message, "DoesNotEqual"))
            writer.uint32(/* id 11, wireType 0 =*/88).bool(message.DoesNotEqual);
        if (message.IsGreaterThan != null && Object.hasOwnProperty.call(message, "IsGreaterThan"))
            writer.uint32(/* id 12, wireType 0 =*/96).bool(message.IsGreaterThan);
        if (message.IsGreaterThanOrEqual != null && Object.hasOwnProperty.call(message, "IsGreaterThanOrEqual"))
            writer.uint32(/* id 13, wireType 0 =*/104).bool(message.IsGreaterThanOrEqual);
        if (message.IsLessThan != null && Object.hasOwnProperty.call(message, "IsLessThan"))
            writer.uint32(/* id 14, wireType 0 =*/112).bool(message.IsLessThan);
        if (message.IsLessThanOrEqual != null && Object.hasOwnProperty.call(message, "IsLessThanOrEqual"))
            writer.uint32(/* id 15, wireType 0 =*/120).bool(message.IsLessThanOrEqual);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Integer_Unary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_Integer_Unary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @static
     * @param {IProto_GlobalFilter_Integer_Unary} message Proto_GlobalFilter_Integer_Unary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Integer_Unary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_Integer_Unary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_Integer_Unary} Proto_GlobalFilter_Integer_Unary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Integer_Unary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_Integer_Unary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.Operand = reader.int64();
                break;
            case 10:
                message.ICEquals = reader.bool();
                break;
            case 11:
                message.DoesNotEqual = reader.bool();
                break;
            case 12:
                message.IsGreaterThan = reader.bool();
                break;
            case 13:
                message.IsGreaterThanOrEqual = reader.bool();
                break;
            case 14:
                message.IsLessThan = reader.bool();
                break;
            case 15:
                message.IsLessThanOrEqual = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_Integer_Unary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_Integer_Unary} Proto_GlobalFilter_Integer_Unary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Integer_Unary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_Integer_Unary message.
     * @function verify
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_Integer_Unary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.Operand != null && message.hasOwnProperty("Operand"))
            if (!$util.isInteger(message.Operand) && !(message.Operand && $util.isInteger(message.Operand.low) && $util.isInteger(message.Operand.high)))
                return "Operand: integer|Long expected";
        if (message.ICEquals != null && message.hasOwnProperty("ICEquals")) {
            properties.Operator = 1;
            if (typeof message.ICEquals !== "boolean")
                return "ICEquals: boolean expected";
        }
        if (message.DoesNotEqual != null && message.hasOwnProperty("DoesNotEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.DoesNotEqual !== "boolean")
                return "DoesNotEqual: boolean expected";
        }
        if (message.IsGreaterThan != null && message.hasOwnProperty("IsGreaterThan")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsGreaterThan !== "boolean")
                return "IsGreaterThan: boolean expected";
        }
        if (message.IsGreaterThanOrEqual != null && message.hasOwnProperty("IsGreaterThanOrEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsGreaterThanOrEqual !== "boolean")
                return "IsGreaterThanOrEqual: boolean expected";
        }
        if (message.IsLessThan != null && message.hasOwnProperty("IsLessThan")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsLessThan !== "boolean")
                return "IsLessThan: boolean expected";
        }
        if (message.IsLessThanOrEqual != null && message.hasOwnProperty("IsLessThanOrEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsLessThanOrEqual !== "boolean")
                return "IsLessThanOrEqual: boolean expected";
        }
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_Integer_Unary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_Integer_Unary} Proto_GlobalFilter_Integer_Unary
     */
    Proto_GlobalFilter_Integer_Unary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_Integer_Unary)
            return object;
        var message = new $root.Proto_GlobalFilter_Integer_Unary();
        if (object.Operand != null)
            if ($util.Long)
                (message.Operand = $util.Long.fromValue(object.Operand)).unsigned = false;
            else if (typeof object.Operand === "string")
                message.Operand = parseInt(object.Operand, 10);
            else if (typeof object.Operand === "number")
                message.Operand = object.Operand;
            else if (typeof object.Operand === "object")
                message.Operand = new $util.LongBits(object.Operand.low >>> 0, object.Operand.high >>> 0).toNumber();
        if (object.ICEquals != null)
            message.ICEquals = Boolean(object.ICEquals);
        if (object.DoesNotEqual != null)
            message.DoesNotEqual = Boolean(object.DoesNotEqual);
        if (object.IsGreaterThan != null)
            message.IsGreaterThan = Boolean(object.IsGreaterThan);
        if (object.IsGreaterThanOrEqual != null)
            message.IsGreaterThanOrEqual = Boolean(object.IsGreaterThanOrEqual);
        if (object.IsLessThan != null)
            message.IsLessThan = Boolean(object.IsLessThan);
        if (object.IsLessThanOrEqual != null)
            message.IsLessThanOrEqual = Boolean(object.IsLessThanOrEqual);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_Integer_Unary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @static
     * @param {Proto_GlobalFilter_Integer_Unary} message Proto_GlobalFilter_Integer_Unary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_Integer_Unary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.Operand = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.Operand = options.longs === String ? "0" : 0;
        if (message.Operand != null && message.hasOwnProperty("Operand"))
            if (typeof message.Operand === "number")
                object.Operand = options.longs === String ? String(message.Operand) : message.Operand;
            else
                object.Operand = options.longs === String ? $util.Long.prototype.toString.call(message.Operand) : options.longs === Number ? new $util.LongBits(message.Operand.low >>> 0, message.Operand.high >>> 0).toNumber() : message.Operand;
        if (message.ICEquals != null && message.hasOwnProperty("ICEquals")) {
            object.ICEquals = message.ICEquals;
            if (options.oneofs)
                object.Operator = "ICEquals";
        }
        if (message.DoesNotEqual != null && message.hasOwnProperty("DoesNotEqual")) {
            object.DoesNotEqual = message.DoesNotEqual;
            if (options.oneofs)
                object.Operator = "DoesNotEqual";
        }
        if (message.IsGreaterThan != null && message.hasOwnProperty("IsGreaterThan")) {
            object.IsGreaterThan = message.IsGreaterThan;
            if (options.oneofs)
                object.Operator = "IsGreaterThan";
        }
        if (message.IsGreaterThanOrEqual != null && message.hasOwnProperty("IsGreaterThanOrEqual")) {
            object.IsGreaterThanOrEqual = message.IsGreaterThanOrEqual;
            if (options.oneofs)
                object.Operator = "IsGreaterThanOrEqual";
        }
        if (message.IsLessThan != null && message.hasOwnProperty("IsLessThan")) {
            object.IsLessThan = message.IsLessThan;
            if (options.oneofs)
                object.Operator = "IsLessThan";
        }
        if (message.IsLessThanOrEqual != null && message.hasOwnProperty("IsLessThanOrEqual")) {
            object.IsLessThanOrEqual = message.IsLessThanOrEqual;
            if (options.oneofs)
                object.Operator = "IsLessThanOrEqual";
        }
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_Integer_Unary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_Integer_Unary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_Integer_Unary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_Integer_Unary;
})();

$root.Proto_GlobalFilter_Integer_Binary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_Integer_Binary.
     * @exports IProto_GlobalFilter_Integer_Binary
     * @interface IProto_GlobalFilter_Integer_Binary
     * @property {number|Long|null} [LeftOperand] Proto_GlobalFilter_Integer_Binary LeftOperand
     * @property {number|Long|null} [RightOperand] Proto_GlobalFilter_Integer_Binary RightOperand
     * @property {boolean|null} [IsBetween] Proto_GlobalFilter_Integer_Binary IsBetween
     */

    /**
     * Constructs a new Proto_GlobalFilter_Integer_Binary.
     * @exports Proto_GlobalFilter_Integer_Binary
     * @classdesc Represents a Proto_GlobalFilter_Integer_Binary.
     * @implements IProto_GlobalFilter_Integer_Binary
     * @constructor
     * @param {IProto_GlobalFilter_Integer_Binary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_Integer_Binary(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_Integer_Binary LeftOperand.
     * @member {number|Long} LeftOperand
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @instance
     */
    Proto_GlobalFilter_Integer_Binary.prototype.LeftOperand = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_GlobalFilter_Integer_Binary RightOperand.
     * @member {number|Long} RightOperand
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @instance
     */
    Proto_GlobalFilter_Integer_Binary.prototype.RightOperand = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_GlobalFilter_Integer_Binary IsBetween.
     * @member {boolean} IsBetween
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @instance
     */
    Proto_GlobalFilter_Integer_Binary.prototype.IsBetween = false;

    /**
     * Creates a new Proto_GlobalFilter_Integer_Binary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @static
     * @param {IProto_GlobalFilter_Integer_Binary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_Integer_Binary} Proto_GlobalFilter_Integer_Binary instance
     */
    Proto_GlobalFilter_Integer_Binary.create = function create(properties) {
        return new Proto_GlobalFilter_Integer_Binary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Integer_Binary message. Does not implicitly {@link Proto_GlobalFilter_Integer_Binary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @static
     * @param {IProto_GlobalFilter_Integer_Binary} message Proto_GlobalFilter_Integer_Binary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Integer_Binary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.LeftOperand != null && Object.hasOwnProperty.call(message, "LeftOperand"))
            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.LeftOperand);
        if (message.RightOperand != null && Object.hasOwnProperty.call(message, "RightOperand"))
            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.RightOperand);
        if (message.IsBetween != null && Object.hasOwnProperty.call(message, "IsBetween"))
            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.IsBetween);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Integer_Binary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_Integer_Binary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @static
     * @param {IProto_GlobalFilter_Integer_Binary} message Proto_GlobalFilter_Integer_Binary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Integer_Binary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_Integer_Binary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_Integer_Binary} Proto_GlobalFilter_Integer_Binary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Integer_Binary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_Integer_Binary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.LeftOperand = reader.int64();
                break;
            case 2:
                message.RightOperand = reader.int64();
                break;
            case 3:
                message.IsBetween = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_Integer_Binary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_Integer_Binary} Proto_GlobalFilter_Integer_Binary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Integer_Binary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_Integer_Binary message.
     * @function verify
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_Integer_Binary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.LeftOperand != null && message.hasOwnProperty("LeftOperand"))
            if (!$util.isInteger(message.LeftOperand) && !(message.LeftOperand && $util.isInteger(message.LeftOperand.low) && $util.isInteger(message.LeftOperand.high)))
                return "LeftOperand: integer|Long expected";
        if (message.RightOperand != null && message.hasOwnProperty("RightOperand"))
            if (!$util.isInteger(message.RightOperand) && !(message.RightOperand && $util.isInteger(message.RightOperand.low) && $util.isInteger(message.RightOperand.high)))
                return "RightOperand: integer|Long expected";
        if (message.IsBetween != null && message.hasOwnProperty("IsBetween"))
            if (typeof message.IsBetween !== "boolean")
                return "IsBetween: boolean expected";
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_Integer_Binary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_Integer_Binary} Proto_GlobalFilter_Integer_Binary
     */
    Proto_GlobalFilter_Integer_Binary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_Integer_Binary)
            return object;
        var message = new $root.Proto_GlobalFilter_Integer_Binary();
        if (object.LeftOperand != null)
            if ($util.Long)
                (message.LeftOperand = $util.Long.fromValue(object.LeftOperand)).unsigned = false;
            else if (typeof object.LeftOperand === "string")
                message.LeftOperand = parseInt(object.LeftOperand, 10);
            else if (typeof object.LeftOperand === "number")
                message.LeftOperand = object.LeftOperand;
            else if (typeof object.LeftOperand === "object")
                message.LeftOperand = new $util.LongBits(object.LeftOperand.low >>> 0, object.LeftOperand.high >>> 0).toNumber();
        if (object.RightOperand != null)
            if ($util.Long)
                (message.RightOperand = $util.Long.fromValue(object.RightOperand)).unsigned = false;
            else if (typeof object.RightOperand === "string")
                message.RightOperand = parseInt(object.RightOperand, 10);
            else if (typeof object.RightOperand === "number")
                message.RightOperand = object.RightOperand;
            else if (typeof object.RightOperand === "object")
                message.RightOperand = new $util.LongBits(object.RightOperand.low >>> 0, object.RightOperand.high >>> 0).toNumber();
        if (object.IsBetween != null)
            message.IsBetween = Boolean(object.IsBetween);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_Integer_Binary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @static
     * @param {Proto_GlobalFilter_Integer_Binary} message Proto_GlobalFilter_Integer_Binary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_Integer_Binary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.LeftOperand = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.LeftOperand = options.longs === String ? "0" : 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.RightOperand = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.RightOperand = options.longs === String ? "0" : 0;
            object.IsBetween = false;
        }
        if (message.LeftOperand != null && message.hasOwnProperty("LeftOperand"))
            if (typeof message.LeftOperand === "number")
                object.LeftOperand = options.longs === String ? String(message.LeftOperand) : message.LeftOperand;
            else
                object.LeftOperand = options.longs === String ? $util.Long.prototype.toString.call(message.LeftOperand) : options.longs === Number ? new $util.LongBits(message.LeftOperand.low >>> 0, message.LeftOperand.high >>> 0).toNumber() : message.LeftOperand;
        if (message.RightOperand != null && message.hasOwnProperty("RightOperand"))
            if (typeof message.RightOperand === "number")
                object.RightOperand = options.longs === String ? String(message.RightOperand) : message.RightOperand;
            else
                object.RightOperand = options.longs === String ? $util.Long.prototype.toString.call(message.RightOperand) : options.longs === Number ? new $util.LongBits(message.RightOperand.low >>> 0, message.RightOperand.high >>> 0).toNumber() : message.RightOperand;
        if (message.IsBetween != null && message.hasOwnProperty("IsBetween"))
            object.IsBetween = message.IsBetween;
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_Integer_Binary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_Integer_Binary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_Integer_Binary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_Integer_Binary;
})();

$root.Proto_GlobalFilter_Integer_Multiary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_Integer_Multiary.
     * @exports IProto_GlobalFilter_Integer_Multiary
     * @interface IProto_GlobalFilter_Integer_Multiary
     * @property {Array.<number|Long>|null} [Operands] Proto_GlobalFilter_Integer_Multiary Operands
     * @property {boolean|null} [In] Proto_GlobalFilter_Integer_Multiary In
     */

    /**
     * Constructs a new Proto_GlobalFilter_Integer_Multiary.
     * @exports Proto_GlobalFilter_Integer_Multiary
     * @classdesc Represents a Proto_GlobalFilter_Integer_Multiary.
     * @implements IProto_GlobalFilter_Integer_Multiary
     * @constructor
     * @param {IProto_GlobalFilter_Integer_Multiary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_Integer_Multiary(properties) {
        this.Operands = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_Integer_Multiary Operands.
     * @member {Array.<number|Long>} Operands
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @instance
     */
    Proto_GlobalFilter_Integer_Multiary.prototype.Operands = $util.emptyArray;

    /**
     * Proto_GlobalFilter_Integer_Multiary In.
     * @member {boolean} In
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @instance
     */
    Proto_GlobalFilter_Integer_Multiary.prototype.In = false;

    /**
     * Creates a new Proto_GlobalFilter_Integer_Multiary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @static
     * @param {IProto_GlobalFilter_Integer_Multiary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_Integer_Multiary} Proto_GlobalFilter_Integer_Multiary instance
     */
    Proto_GlobalFilter_Integer_Multiary.create = function create(properties) {
        return new Proto_GlobalFilter_Integer_Multiary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Integer_Multiary message. Does not implicitly {@link Proto_GlobalFilter_Integer_Multiary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @static
     * @param {IProto_GlobalFilter_Integer_Multiary} message Proto_GlobalFilter_Integer_Multiary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Integer_Multiary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operands != null && message.Operands.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.Operands.length; ++i)
                writer.int64(message.Operands[i]);
            writer.ldelim();
        }
        if (message.In != null && Object.hasOwnProperty.call(message, "In"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.In);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Integer_Multiary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_Integer_Multiary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @static
     * @param {IProto_GlobalFilter_Integer_Multiary} message Proto_GlobalFilter_Integer_Multiary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Integer_Multiary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_Integer_Multiary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_Integer_Multiary} Proto_GlobalFilter_Integer_Multiary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Integer_Multiary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_Integer_Multiary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.Operands && message.Operands.length))
                    message.Operands = [];
                if ((tag & 7) === 2) {
                    var end2 = reader.uint32() + reader.pos;
                    while (reader.pos < end2)
                        message.Operands.push(reader.int64());
                } else
                    message.Operands.push(reader.int64());
                break;
            case 2:
                message.In = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_Integer_Multiary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_Integer_Multiary} Proto_GlobalFilter_Integer_Multiary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Integer_Multiary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_Integer_Multiary message.
     * @function verify
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_Integer_Multiary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operands != null && message.hasOwnProperty("Operands")) {
            if (!Array.isArray(message.Operands))
                return "Operands: array expected";
            for (var i = 0; i < message.Operands.length; ++i)
                if (!$util.isInteger(message.Operands[i]) && !(message.Operands[i] && $util.isInteger(message.Operands[i].low) && $util.isInteger(message.Operands[i].high)))
                    return "Operands: integer|Long[] expected";
        }
        if (message.In != null && message.hasOwnProperty("In"))
            if (typeof message.In !== "boolean")
                return "In: boolean expected";
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_Integer_Multiary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_Integer_Multiary} Proto_GlobalFilter_Integer_Multiary
     */
    Proto_GlobalFilter_Integer_Multiary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_Integer_Multiary)
            return object;
        var message = new $root.Proto_GlobalFilter_Integer_Multiary();
        if (object.Operands) {
            if (!Array.isArray(object.Operands))
                throw TypeError(".Proto_GlobalFilter_Integer_Multiary.Operands: array expected");
            message.Operands = [];
            for (var i = 0; i < object.Operands.length; ++i)
                if ($util.Long)
                    (message.Operands[i] = $util.Long.fromValue(object.Operands[i])).unsigned = false;
                else if (typeof object.Operands[i] === "string")
                    message.Operands[i] = parseInt(object.Operands[i], 10);
                else if (typeof object.Operands[i] === "number")
                    message.Operands[i] = object.Operands[i];
                else if (typeof object.Operands[i] === "object")
                    message.Operands[i] = new $util.LongBits(object.Operands[i].low >>> 0, object.Operands[i].high >>> 0).toNumber();
        }
        if (object.In != null)
            message.In = Boolean(object.In);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_Integer_Multiary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @static
     * @param {Proto_GlobalFilter_Integer_Multiary} message Proto_GlobalFilter_Integer_Multiary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_Integer_Multiary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.Operands = [];
        if (options.defaults)
            object.In = false;
        if (message.Operands && message.Operands.length) {
            object.Operands = [];
            for (var j = 0; j < message.Operands.length; ++j)
                if (typeof message.Operands[j] === "number")
                    object.Operands[j] = options.longs === String ? String(message.Operands[j]) : message.Operands[j];
                else
                    object.Operands[j] = options.longs === String ? $util.Long.prototype.toString.call(message.Operands[j]) : options.longs === Number ? new $util.LongBits(message.Operands[j].low >>> 0, message.Operands[j].high >>> 0).toNumber() : message.Operands[j];
        }
        if (message.In != null && message.hasOwnProperty("In"))
            object.In = message.In;
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_Integer_Multiary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_Integer_Multiary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_Integer_Multiary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_Integer_Multiary;
})();

$root.Proto_GlobalFilter_Decimal_Unary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_Decimal_Unary.
     * @exports IProto_GlobalFilter_Decimal_Unary
     * @interface IProto_GlobalFilter_Decimal_Unary
     * @property {number|null} [Operand] Proto_GlobalFilter_Decimal_Unary Operand
     * @property {boolean|null} [ICEquals] Proto_GlobalFilter_Decimal_Unary ICEquals
     * @property {boolean|null} [DoesNotEqual] Proto_GlobalFilter_Decimal_Unary DoesNotEqual
     * @property {boolean|null} [IsGreaterThan] Proto_GlobalFilter_Decimal_Unary IsGreaterThan
     * @property {boolean|null} [IsGreaterThanOrEqual] Proto_GlobalFilter_Decimal_Unary IsGreaterThanOrEqual
     * @property {boolean|null} [IsLessThan] Proto_GlobalFilter_Decimal_Unary IsLessThan
     * @property {boolean|null} [IsLessThanOrEqual] Proto_GlobalFilter_Decimal_Unary IsLessThanOrEqual
     */

    /**
     * Constructs a new Proto_GlobalFilter_Decimal_Unary.
     * @exports Proto_GlobalFilter_Decimal_Unary
     * @classdesc Represents a Proto_GlobalFilter_Decimal_Unary.
     * @implements IProto_GlobalFilter_Decimal_Unary
     * @constructor
     * @param {IProto_GlobalFilter_Decimal_Unary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_Decimal_Unary(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_Decimal_Unary Operand.
     * @member {number} Operand
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Unary.prototype.Operand = 0;

    /**
     * Proto_GlobalFilter_Decimal_Unary ICEquals.
     * @member {boolean|null|undefined} ICEquals
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Unary.prototype.ICEquals = null;

    /**
     * Proto_GlobalFilter_Decimal_Unary DoesNotEqual.
     * @member {boolean|null|undefined} DoesNotEqual
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Unary.prototype.DoesNotEqual = null;

    /**
     * Proto_GlobalFilter_Decimal_Unary IsGreaterThan.
     * @member {boolean|null|undefined} IsGreaterThan
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Unary.prototype.IsGreaterThan = null;

    /**
     * Proto_GlobalFilter_Decimal_Unary IsGreaterThanOrEqual.
     * @member {boolean|null|undefined} IsGreaterThanOrEqual
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Unary.prototype.IsGreaterThanOrEqual = null;

    /**
     * Proto_GlobalFilter_Decimal_Unary IsLessThan.
     * @member {boolean|null|undefined} IsLessThan
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Unary.prototype.IsLessThan = null;

    /**
     * Proto_GlobalFilter_Decimal_Unary IsLessThanOrEqual.
     * @member {boolean|null|undefined} IsLessThanOrEqual
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Unary.prototype.IsLessThanOrEqual = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_GlobalFilter_Decimal_Unary Operator.
     * @member {"ICEquals"|"DoesNotEqual"|"IsGreaterThan"|"IsGreaterThanOrEqual"|"IsLessThan"|"IsLessThanOrEqual"|undefined} Operator
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @instance
     */
    Object.defineProperty(Proto_GlobalFilter_Decimal_Unary.prototype, "Operator", {
        get: $util.oneOfGetter($oneOfFields = ["ICEquals", "DoesNotEqual", "IsGreaterThan", "IsGreaterThanOrEqual", "IsLessThan", "IsLessThanOrEqual"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_GlobalFilter_Decimal_Unary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @static
     * @param {IProto_GlobalFilter_Decimal_Unary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_Decimal_Unary} Proto_GlobalFilter_Decimal_Unary instance
     */
    Proto_GlobalFilter_Decimal_Unary.create = function create(properties) {
        return new Proto_GlobalFilter_Decimal_Unary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Decimal_Unary message. Does not implicitly {@link Proto_GlobalFilter_Decimal_Unary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @static
     * @param {IProto_GlobalFilter_Decimal_Unary} message Proto_GlobalFilter_Decimal_Unary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Decimal_Unary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operand != null && Object.hasOwnProperty.call(message, "Operand"))
            writer.uint32(/* id 1, wireType 1 =*/9).double(message.Operand);
        if (message.ICEquals != null && Object.hasOwnProperty.call(message, "ICEquals"))
            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.ICEquals);
        if (message.DoesNotEqual != null && Object.hasOwnProperty.call(message, "DoesNotEqual"))
            writer.uint32(/* id 11, wireType 0 =*/88).bool(message.DoesNotEqual);
        if (message.IsGreaterThan != null && Object.hasOwnProperty.call(message, "IsGreaterThan"))
            writer.uint32(/* id 12, wireType 0 =*/96).bool(message.IsGreaterThan);
        if (message.IsGreaterThanOrEqual != null && Object.hasOwnProperty.call(message, "IsGreaterThanOrEqual"))
            writer.uint32(/* id 13, wireType 0 =*/104).bool(message.IsGreaterThanOrEqual);
        if (message.IsLessThan != null && Object.hasOwnProperty.call(message, "IsLessThan"))
            writer.uint32(/* id 14, wireType 0 =*/112).bool(message.IsLessThan);
        if (message.IsLessThanOrEqual != null && Object.hasOwnProperty.call(message, "IsLessThanOrEqual"))
            writer.uint32(/* id 15, wireType 0 =*/120).bool(message.IsLessThanOrEqual);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Decimal_Unary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_Decimal_Unary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @static
     * @param {IProto_GlobalFilter_Decimal_Unary} message Proto_GlobalFilter_Decimal_Unary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Decimal_Unary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_Decimal_Unary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_Decimal_Unary} Proto_GlobalFilter_Decimal_Unary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Decimal_Unary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_Decimal_Unary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.Operand = reader.double();
                break;
            case 10:
                message.ICEquals = reader.bool();
                break;
            case 11:
                message.DoesNotEqual = reader.bool();
                break;
            case 12:
                message.IsGreaterThan = reader.bool();
                break;
            case 13:
                message.IsGreaterThanOrEqual = reader.bool();
                break;
            case 14:
                message.IsLessThan = reader.bool();
                break;
            case 15:
                message.IsLessThanOrEqual = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_Decimal_Unary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_Decimal_Unary} Proto_GlobalFilter_Decimal_Unary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Decimal_Unary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_Decimal_Unary message.
     * @function verify
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_Decimal_Unary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.Operand != null && message.hasOwnProperty("Operand"))
            if (typeof message.Operand !== "number")
                return "Operand: number expected";
        if (message.ICEquals != null && message.hasOwnProperty("ICEquals")) {
            properties.Operator = 1;
            if (typeof message.ICEquals !== "boolean")
                return "ICEquals: boolean expected";
        }
        if (message.DoesNotEqual != null && message.hasOwnProperty("DoesNotEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.DoesNotEqual !== "boolean")
                return "DoesNotEqual: boolean expected";
        }
        if (message.IsGreaterThan != null && message.hasOwnProperty("IsGreaterThan")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsGreaterThan !== "boolean")
                return "IsGreaterThan: boolean expected";
        }
        if (message.IsGreaterThanOrEqual != null && message.hasOwnProperty("IsGreaterThanOrEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsGreaterThanOrEqual !== "boolean")
                return "IsGreaterThanOrEqual: boolean expected";
        }
        if (message.IsLessThan != null && message.hasOwnProperty("IsLessThan")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsLessThan !== "boolean")
                return "IsLessThan: boolean expected";
        }
        if (message.IsLessThanOrEqual != null && message.hasOwnProperty("IsLessThanOrEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsLessThanOrEqual !== "boolean")
                return "IsLessThanOrEqual: boolean expected";
        }
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_Decimal_Unary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_Decimal_Unary} Proto_GlobalFilter_Decimal_Unary
     */
    Proto_GlobalFilter_Decimal_Unary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_Decimal_Unary)
            return object;
        var message = new $root.Proto_GlobalFilter_Decimal_Unary();
        if (object.Operand != null)
            message.Operand = Number(object.Operand);
        if (object.ICEquals != null)
            message.ICEquals = Boolean(object.ICEquals);
        if (object.DoesNotEqual != null)
            message.DoesNotEqual = Boolean(object.DoesNotEqual);
        if (object.IsGreaterThan != null)
            message.IsGreaterThan = Boolean(object.IsGreaterThan);
        if (object.IsGreaterThanOrEqual != null)
            message.IsGreaterThanOrEqual = Boolean(object.IsGreaterThanOrEqual);
        if (object.IsLessThan != null)
            message.IsLessThan = Boolean(object.IsLessThan);
        if (object.IsLessThanOrEqual != null)
            message.IsLessThanOrEqual = Boolean(object.IsLessThanOrEqual);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_Decimal_Unary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @static
     * @param {Proto_GlobalFilter_Decimal_Unary} message Proto_GlobalFilter_Decimal_Unary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_Decimal_Unary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            object.Operand = 0;
        if (message.Operand != null && message.hasOwnProperty("Operand"))
            object.Operand = options.json && !isFinite(message.Operand) ? String(message.Operand) : message.Operand;
        if (message.ICEquals != null && message.hasOwnProperty("ICEquals")) {
            object.ICEquals = message.ICEquals;
            if (options.oneofs)
                object.Operator = "ICEquals";
        }
        if (message.DoesNotEqual != null && message.hasOwnProperty("DoesNotEqual")) {
            object.DoesNotEqual = message.DoesNotEqual;
            if (options.oneofs)
                object.Operator = "DoesNotEqual";
        }
        if (message.IsGreaterThan != null && message.hasOwnProperty("IsGreaterThan")) {
            object.IsGreaterThan = message.IsGreaterThan;
            if (options.oneofs)
                object.Operator = "IsGreaterThan";
        }
        if (message.IsGreaterThanOrEqual != null && message.hasOwnProperty("IsGreaterThanOrEqual")) {
            object.IsGreaterThanOrEqual = message.IsGreaterThanOrEqual;
            if (options.oneofs)
                object.Operator = "IsGreaterThanOrEqual";
        }
        if (message.IsLessThan != null && message.hasOwnProperty("IsLessThan")) {
            object.IsLessThan = message.IsLessThan;
            if (options.oneofs)
                object.Operator = "IsLessThan";
        }
        if (message.IsLessThanOrEqual != null && message.hasOwnProperty("IsLessThanOrEqual")) {
            object.IsLessThanOrEqual = message.IsLessThanOrEqual;
            if (options.oneofs)
                object.Operator = "IsLessThanOrEqual";
        }
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_Decimal_Unary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_Decimal_Unary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_Decimal_Unary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_Decimal_Unary;
})();

$root.Proto_GlobalFilter_Decimal_Binary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_Decimal_Binary.
     * @exports IProto_GlobalFilter_Decimal_Binary
     * @interface IProto_GlobalFilter_Decimal_Binary
     * @property {number|null} [LeftOperand] Proto_GlobalFilter_Decimal_Binary LeftOperand
     * @property {number|null} [RightOperand] Proto_GlobalFilter_Decimal_Binary RightOperand
     * @property {boolean|null} [IsBetween] Proto_GlobalFilter_Decimal_Binary IsBetween
     */

    /**
     * Constructs a new Proto_GlobalFilter_Decimal_Binary.
     * @exports Proto_GlobalFilter_Decimal_Binary
     * @classdesc Represents a Proto_GlobalFilter_Decimal_Binary.
     * @implements IProto_GlobalFilter_Decimal_Binary
     * @constructor
     * @param {IProto_GlobalFilter_Decimal_Binary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_Decimal_Binary(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_Decimal_Binary LeftOperand.
     * @member {number} LeftOperand
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Binary.prototype.LeftOperand = 0;

    /**
     * Proto_GlobalFilter_Decimal_Binary RightOperand.
     * @member {number} RightOperand
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Binary.prototype.RightOperand = 0;

    /**
     * Proto_GlobalFilter_Decimal_Binary IsBetween.
     * @member {boolean} IsBetween
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Binary.prototype.IsBetween = false;

    /**
     * Creates a new Proto_GlobalFilter_Decimal_Binary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @static
     * @param {IProto_GlobalFilter_Decimal_Binary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_Decimal_Binary} Proto_GlobalFilter_Decimal_Binary instance
     */
    Proto_GlobalFilter_Decimal_Binary.create = function create(properties) {
        return new Proto_GlobalFilter_Decimal_Binary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Decimal_Binary message. Does not implicitly {@link Proto_GlobalFilter_Decimal_Binary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @static
     * @param {IProto_GlobalFilter_Decimal_Binary} message Proto_GlobalFilter_Decimal_Binary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Decimal_Binary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.LeftOperand != null && Object.hasOwnProperty.call(message, "LeftOperand"))
            writer.uint32(/* id 1, wireType 1 =*/9).double(message.LeftOperand);
        if (message.RightOperand != null && Object.hasOwnProperty.call(message, "RightOperand"))
            writer.uint32(/* id 2, wireType 1 =*/17).double(message.RightOperand);
        if (message.IsBetween != null && Object.hasOwnProperty.call(message, "IsBetween"))
            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.IsBetween);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Decimal_Binary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_Decimal_Binary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @static
     * @param {IProto_GlobalFilter_Decimal_Binary} message Proto_GlobalFilter_Decimal_Binary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Decimal_Binary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_Decimal_Binary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_Decimal_Binary} Proto_GlobalFilter_Decimal_Binary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Decimal_Binary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_Decimal_Binary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.LeftOperand = reader.double();
                break;
            case 2:
                message.RightOperand = reader.double();
                break;
            case 3:
                message.IsBetween = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_Decimal_Binary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_Decimal_Binary} Proto_GlobalFilter_Decimal_Binary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Decimal_Binary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_Decimal_Binary message.
     * @function verify
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_Decimal_Binary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.LeftOperand != null && message.hasOwnProperty("LeftOperand"))
            if (typeof message.LeftOperand !== "number")
                return "LeftOperand: number expected";
        if (message.RightOperand != null && message.hasOwnProperty("RightOperand"))
            if (typeof message.RightOperand !== "number")
                return "RightOperand: number expected";
        if (message.IsBetween != null && message.hasOwnProperty("IsBetween"))
            if (typeof message.IsBetween !== "boolean")
                return "IsBetween: boolean expected";
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_Decimal_Binary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_Decimal_Binary} Proto_GlobalFilter_Decimal_Binary
     */
    Proto_GlobalFilter_Decimal_Binary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_Decimal_Binary)
            return object;
        var message = new $root.Proto_GlobalFilter_Decimal_Binary();
        if (object.LeftOperand != null)
            message.LeftOperand = Number(object.LeftOperand);
        if (object.RightOperand != null)
            message.RightOperand = Number(object.RightOperand);
        if (object.IsBetween != null)
            message.IsBetween = Boolean(object.IsBetween);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_Decimal_Binary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @static
     * @param {Proto_GlobalFilter_Decimal_Binary} message Proto_GlobalFilter_Decimal_Binary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_Decimal_Binary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.LeftOperand = 0;
            object.RightOperand = 0;
            object.IsBetween = false;
        }
        if (message.LeftOperand != null && message.hasOwnProperty("LeftOperand"))
            object.LeftOperand = options.json && !isFinite(message.LeftOperand) ? String(message.LeftOperand) : message.LeftOperand;
        if (message.RightOperand != null && message.hasOwnProperty("RightOperand"))
            object.RightOperand = options.json && !isFinite(message.RightOperand) ? String(message.RightOperand) : message.RightOperand;
        if (message.IsBetween != null && message.hasOwnProperty("IsBetween"))
            object.IsBetween = message.IsBetween;
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_Decimal_Binary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_Decimal_Binary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_Decimal_Binary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_Decimal_Binary;
})();

$root.Proto_GlobalFilter_Decimal_Multiary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_Decimal_Multiary.
     * @exports IProto_GlobalFilter_Decimal_Multiary
     * @interface IProto_GlobalFilter_Decimal_Multiary
     * @property {Array.<number>|null} [Operands] Proto_GlobalFilter_Decimal_Multiary Operands
     * @property {boolean|null} [In] Proto_GlobalFilter_Decimal_Multiary In
     */

    /**
     * Constructs a new Proto_GlobalFilter_Decimal_Multiary.
     * @exports Proto_GlobalFilter_Decimal_Multiary
     * @classdesc Represents a Proto_GlobalFilter_Decimal_Multiary.
     * @implements IProto_GlobalFilter_Decimal_Multiary
     * @constructor
     * @param {IProto_GlobalFilter_Decimal_Multiary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_Decimal_Multiary(properties) {
        this.Operands = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_Decimal_Multiary Operands.
     * @member {Array.<number>} Operands
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Multiary.prototype.Operands = $util.emptyArray;

    /**
     * Proto_GlobalFilter_Decimal_Multiary In.
     * @member {boolean} In
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @instance
     */
    Proto_GlobalFilter_Decimal_Multiary.prototype.In = false;

    /**
     * Creates a new Proto_GlobalFilter_Decimal_Multiary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @static
     * @param {IProto_GlobalFilter_Decimal_Multiary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_Decimal_Multiary} Proto_GlobalFilter_Decimal_Multiary instance
     */
    Proto_GlobalFilter_Decimal_Multiary.create = function create(properties) {
        return new Proto_GlobalFilter_Decimal_Multiary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Decimal_Multiary message. Does not implicitly {@link Proto_GlobalFilter_Decimal_Multiary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @static
     * @param {IProto_GlobalFilter_Decimal_Multiary} message Proto_GlobalFilter_Decimal_Multiary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Decimal_Multiary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operands != null && message.Operands.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.Operands.length; ++i)
                writer.double(message.Operands[i]);
            writer.ldelim();
        }
        if (message.In != null && Object.hasOwnProperty.call(message, "In"))
            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.In);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Decimal_Multiary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_Decimal_Multiary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @static
     * @param {IProto_GlobalFilter_Decimal_Multiary} message Proto_GlobalFilter_Decimal_Multiary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Decimal_Multiary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_Decimal_Multiary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_Decimal_Multiary} Proto_GlobalFilter_Decimal_Multiary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Decimal_Multiary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_Decimal_Multiary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.Operands && message.Operands.length))
                    message.Operands = [];
                if ((tag & 7) === 2) {
                    var end2 = reader.uint32() + reader.pos;
                    while (reader.pos < end2)
                        message.Operands.push(reader.double());
                } else
                    message.Operands.push(reader.double());
                break;
            case 2:
                message.In = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_Decimal_Multiary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_Decimal_Multiary} Proto_GlobalFilter_Decimal_Multiary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Decimal_Multiary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_Decimal_Multiary message.
     * @function verify
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_Decimal_Multiary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operands != null && message.hasOwnProperty("Operands")) {
            if (!Array.isArray(message.Operands))
                return "Operands: array expected";
            for (var i = 0; i < message.Operands.length; ++i)
                if (typeof message.Operands[i] !== "number")
                    return "Operands: number[] expected";
        }
        if (message.In != null && message.hasOwnProperty("In"))
            if (typeof message.In !== "boolean")
                return "In: boolean expected";
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_Decimal_Multiary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_Decimal_Multiary} Proto_GlobalFilter_Decimal_Multiary
     */
    Proto_GlobalFilter_Decimal_Multiary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_Decimal_Multiary)
            return object;
        var message = new $root.Proto_GlobalFilter_Decimal_Multiary();
        if (object.Operands) {
            if (!Array.isArray(object.Operands))
                throw TypeError(".Proto_GlobalFilter_Decimal_Multiary.Operands: array expected");
            message.Operands = [];
            for (var i = 0; i < object.Operands.length; ++i)
                message.Operands[i] = Number(object.Operands[i]);
        }
        if (object.In != null)
            message.In = Boolean(object.In);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_Decimal_Multiary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @static
     * @param {Proto_GlobalFilter_Decimal_Multiary} message Proto_GlobalFilter_Decimal_Multiary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_Decimal_Multiary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.Operands = [];
        if (options.defaults)
            object.In = false;
        if (message.Operands && message.Operands.length) {
            object.Operands = [];
            for (var j = 0; j < message.Operands.length; ++j)
                object.Operands[j] = options.json && !isFinite(message.Operands[j]) ? String(message.Operands[j]) : message.Operands[j];
        }
        if (message.In != null && message.hasOwnProperty("In"))
            object.In = message.In;
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_Decimal_Multiary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_Decimal_Multiary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_Decimal_Multiary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_Decimal_Multiary;
})();

$root.Proto_GlobalFilter_Datetime_Unary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_Datetime_Unary.
     * @exports IProto_GlobalFilter_Datetime_Unary
     * @interface IProto_GlobalFilter_Datetime_Unary
     * @property {number|Long|null} [Operand] Proto_GlobalFilter_Datetime_Unary Operand
     * @property {boolean|null} [ICEquals] Proto_GlobalFilter_Datetime_Unary ICEquals
     * @property {boolean|null} [DoesNotEqual] Proto_GlobalFilter_Datetime_Unary DoesNotEqual
     * @property {boolean|null} [IsGreaterThan] Proto_GlobalFilter_Datetime_Unary IsGreaterThan
     * @property {boolean|null} [IsGreaterThanOrEqual] Proto_GlobalFilter_Datetime_Unary IsGreaterThanOrEqual
     * @property {boolean|null} [IsLessThan] Proto_GlobalFilter_Datetime_Unary IsLessThan
     * @property {boolean|null} [IsLessThanOrEqual] Proto_GlobalFilter_Datetime_Unary IsLessThanOrEqual
     */

    /**
     * Constructs a new Proto_GlobalFilter_Datetime_Unary.
     * @exports Proto_GlobalFilter_Datetime_Unary
     * @classdesc Represents a Proto_GlobalFilter_Datetime_Unary.
     * @implements IProto_GlobalFilter_Datetime_Unary
     * @constructor
     * @param {IProto_GlobalFilter_Datetime_Unary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_Datetime_Unary(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_Datetime_Unary Operand.
     * @member {number|Long} Operand
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Unary.prototype.Operand = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_GlobalFilter_Datetime_Unary ICEquals.
     * @member {boolean|null|undefined} ICEquals
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Unary.prototype.ICEquals = null;

    /**
     * Proto_GlobalFilter_Datetime_Unary DoesNotEqual.
     * @member {boolean|null|undefined} DoesNotEqual
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Unary.prototype.DoesNotEqual = null;

    /**
     * Proto_GlobalFilter_Datetime_Unary IsGreaterThan.
     * @member {boolean|null|undefined} IsGreaterThan
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Unary.prototype.IsGreaterThan = null;

    /**
     * Proto_GlobalFilter_Datetime_Unary IsGreaterThanOrEqual.
     * @member {boolean|null|undefined} IsGreaterThanOrEqual
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Unary.prototype.IsGreaterThanOrEqual = null;

    /**
     * Proto_GlobalFilter_Datetime_Unary IsLessThan.
     * @member {boolean|null|undefined} IsLessThan
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Unary.prototype.IsLessThan = null;

    /**
     * Proto_GlobalFilter_Datetime_Unary IsLessThanOrEqual.
     * @member {boolean|null|undefined} IsLessThanOrEqual
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Unary.prototype.IsLessThanOrEqual = null;

    // OneOf field names bound to virtual getters and setters
    var $oneOfFields;

    /**
     * Proto_GlobalFilter_Datetime_Unary Operator.
     * @member {"ICEquals"|"DoesNotEqual"|"IsGreaterThan"|"IsGreaterThanOrEqual"|"IsLessThan"|"IsLessThanOrEqual"|undefined} Operator
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @instance
     */
    Object.defineProperty(Proto_GlobalFilter_Datetime_Unary.prototype, "Operator", {
        get: $util.oneOfGetter($oneOfFields = ["ICEquals", "DoesNotEqual", "IsGreaterThan", "IsGreaterThanOrEqual", "IsLessThan", "IsLessThanOrEqual"]),
        set: $util.oneOfSetter($oneOfFields)
    });

    /**
     * Creates a new Proto_GlobalFilter_Datetime_Unary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @static
     * @param {IProto_GlobalFilter_Datetime_Unary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_Datetime_Unary} Proto_GlobalFilter_Datetime_Unary instance
     */
    Proto_GlobalFilter_Datetime_Unary.create = function create(properties) {
        return new Proto_GlobalFilter_Datetime_Unary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Datetime_Unary message. Does not implicitly {@link Proto_GlobalFilter_Datetime_Unary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @static
     * @param {IProto_GlobalFilter_Datetime_Unary} message Proto_GlobalFilter_Datetime_Unary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Datetime_Unary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operand != null && Object.hasOwnProperty.call(message, "Operand"))
            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.Operand);
        if (message.ICEquals != null && Object.hasOwnProperty.call(message, "ICEquals"))
            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.ICEquals);
        if (message.DoesNotEqual != null && Object.hasOwnProperty.call(message, "DoesNotEqual"))
            writer.uint32(/* id 11, wireType 0 =*/88).bool(message.DoesNotEqual);
        if (message.IsGreaterThan != null && Object.hasOwnProperty.call(message, "IsGreaterThan"))
            writer.uint32(/* id 12, wireType 0 =*/96).bool(message.IsGreaterThan);
        if (message.IsGreaterThanOrEqual != null && Object.hasOwnProperty.call(message, "IsGreaterThanOrEqual"))
            writer.uint32(/* id 13, wireType 0 =*/104).bool(message.IsGreaterThanOrEqual);
        if (message.IsLessThan != null && Object.hasOwnProperty.call(message, "IsLessThan"))
            writer.uint32(/* id 14, wireType 0 =*/112).bool(message.IsLessThan);
        if (message.IsLessThanOrEqual != null && Object.hasOwnProperty.call(message, "IsLessThanOrEqual"))
            writer.uint32(/* id 15, wireType 0 =*/120).bool(message.IsLessThanOrEqual);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Datetime_Unary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_Datetime_Unary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @static
     * @param {IProto_GlobalFilter_Datetime_Unary} message Proto_GlobalFilter_Datetime_Unary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Datetime_Unary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_Datetime_Unary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_Datetime_Unary} Proto_GlobalFilter_Datetime_Unary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Datetime_Unary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_Datetime_Unary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.Operand = reader.int64();
                break;
            case 10:
                message.ICEquals = reader.bool();
                break;
            case 11:
                message.DoesNotEqual = reader.bool();
                break;
            case 12:
                message.IsGreaterThan = reader.bool();
                break;
            case 13:
                message.IsGreaterThanOrEqual = reader.bool();
                break;
            case 14:
                message.IsLessThan = reader.bool();
                break;
            case 15:
                message.IsLessThanOrEqual = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_Datetime_Unary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_Datetime_Unary} Proto_GlobalFilter_Datetime_Unary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Datetime_Unary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_Datetime_Unary message.
     * @function verify
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_Datetime_Unary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        var properties = {};
        if (message.Operand != null && message.hasOwnProperty("Operand"))
            if (!$util.isInteger(message.Operand) && !(message.Operand && $util.isInteger(message.Operand.low) && $util.isInteger(message.Operand.high)))
                return "Operand: integer|Long expected";
        if (message.ICEquals != null && message.hasOwnProperty("ICEquals")) {
            properties.Operator = 1;
            if (typeof message.ICEquals !== "boolean")
                return "ICEquals: boolean expected";
        }
        if (message.DoesNotEqual != null && message.hasOwnProperty("DoesNotEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.DoesNotEqual !== "boolean")
                return "DoesNotEqual: boolean expected";
        }
        if (message.IsGreaterThan != null && message.hasOwnProperty("IsGreaterThan")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsGreaterThan !== "boolean")
                return "IsGreaterThan: boolean expected";
        }
        if (message.IsGreaterThanOrEqual != null && message.hasOwnProperty("IsGreaterThanOrEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsGreaterThanOrEqual !== "boolean")
                return "IsGreaterThanOrEqual: boolean expected";
        }
        if (message.IsLessThan != null && message.hasOwnProperty("IsLessThan")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsLessThan !== "boolean")
                return "IsLessThan: boolean expected";
        }
        if (message.IsLessThanOrEqual != null && message.hasOwnProperty("IsLessThanOrEqual")) {
            if (properties.Operator === 1)
                return "Operator: multiple values";
            properties.Operator = 1;
            if (typeof message.IsLessThanOrEqual !== "boolean")
                return "IsLessThanOrEqual: boolean expected";
        }
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_Datetime_Unary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_Datetime_Unary} Proto_GlobalFilter_Datetime_Unary
     */
    Proto_GlobalFilter_Datetime_Unary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_Datetime_Unary)
            return object;
        var message = new $root.Proto_GlobalFilter_Datetime_Unary();
        if (object.Operand != null)
            if ($util.Long)
                (message.Operand = $util.Long.fromValue(object.Operand)).unsigned = false;
            else if (typeof object.Operand === "string")
                message.Operand = parseInt(object.Operand, 10);
            else if (typeof object.Operand === "number")
                message.Operand = object.Operand;
            else if (typeof object.Operand === "object")
                message.Operand = new $util.LongBits(object.Operand.low >>> 0, object.Operand.high >>> 0).toNumber();
        if (object.ICEquals != null)
            message.ICEquals = Boolean(object.ICEquals);
        if (object.DoesNotEqual != null)
            message.DoesNotEqual = Boolean(object.DoesNotEqual);
        if (object.IsGreaterThan != null)
            message.IsGreaterThan = Boolean(object.IsGreaterThan);
        if (object.IsGreaterThanOrEqual != null)
            message.IsGreaterThanOrEqual = Boolean(object.IsGreaterThanOrEqual);
        if (object.IsLessThan != null)
            message.IsLessThan = Boolean(object.IsLessThan);
        if (object.IsLessThanOrEqual != null)
            message.IsLessThanOrEqual = Boolean(object.IsLessThanOrEqual);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_Datetime_Unary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @static
     * @param {Proto_GlobalFilter_Datetime_Unary} message Proto_GlobalFilter_Datetime_Unary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_Datetime_Unary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults)
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.Operand = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.Operand = options.longs === String ? "0" : 0;
        if (message.Operand != null && message.hasOwnProperty("Operand"))
            if (typeof message.Operand === "number")
                object.Operand = options.longs === String ? String(message.Operand) : message.Operand;
            else
                object.Operand = options.longs === String ? $util.Long.prototype.toString.call(message.Operand) : options.longs === Number ? new $util.LongBits(message.Operand.low >>> 0, message.Operand.high >>> 0).toNumber() : message.Operand;
        if (message.ICEquals != null && message.hasOwnProperty("ICEquals")) {
            object.ICEquals = message.ICEquals;
            if (options.oneofs)
                object.Operator = "ICEquals";
        }
        if (message.DoesNotEqual != null && message.hasOwnProperty("DoesNotEqual")) {
            object.DoesNotEqual = message.DoesNotEqual;
            if (options.oneofs)
                object.Operator = "DoesNotEqual";
        }
        if (message.IsGreaterThan != null && message.hasOwnProperty("IsGreaterThan")) {
            object.IsGreaterThan = message.IsGreaterThan;
            if (options.oneofs)
                object.Operator = "IsGreaterThan";
        }
        if (message.IsGreaterThanOrEqual != null && message.hasOwnProperty("IsGreaterThanOrEqual")) {
            object.IsGreaterThanOrEqual = message.IsGreaterThanOrEqual;
            if (options.oneofs)
                object.Operator = "IsGreaterThanOrEqual";
        }
        if (message.IsLessThan != null && message.hasOwnProperty("IsLessThan")) {
            object.IsLessThan = message.IsLessThan;
            if (options.oneofs)
                object.Operator = "IsLessThan";
        }
        if (message.IsLessThanOrEqual != null && message.hasOwnProperty("IsLessThanOrEqual")) {
            object.IsLessThanOrEqual = message.IsLessThanOrEqual;
            if (options.oneofs)
                object.Operator = "IsLessThanOrEqual";
        }
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_Datetime_Unary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_Datetime_Unary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_Datetime_Unary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_Datetime_Unary;
})();

$root.Proto_GlobalFilter_Datetime_Binary = (function() {

    /**
     * Properties of a Proto_GlobalFilter_Datetime_Binary.
     * @exports IProto_GlobalFilter_Datetime_Binary
     * @interface IProto_GlobalFilter_Datetime_Binary
     * @property {number|Long|null} [LeftOperand] Proto_GlobalFilter_Datetime_Binary LeftOperand
     * @property {number|Long|null} [RightOperand] Proto_GlobalFilter_Datetime_Binary RightOperand
     * @property {boolean|null} [IsBetween] Proto_GlobalFilter_Datetime_Binary IsBetween
     */

    /**
     * Constructs a new Proto_GlobalFilter_Datetime_Binary.
     * @exports Proto_GlobalFilter_Datetime_Binary
     * @classdesc Represents a Proto_GlobalFilter_Datetime_Binary.
     * @implements IProto_GlobalFilter_Datetime_Binary
     * @constructor
     * @param {IProto_GlobalFilter_Datetime_Binary=} [properties] Properties to set
     */
    function Proto_GlobalFilter_Datetime_Binary(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GlobalFilter_Datetime_Binary LeftOperand.
     * @member {number|Long} LeftOperand
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Binary.prototype.LeftOperand = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_GlobalFilter_Datetime_Binary RightOperand.
     * @member {number|Long} RightOperand
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Binary.prototype.RightOperand = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_GlobalFilter_Datetime_Binary IsBetween.
     * @member {boolean} IsBetween
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @instance
     */
    Proto_GlobalFilter_Datetime_Binary.prototype.IsBetween = false;

    /**
     * Creates a new Proto_GlobalFilter_Datetime_Binary instance using the specified properties.
     * @function create
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @static
     * @param {IProto_GlobalFilter_Datetime_Binary=} [properties] Properties to set
     * @returns {Proto_GlobalFilter_Datetime_Binary} Proto_GlobalFilter_Datetime_Binary instance
     */
    Proto_GlobalFilter_Datetime_Binary.create = function create(properties) {
        return new Proto_GlobalFilter_Datetime_Binary(properties);
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Datetime_Binary message. Does not implicitly {@link Proto_GlobalFilter_Datetime_Binary.verify|verify} messages.
     * @function encode
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @static
     * @param {IProto_GlobalFilter_Datetime_Binary} message Proto_GlobalFilter_Datetime_Binary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Datetime_Binary.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.LeftOperand != null && Object.hasOwnProperty.call(message, "LeftOperand"))
            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.LeftOperand);
        if (message.RightOperand != null && Object.hasOwnProperty.call(message, "RightOperand"))
            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.RightOperand);
        if (message.IsBetween != null && Object.hasOwnProperty.call(message, "IsBetween"))
            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.IsBetween);
        return writer;
    };

    /**
     * Encodes the specified Proto_GlobalFilter_Datetime_Binary message, length delimited. Does not implicitly {@link Proto_GlobalFilter_Datetime_Binary.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @static
     * @param {IProto_GlobalFilter_Datetime_Binary} message Proto_GlobalFilter_Datetime_Binary message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GlobalFilter_Datetime_Binary.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GlobalFilter_Datetime_Binary message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GlobalFilter_Datetime_Binary} Proto_GlobalFilter_Datetime_Binary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Datetime_Binary.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GlobalFilter_Datetime_Binary();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.LeftOperand = reader.int64();
                break;
            case 2:
                message.RightOperand = reader.int64();
                break;
            case 3:
                message.IsBetween = reader.bool();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GlobalFilter_Datetime_Binary message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GlobalFilter_Datetime_Binary} Proto_GlobalFilter_Datetime_Binary
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GlobalFilter_Datetime_Binary.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GlobalFilter_Datetime_Binary message.
     * @function verify
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GlobalFilter_Datetime_Binary.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.LeftOperand != null && message.hasOwnProperty("LeftOperand"))
            if (!$util.isInteger(message.LeftOperand) && !(message.LeftOperand && $util.isInteger(message.LeftOperand.low) && $util.isInteger(message.LeftOperand.high)))
                return "LeftOperand: integer|Long expected";
        if (message.RightOperand != null && message.hasOwnProperty("RightOperand"))
            if (!$util.isInteger(message.RightOperand) && !(message.RightOperand && $util.isInteger(message.RightOperand.low) && $util.isInteger(message.RightOperand.high)))
                return "RightOperand: integer|Long expected";
        if (message.IsBetween != null && message.hasOwnProperty("IsBetween"))
            if (typeof message.IsBetween !== "boolean")
                return "IsBetween: boolean expected";
        return null;
    };

    /**
     * Creates a Proto_GlobalFilter_Datetime_Binary message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GlobalFilter_Datetime_Binary} Proto_GlobalFilter_Datetime_Binary
     */
    Proto_GlobalFilter_Datetime_Binary.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GlobalFilter_Datetime_Binary)
            return object;
        var message = new $root.Proto_GlobalFilter_Datetime_Binary();
        if (object.LeftOperand != null)
            if ($util.Long)
                (message.LeftOperand = $util.Long.fromValue(object.LeftOperand)).unsigned = false;
            else if (typeof object.LeftOperand === "string")
                message.LeftOperand = parseInt(object.LeftOperand, 10);
            else if (typeof object.LeftOperand === "number")
                message.LeftOperand = object.LeftOperand;
            else if (typeof object.LeftOperand === "object")
                message.LeftOperand = new $util.LongBits(object.LeftOperand.low >>> 0, object.LeftOperand.high >>> 0).toNumber();
        if (object.RightOperand != null)
            if ($util.Long)
                (message.RightOperand = $util.Long.fromValue(object.RightOperand)).unsigned = false;
            else if (typeof object.RightOperand === "string")
                message.RightOperand = parseInt(object.RightOperand, 10);
            else if (typeof object.RightOperand === "number")
                message.RightOperand = object.RightOperand;
            else if (typeof object.RightOperand === "object")
                message.RightOperand = new $util.LongBits(object.RightOperand.low >>> 0, object.RightOperand.high >>> 0).toNumber();
        if (object.IsBetween != null)
            message.IsBetween = Boolean(object.IsBetween);
        return message;
    };

    /**
     * Creates a plain object from a Proto_GlobalFilter_Datetime_Binary message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @static
     * @param {Proto_GlobalFilter_Datetime_Binary} message Proto_GlobalFilter_Datetime_Binary
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GlobalFilter_Datetime_Binary.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.LeftOperand = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.LeftOperand = options.longs === String ? "0" : 0;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.RightOperand = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.RightOperand = options.longs === String ? "0" : 0;
            object.IsBetween = false;
        }
        if (message.LeftOperand != null && message.hasOwnProperty("LeftOperand"))
            if (typeof message.LeftOperand === "number")
                object.LeftOperand = options.longs === String ? String(message.LeftOperand) : message.LeftOperand;
            else
                object.LeftOperand = options.longs === String ? $util.Long.prototype.toString.call(message.LeftOperand) : options.longs === Number ? new $util.LongBits(message.LeftOperand.low >>> 0, message.LeftOperand.high >>> 0).toNumber() : message.LeftOperand;
        if (message.RightOperand != null && message.hasOwnProperty("RightOperand"))
            if (typeof message.RightOperand === "number")
                object.RightOperand = options.longs === String ? String(message.RightOperand) : message.RightOperand;
            else
                object.RightOperand = options.longs === String ? $util.Long.prototype.toString.call(message.RightOperand) : options.longs === Number ? new $util.LongBits(message.RightOperand.low >>> 0, message.RightOperand.high >>> 0).toNumber() : message.RightOperand;
        if (message.IsBetween != null && message.hasOwnProperty("IsBetween"))
            object.IsBetween = message.IsBetween;
        return object;
    };

    /**
     * Converts this Proto_GlobalFilter_Datetime_Binary to JSON.
     * @function toJSON
     * @memberof Proto_GlobalFilter_Datetime_Binary
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GlobalFilter_Datetime_Binary.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GlobalFilter_Datetime_Binary;
})();

$root.Proto_DataRelationRequest = (function() {

    /**
     * Properties of a Proto_DataRelationRequest.
     * @exports IProto_DataRelationRequest
     * @interface IProto_DataRelationRequest
     * @property {number|null} [RelationRequestID] Proto_DataRelationRequest RelationRequestID
     * @property {Uint8Array|null} [relation] Proto_DataRelationRequest relation
     * @property {Uint8Array|null} [parentclassname] Proto_DataRelationRequest parentclassname
     * @property {Array.<IProto_RelationParent>|null} [parent] Proto_DataRelationRequest parent
     * @property {Array.<IProto_DTSchemaColumn>|null} [parentPKColumn] Proto_DataRelationRequest parentPKColumn
     * @property {Uint8Array|null} [SelectedGroupType] Proto_DataRelationRequest SelectedGroupType
     * @property {boolean|null} [IncludeGroupTypesInResponse] Proto_DataRelationRequest IncludeGroupTypesInResponse
     * @property {Array.<Uint8Array>|null} ["function"] Proto_DataRelationRequest function
     * @property {Array.<Uint8Array>|null} [DistinctByField] Proto_DataRelationRequest DistinctByField
     */

    /**
     * Constructs a new Proto_DataRelationRequest.
     * @exports Proto_DataRelationRequest
     * @classdesc Represents a Proto_DataRelationRequest.
     * @implements IProto_DataRelationRequest
     * @constructor
     * @param {IProto_DataRelationRequest=} [properties] Properties to set
     */
    function Proto_DataRelationRequest(properties) {
        this.parent = [];
        this.parentPKColumn = [];
        this["function"] = [];
        this.DistinctByField = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataRelationRequest RelationRequestID.
     * @member {number} RelationRequestID
     * @memberof Proto_DataRelationRequest
     * @instance
     */
    Proto_DataRelationRequest.prototype.RelationRequestID = 0;

    /**
     * Proto_DataRelationRequest relation.
     * @member {Uint8Array} relation
     * @memberof Proto_DataRelationRequest
     * @instance
     */
    Proto_DataRelationRequest.prototype.relation = $util.newBuffer([]);

    /**
     * Proto_DataRelationRequest parentclassname.
     * @member {Uint8Array} parentclassname
     * @memberof Proto_DataRelationRequest
     * @instance
     */
    Proto_DataRelationRequest.prototype.parentclassname = $util.newBuffer([]);

    /**
     * Proto_DataRelationRequest parent.
     * @member {Array.<IProto_RelationParent>} parent
     * @memberof Proto_DataRelationRequest
     * @instance
     */
    Proto_DataRelationRequest.prototype.parent = $util.emptyArray;

    /**
     * Proto_DataRelationRequest parentPKColumn.
     * @member {Array.<IProto_DTSchemaColumn>} parentPKColumn
     * @memberof Proto_DataRelationRequest
     * @instance
     */
    Proto_DataRelationRequest.prototype.parentPKColumn = $util.emptyArray;

    /**
     * Proto_DataRelationRequest SelectedGroupType.
     * @member {Uint8Array} SelectedGroupType
     * @memberof Proto_DataRelationRequest
     * @instance
     */
    Proto_DataRelationRequest.prototype.SelectedGroupType = $util.newBuffer([]);

    /**
     * Proto_DataRelationRequest IncludeGroupTypesInResponse.
     * @member {boolean} IncludeGroupTypesInResponse
     * @memberof Proto_DataRelationRequest
     * @instance
     */
    Proto_DataRelationRequest.prototype.IncludeGroupTypesInResponse = false;

    /**
     * Proto_DataRelationRequest function.
     * @member {Array.<Uint8Array>} function
     * @memberof Proto_DataRelationRequest
     * @instance
     */
    Proto_DataRelationRequest.prototype["function"] = $util.emptyArray;

    /**
     * Proto_DataRelationRequest DistinctByField.
     * @member {Array.<Uint8Array>} DistinctByField
     * @memberof Proto_DataRelationRequest
     * @instance
     */
    Proto_DataRelationRequest.prototype.DistinctByField = $util.emptyArray;

    /**
     * Creates a new Proto_DataRelationRequest instance using the specified properties.
     * @function create
     * @memberof Proto_DataRelationRequest
     * @static
     * @param {IProto_DataRelationRequest=} [properties] Properties to set
     * @returns {Proto_DataRelationRequest} Proto_DataRelationRequest instance
     */
    Proto_DataRelationRequest.create = function create(properties) {
        return new Proto_DataRelationRequest(properties);
    };

    /**
     * Encodes the specified Proto_DataRelationRequest message. Does not implicitly {@link Proto_DataRelationRequest.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataRelationRequest
     * @static
     * @param {IProto_DataRelationRequest} message Proto_DataRelationRequest message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataRelationRequest.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.RelationRequestID != null && Object.hasOwnProperty.call(message, "RelationRequestID"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.RelationRequestID);
        if (message.relation != null && Object.hasOwnProperty.call(message, "relation"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.relation);
        if (message.parentclassname != null && Object.hasOwnProperty.call(message, "parentclassname"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.parentclassname);
        if (message.parent != null && message.parent.length)
            for (var i = 0; i < message.parent.length; ++i)
                $root.Proto_RelationParent.encode(message.parent[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
        if (message["function"] != null && message["function"].length)
            for (var i = 0; i < message["function"].length; ++i)
                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message["function"][i]);
        if (message.parentPKColumn != null && message.parentPKColumn.length)
            for (var i = 0; i < message.parentPKColumn.length; ++i)
                $root.Proto_DTSchemaColumn.encode(message.parentPKColumn[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
        if (message.SelectedGroupType != null && Object.hasOwnProperty.call(message, "SelectedGroupType"))
            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.SelectedGroupType);
        if (message.IncludeGroupTypesInResponse != null && Object.hasOwnProperty.call(message, "IncludeGroupTypesInResponse"))
            writer.uint32(/* id 8, wireType 0 =*/64).bool(message.IncludeGroupTypesInResponse);
        if (message.DistinctByField != null && message.DistinctByField.length)
            for (var i = 0; i < message.DistinctByField.length; ++i)
                writer.uint32(/* id 10, wireType 2 =*/82).bytes(message.DistinctByField[i]);
        return writer;
    };

    /**
     * Encodes the specified Proto_DataRelationRequest message, length delimited. Does not implicitly {@link Proto_DataRelationRequest.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataRelationRequest
     * @static
     * @param {IProto_DataRelationRequest} message Proto_DataRelationRequest message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataRelationRequest.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataRelationRequest message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataRelationRequest
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataRelationRequest} Proto_DataRelationRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataRelationRequest.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataRelationRequest();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.RelationRequestID = reader.int32();
                break;
            case 2:
                message.relation = reader.bytes();
                break;
            case 3:
                message.parentclassname = reader.bytes();
                break;
            case 4:
                if (!(message.parent && message.parent.length))
                    message.parent = [];
                message.parent.push($root.Proto_RelationParent.decode(reader, reader.uint32()));
                break;
            case 6:
                if (!(message.parentPKColumn && message.parentPKColumn.length))
                    message.parentPKColumn = [];
                message.parentPKColumn.push($root.Proto_DTSchemaColumn.decode(reader, reader.uint32()));
                break;
            case 7:
                message.SelectedGroupType = reader.bytes();
                break;
            case 8:
                message.IncludeGroupTypesInResponse = reader.bool();
                break;
            case 5:
                if (!(message["function"] && message["function"].length))
                    message["function"] = [];
                message["function"].push(reader.bytes());
                break;
            case 10:
                if (!(message.DistinctByField && message.DistinctByField.length))
                    message.DistinctByField = [];
                message.DistinctByField.push(reader.bytes());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataRelationRequest message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataRelationRequest
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataRelationRequest} Proto_DataRelationRequest
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataRelationRequest.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataRelationRequest message.
     * @function verify
     * @memberof Proto_DataRelationRequest
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataRelationRequest.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.RelationRequestID != null && message.hasOwnProperty("RelationRequestID"))
            if (!$util.isInteger(message.RelationRequestID))
                return "RelationRequestID: integer expected";
        if (message.relation != null && message.hasOwnProperty("relation"))
            if (!(message.relation && typeof message.relation.length === "number" || $util.isString(message.relation)))
                return "relation: buffer expected";
        if (message.parentclassname != null && message.hasOwnProperty("parentclassname"))
            if (!(message.parentclassname && typeof message.parentclassname.length === "number" || $util.isString(message.parentclassname)))
                return "parentclassname: buffer expected";
        if (message.parent != null && message.hasOwnProperty("parent")) {
            if (!Array.isArray(message.parent))
                return "parent: array expected";
            for (var i = 0; i < message.parent.length; ++i) {
                var error = $root.Proto_RelationParent.verify(message.parent[i]);
                if (error)
                    return "parent." + error;
            }
        }
        if (message.parentPKColumn != null && message.hasOwnProperty("parentPKColumn")) {
            if (!Array.isArray(message.parentPKColumn))
                return "parentPKColumn: array expected";
            for (var i = 0; i < message.parentPKColumn.length; ++i) {
                var error = $root.Proto_DTSchemaColumn.verify(message.parentPKColumn[i]);
                if (error)
                    return "parentPKColumn." + error;
            }
        }
        if (message.SelectedGroupType != null && message.hasOwnProperty("SelectedGroupType"))
            if (!(message.SelectedGroupType && typeof message.SelectedGroupType.length === "number" || $util.isString(message.SelectedGroupType)))
                return "SelectedGroupType: buffer expected";
        if (message.IncludeGroupTypesInResponse != null && message.hasOwnProperty("IncludeGroupTypesInResponse"))
            if (typeof message.IncludeGroupTypesInResponse !== "boolean")
                return "IncludeGroupTypesInResponse: boolean expected";
        if (message["function"] != null && message.hasOwnProperty("function")) {
            if (!Array.isArray(message["function"]))
                return "function: array expected";
            for (var i = 0; i < message["function"].length; ++i)
                if (!(message["function"][i] && typeof message["function"][i].length === "number" || $util.isString(message["function"][i])))
                    return "function: buffer[] expected";
        }
        if (message.DistinctByField != null && message.hasOwnProperty("DistinctByField")) {
            if (!Array.isArray(message.DistinctByField))
                return "DistinctByField: array expected";
            for (var i = 0; i < message.DistinctByField.length; ++i)
                if (!(message.DistinctByField[i] && typeof message.DistinctByField[i].length === "number" || $util.isString(message.DistinctByField[i])))
                    return "DistinctByField: buffer[] expected";
        }
        return null;
    };

    /**
     * Creates a Proto_DataRelationRequest message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataRelationRequest
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataRelationRequest} Proto_DataRelationRequest
     */
    Proto_DataRelationRequest.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataRelationRequest)
            return object;
        var message = new $root.Proto_DataRelationRequest();
        if (object.RelationRequestID != null)
            message.RelationRequestID = object.RelationRequestID | 0;
        if (object.relation != null)
            if (typeof object.relation === "string")
                $util.base64.decode(object.relation, message.relation = $util.newBuffer($util.base64.length(object.relation)), 0);
            else if (object.relation.length)
                message.relation = object.relation;
        if (object.parentclassname != null)
            if (typeof object.parentclassname === "string")
                $util.base64.decode(object.parentclassname, message.parentclassname = $util.newBuffer($util.base64.length(object.parentclassname)), 0);
            else if (object.parentclassname.length)
                message.parentclassname = object.parentclassname;
        if (object.parent) {
            if (!Array.isArray(object.parent))
                throw TypeError(".Proto_DataRelationRequest.parent: array expected");
            message.parent = [];
            for (var i = 0; i < object.parent.length; ++i) {
                if (typeof object.parent[i] !== "object")
                    throw TypeError(".Proto_DataRelationRequest.parent: object expected");
                message.parent[i] = $root.Proto_RelationParent.fromObject(object.parent[i]);
            }
        }
        if (object.parentPKColumn) {
            if (!Array.isArray(object.parentPKColumn))
                throw TypeError(".Proto_DataRelationRequest.parentPKColumn: array expected");
            message.parentPKColumn = [];
            for (var i = 0; i < object.parentPKColumn.length; ++i) {
                if (typeof object.parentPKColumn[i] !== "object")
                    throw TypeError(".Proto_DataRelationRequest.parentPKColumn: object expected");
                message.parentPKColumn[i] = $root.Proto_DTSchemaColumn.fromObject(object.parentPKColumn[i]);
            }
        }
        if (object.SelectedGroupType != null)
            if (typeof object.SelectedGroupType === "string")
                $util.base64.decode(object.SelectedGroupType, message.SelectedGroupType = $util.newBuffer($util.base64.length(object.SelectedGroupType)), 0);
            else if (object.SelectedGroupType.length)
                message.SelectedGroupType = object.SelectedGroupType;
        if (object.IncludeGroupTypesInResponse != null)
            message.IncludeGroupTypesInResponse = Boolean(object.IncludeGroupTypesInResponse);
        if (object["function"]) {
            if (!Array.isArray(object["function"]))
                throw TypeError(".Proto_DataRelationRequest.function: array expected");
            message["function"] = [];
            for (var i = 0; i < object["function"].length; ++i)
                if (typeof object["function"][i] === "string")
                    $util.base64.decode(object["function"][i], message["function"][i] = $util.newBuffer($util.base64.length(object["function"][i])), 0);
                else if (object["function"][i].length)
                    message["function"][i] = object["function"][i];
        }
        if (object.DistinctByField) {
            if (!Array.isArray(object.DistinctByField))
                throw TypeError(".Proto_DataRelationRequest.DistinctByField: array expected");
            message.DistinctByField = [];
            for (var i = 0; i < object.DistinctByField.length; ++i)
                if (typeof object.DistinctByField[i] === "string")
                    $util.base64.decode(object.DistinctByField[i], message.DistinctByField[i] = $util.newBuffer($util.base64.length(object.DistinctByField[i])), 0);
                else if (object.DistinctByField[i].length)
                    message.DistinctByField[i] = object.DistinctByField[i];
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataRelationRequest message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataRelationRequest
     * @static
     * @param {Proto_DataRelationRequest} message Proto_DataRelationRequest
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataRelationRequest.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.parent = [];
            object["function"] = [];
            object.parentPKColumn = [];
            object.DistinctByField = [];
        }
        if (options.defaults) {
            object.RelationRequestID = 0;
            if (options.bytes === String)
                object.relation = "";
            else {
                object.relation = [];
                if (options.bytes !== Array)
                    object.relation = $util.newBuffer(object.relation);
            }
            if (options.bytes === String)
                object.parentclassname = "";
            else {
                object.parentclassname = [];
                if (options.bytes !== Array)
                    object.parentclassname = $util.newBuffer(object.parentclassname);
            }
            if (options.bytes === String)
                object.SelectedGroupType = "";
            else {
                object.SelectedGroupType = [];
                if (options.bytes !== Array)
                    object.SelectedGroupType = $util.newBuffer(object.SelectedGroupType);
            }
            object.IncludeGroupTypesInResponse = false;
        }
        if (message.RelationRequestID != null && message.hasOwnProperty("RelationRequestID"))
            object.RelationRequestID = message.RelationRequestID;
        if (message.relation != null && message.hasOwnProperty("relation"))
            object.relation = options.bytes === String ? $util.base64.encode(message.relation, 0, message.relation.length) : options.bytes === Array ? Array.prototype.slice.call(message.relation) : message.relation;
        if (message.parentclassname != null && message.hasOwnProperty("parentclassname"))
            object.parentclassname = options.bytes === String ? $util.base64.encode(message.parentclassname, 0, message.parentclassname.length) : options.bytes === Array ? Array.prototype.slice.call(message.parentclassname) : message.parentclassname;
        if (message.parent && message.parent.length) {
            object.parent = [];
            for (var j = 0; j < message.parent.length; ++j)
                object.parent[j] = $root.Proto_RelationParent.toObject(message.parent[j], options);
        }
        if (message["function"] && message["function"].length) {
            object["function"] = [];
            for (var j = 0; j < message["function"].length; ++j)
                object["function"][j] = options.bytes === String ? $util.base64.encode(message["function"][j], 0, message["function"][j].length) : options.bytes === Array ? Array.prototype.slice.call(message["function"][j]) : message["function"][j];
        }
        if (message.parentPKColumn && message.parentPKColumn.length) {
            object.parentPKColumn = [];
            for (var j = 0; j < message.parentPKColumn.length; ++j)
                object.parentPKColumn[j] = $root.Proto_DTSchemaColumn.toObject(message.parentPKColumn[j], options);
        }
        if (message.SelectedGroupType != null && message.hasOwnProperty("SelectedGroupType"))
            object.SelectedGroupType = options.bytes === String ? $util.base64.encode(message.SelectedGroupType, 0, message.SelectedGroupType.length) : options.bytes === Array ? Array.prototype.slice.call(message.SelectedGroupType) : message.SelectedGroupType;
        if (message.IncludeGroupTypesInResponse != null && message.hasOwnProperty("IncludeGroupTypesInResponse"))
            object.IncludeGroupTypesInResponse = message.IncludeGroupTypesInResponse;
        if (message.DistinctByField && message.DistinctByField.length) {
            object.DistinctByField = [];
            for (var j = 0; j < message.DistinctByField.length; ++j)
                object.DistinctByField[j] = options.bytes === String ? $util.base64.encode(message.DistinctByField[j], 0, message.DistinctByField[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.DistinctByField[j]) : message.DistinctByField[j];
        }
        return object;
    };

    /**
     * Converts this Proto_DataRelationRequest to JSON.
     * @function toJSON
     * @memberof Proto_DataRelationRequest
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataRelationRequest.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataRelationRequest;
})();

$root.Proto_RelationParent = (function() {

    /**
     * Properties of a Proto_RelationParent.
     * @exports IProto_RelationParent
     * @interface IProto_RelationParent
     * @property {Array.<number|Long>|null} [ParentReferenceID] Proto_RelationParent ParentReferenceID
     * @property {Array.<IProto_ExistingObject>|null} [ExistingObject] Proto_RelationParent ExistingObject
     * @property {Array.<IProto_DataTableRow>|null} [PKRow] Proto_RelationParent PKRow
     */

    /**
     * Constructs a new Proto_RelationParent.
     * @exports Proto_RelationParent
     * @classdesc Represents a Proto_RelationParent.
     * @implements IProto_RelationParent
     * @constructor
     * @param {IProto_RelationParent=} [properties] Properties to set
     */
    function Proto_RelationParent(properties) {
        this.ParentReferenceID = [];
        this.ExistingObject = [];
        this.PKRow = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_RelationParent ParentReferenceID.
     * @member {Array.<number|Long>} ParentReferenceID
     * @memberof Proto_RelationParent
     * @instance
     */
    Proto_RelationParent.prototype.ParentReferenceID = $util.emptyArray;

    /**
     * Proto_RelationParent ExistingObject.
     * @member {Array.<IProto_ExistingObject>} ExistingObject
     * @memberof Proto_RelationParent
     * @instance
     */
    Proto_RelationParent.prototype.ExistingObject = $util.emptyArray;

    /**
     * Proto_RelationParent PKRow.
     * @member {Array.<IProto_DataTableRow>} PKRow
     * @memberof Proto_RelationParent
     * @instance
     */
    Proto_RelationParent.prototype.PKRow = $util.emptyArray;

    /**
     * Creates a new Proto_RelationParent instance using the specified properties.
     * @function create
     * @memberof Proto_RelationParent
     * @static
     * @param {IProto_RelationParent=} [properties] Properties to set
     * @returns {Proto_RelationParent} Proto_RelationParent instance
     */
    Proto_RelationParent.create = function create(properties) {
        return new Proto_RelationParent(properties);
    };

    /**
     * Encodes the specified Proto_RelationParent message. Does not implicitly {@link Proto_RelationParent.verify|verify} messages.
     * @function encode
     * @memberof Proto_RelationParent
     * @static
     * @param {IProto_RelationParent} message Proto_RelationParent message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_RelationParent.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ParentReferenceID != null && message.ParentReferenceID.length) {
            writer.uint32(/* id 3, wireType 2 =*/26).fork();
            for (var i = 0; i < message.ParentReferenceID.length; ++i)
                writer.int64(message.ParentReferenceID[i]);
            writer.ldelim();
        }
        if (message.PKRow != null && message.PKRow.length)
            for (var i = 0; i < message.PKRow.length; ++i)
                $root.Proto_DataTableRow.encode(message.PKRow[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
        if (message.ExistingObject != null && message.ExistingObject.length)
            for (var i = 0; i < message.ExistingObject.length; ++i)
                $root.Proto_ExistingObject.encode(message.ExistingObject[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_RelationParent message, length delimited. Does not implicitly {@link Proto_RelationParent.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_RelationParent
     * @static
     * @param {IProto_RelationParent} message Proto_RelationParent message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_RelationParent.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_RelationParent message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_RelationParent
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_RelationParent} Proto_RelationParent
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_RelationParent.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_RelationParent();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 3:
                if (!(message.ParentReferenceID && message.ParentReferenceID.length))
                    message.ParentReferenceID = [];
                if ((tag & 7) === 2) {
                    var end2 = reader.uint32() + reader.pos;
                    while (reader.pos < end2)
                        message.ParentReferenceID.push(reader.int64());
                } else
                    message.ParentReferenceID.push(reader.int64());
                break;
            case 10:
                if (!(message.ExistingObject && message.ExistingObject.length))
                    message.ExistingObject = [];
                message.ExistingObject.push($root.Proto_ExistingObject.decode(reader, reader.uint32()));
                break;
            case 7:
                if (!(message.PKRow && message.PKRow.length))
                    message.PKRow = [];
                message.PKRow.push($root.Proto_DataTableRow.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_RelationParent message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_RelationParent
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_RelationParent} Proto_RelationParent
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_RelationParent.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_RelationParent message.
     * @function verify
     * @memberof Proto_RelationParent
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_RelationParent.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ParentReferenceID != null && message.hasOwnProperty("ParentReferenceID")) {
            if (!Array.isArray(message.ParentReferenceID))
                return "ParentReferenceID: array expected";
            for (var i = 0; i < message.ParentReferenceID.length; ++i)
                if (!$util.isInteger(message.ParentReferenceID[i]) && !(message.ParentReferenceID[i] && $util.isInteger(message.ParentReferenceID[i].low) && $util.isInteger(message.ParentReferenceID[i].high)))
                    return "ParentReferenceID: integer|Long[] expected";
        }
        if (message.ExistingObject != null && message.hasOwnProperty("ExistingObject")) {
            if (!Array.isArray(message.ExistingObject))
                return "ExistingObject: array expected";
            for (var i = 0; i < message.ExistingObject.length; ++i) {
                var error = $root.Proto_ExistingObject.verify(message.ExistingObject[i]);
                if (error)
                    return "ExistingObject." + error;
            }
        }
        if (message.PKRow != null && message.hasOwnProperty("PKRow")) {
            if (!Array.isArray(message.PKRow))
                return "PKRow: array expected";
            for (var i = 0; i < message.PKRow.length; ++i) {
                var error = $root.Proto_DataTableRow.verify(message.PKRow[i]);
                if (error)
                    return "PKRow." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_RelationParent message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_RelationParent
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_RelationParent} Proto_RelationParent
     */
    Proto_RelationParent.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_RelationParent)
            return object;
        var message = new $root.Proto_RelationParent();
        if (object.ParentReferenceID) {
            if (!Array.isArray(object.ParentReferenceID))
                throw TypeError(".Proto_RelationParent.ParentReferenceID: array expected");
            message.ParentReferenceID = [];
            for (var i = 0; i < object.ParentReferenceID.length; ++i)
                if ($util.Long)
                    (message.ParentReferenceID[i] = $util.Long.fromValue(object.ParentReferenceID[i])).unsigned = false;
                else if (typeof object.ParentReferenceID[i] === "string")
                    message.ParentReferenceID[i] = parseInt(object.ParentReferenceID[i], 10);
                else if (typeof object.ParentReferenceID[i] === "number")
                    message.ParentReferenceID[i] = object.ParentReferenceID[i];
                else if (typeof object.ParentReferenceID[i] === "object")
                    message.ParentReferenceID[i] = new $util.LongBits(object.ParentReferenceID[i].low >>> 0, object.ParentReferenceID[i].high >>> 0).toNumber();
        }
        if (object.ExistingObject) {
            if (!Array.isArray(object.ExistingObject))
                throw TypeError(".Proto_RelationParent.ExistingObject: array expected");
            message.ExistingObject = [];
            for (var i = 0; i < object.ExistingObject.length; ++i) {
                if (typeof object.ExistingObject[i] !== "object")
                    throw TypeError(".Proto_RelationParent.ExistingObject: object expected");
                message.ExistingObject[i] = $root.Proto_ExistingObject.fromObject(object.ExistingObject[i]);
            }
        }
        if (object.PKRow) {
            if (!Array.isArray(object.PKRow))
                throw TypeError(".Proto_RelationParent.PKRow: array expected");
            message.PKRow = [];
            for (var i = 0; i < object.PKRow.length; ++i) {
                if (typeof object.PKRow[i] !== "object")
                    throw TypeError(".Proto_RelationParent.PKRow: object expected");
                message.PKRow[i] = $root.Proto_DataTableRow.fromObject(object.PKRow[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_RelationParent message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_RelationParent
     * @static
     * @param {Proto_RelationParent} message Proto_RelationParent
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_RelationParent.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.ParentReferenceID = [];
            object.PKRow = [];
            object.ExistingObject = [];
        }
        if (message.ParentReferenceID && message.ParentReferenceID.length) {
            object.ParentReferenceID = [];
            for (var j = 0; j < message.ParentReferenceID.length; ++j)
                if (typeof message.ParentReferenceID[j] === "number")
                    object.ParentReferenceID[j] = options.longs === String ? String(message.ParentReferenceID[j]) : message.ParentReferenceID[j];
                else
                    object.ParentReferenceID[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ParentReferenceID[j]) : options.longs === Number ? new $util.LongBits(message.ParentReferenceID[j].low >>> 0, message.ParentReferenceID[j].high >>> 0).toNumber() : message.ParentReferenceID[j];
        }
        if (message.PKRow && message.PKRow.length) {
            object.PKRow = [];
            for (var j = 0; j < message.PKRow.length; ++j)
                object.PKRow[j] = $root.Proto_DataTableRow.toObject(message.PKRow[j], options);
        }
        if (message.ExistingObject && message.ExistingObject.length) {
            object.ExistingObject = [];
            for (var j = 0; j < message.ExistingObject.length; ++j)
                object.ExistingObject[j] = $root.Proto_ExistingObject.toObject(message.ExistingObject[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_RelationParent to JSON.
     * @function toJSON
     * @memberof Proto_RelationParent
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_RelationParent.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_RelationParent;
})();

$root.Proto_ExistingObject = (function() {

    /**
     * Properties of a Proto_ExistingObject.
     * @exports IProto_ExistingObject
     * @interface IProto_ExistingObject
     * @property {number|Long|null} [ReferenceID] Proto_ExistingObject ReferenceID
     * @property {Uint8Array|null} [RevisionInfo] Proto_ExistingObject RevisionInfo
     */

    /**
     * Constructs a new Proto_ExistingObject.
     * @exports Proto_ExistingObject
     * @classdesc Represents a Proto_ExistingObject.
     * @implements IProto_ExistingObject
     * @constructor
     * @param {IProto_ExistingObject=} [properties] Properties to set
     */
    function Proto_ExistingObject(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_ExistingObject ReferenceID.
     * @member {number|Long} ReferenceID
     * @memberof Proto_ExistingObject
     * @instance
     */
    Proto_ExistingObject.prototype.ReferenceID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_ExistingObject RevisionInfo.
     * @member {Uint8Array} RevisionInfo
     * @memberof Proto_ExistingObject
     * @instance
     */
    Proto_ExistingObject.prototype.RevisionInfo = $util.newBuffer([]);

    /**
     * Creates a new Proto_ExistingObject instance using the specified properties.
     * @function create
     * @memberof Proto_ExistingObject
     * @static
     * @param {IProto_ExistingObject=} [properties] Properties to set
     * @returns {Proto_ExistingObject} Proto_ExistingObject instance
     */
    Proto_ExistingObject.create = function create(properties) {
        return new Proto_ExistingObject(properties);
    };

    /**
     * Encodes the specified Proto_ExistingObject message. Does not implicitly {@link Proto_ExistingObject.verify|verify} messages.
     * @function encode
     * @memberof Proto_ExistingObject
     * @static
     * @param {IProto_ExistingObject} message Proto_ExistingObject message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ExistingObject.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ReferenceID != null && Object.hasOwnProperty.call(message, "ReferenceID"))
            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.ReferenceID);
        if (message.RevisionInfo != null && Object.hasOwnProperty.call(message, "RevisionInfo"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.RevisionInfo);
        return writer;
    };

    /**
     * Encodes the specified Proto_ExistingObject message, length delimited. Does not implicitly {@link Proto_ExistingObject.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_ExistingObject
     * @static
     * @param {IProto_ExistingObject} message Proto_ExistingObject message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_ExistingObject.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_ExistingObject message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_ExistingObject
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_ExistingObject} Proto_ExistingObject
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ExistingObject.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_ExistingObject();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ReferenceID = reader.int64();
                break;
            case 2:
                message.RevisionInfo = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_ExistingObject message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_ExistingObject
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_ExistingObject} Proto_ExistingObject
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_ExistingObject.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_ExistingObject message.
     * @function verify
     * @memberof Proto_ExistingObject
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_ExistingObject.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ReferenceID != null && message.hasOwnProperty("ReferenceID"))
            if (!$util.isInteger(message.ReferenceID) && !(message.ReferenceID && $util.isInteger(message.ReferenceID.low) && $util.isInteger(message.ReferenceID.high)))
                return "ReferenceID: integer|Long expected";
        if (message.RevisionInfo != null && message.hasOwnProperty("RevisionInfo"))
            if (!(message.RevisionInfo && typeof message.RevisionInfo.length === "number" || $util.isString(message.RevisionInfo)))
                return "RevisionInfo: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_ExistingObject message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_ExistingObject
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_ExistingObject} Proto_ExistingObject
     */
    Proto_ExistingObject.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_ExistingObject)
            return object;
        var message = new $root.Proto_ExistingObject();
        if (object.ReferenceID != null)
            if ($util.Long)
                (message.ReferenceID = $util.Long.fromValue(object.ReferenceID)).unsigned = false;
            else if (typeof object.ReferenceID === "string")
                message.ReferenceID = parseInt(object.ReferenceID, 10);
            else if (typeof object.ReferenceID === "number")
                message.ReferenceID = object.ReferenceID;
            else if (typeof object.ReferenceID === "object")
                message.ReferenceID = new $util.LongBits(object.ReferenceID.low >>> 0, object.ReferenceID.high >>> 0).toNumber();
        if (object.RevisionInfo != null)
            if (typeof object.RevisionInfo === "string")
                $util.base64.decode(object.RevisionInfo, message.RevisionInfo = $util.newBuffer($util.base64.length(object.RevisionInfo)), 0);
            else if (object.RevisionInfo.length)
                message.RevisionInfo = object.RevisionInfo;
        return message;
    };

    /**
     * Creates a plain object from a Proto_ExistingObject message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_ExistingObject
     * @static
     * @param {Proto_ExistingObject} message Proto_ExistingObject
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_ExistingObject.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.ReferenceID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.ReferenceID = options.longs === String ? "0" : 0;
            if (options.bytes === String)
                object.RevisionInfo = "";
            else {
                object.RevisionInfo = [];
                if (options.bytes !== Array)
                    object.RevisionInfo = $util.newBuffer(object.RevisionInfo);
            }
        }
        if (message.ReferenceID != null && message.hasOwnProperty("ReferenceID"))
            if (typeof message.ReferenceID === "number")
                object.ReferenceID = options.longs === String ? String(message.ReferenceID) : message.ReferenceID;
            else
                object.ReferenceID = options.longs === String ? $util.Long.prototype.toString.call(message.ReferenceID) : options.longs === Number ? new $util.LongBits(message.ReferenceID.low >>> 0, message.ReferenceID.high >>> 0).toNumber() : message.ReferenceID;
        if (message.RevisionInfo != null && message.hasOwnProperty("RevisionInfo"))
            object.RevisionInfo = options.bytes === String ? $util.base64.encode(message.RevisionInfo, 0, message.RevisionInfo.length) : options.bytes === Array ? Array.prototype.slice.call(message.RevisionInfo) : message.RevisionInfo;
        return object;
    };

    /**
     * Converts this Proto_ExistingObject to JSON.
     * @function toJSON
     * @memberof Proto_ExistingObject
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_ExistingObject.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_ExistingObject;
})();

$root.Proto_DataSetResponse = (function() {

    /**
     * Properties of a Proto_DataSetResponse.
     * @exports IProto_DataSetResponse
     * @interface IProto_DataSetResponse
     * @property {Array.<IProto_DataSetRelationResponse>|null} [relationresponse] Proto_DataSetResponse relationresponse
     * @property {number|Long|null} [ModelRevisionNo] Proto_DataSetResponse ModelRevisionNo
     * @property {Array.<Uint8Array>|null} [CachedString] Proto_DataSetResponse CachedString
     */

    /**
     * Constructs a new Proto_DataSetResponse.
     * @exports Proto_DataSetResponse
     * @classdesc Represents a Proto_DataSetResponse.
     * @implements IProto_DataSetResponse
     * @constructor
     * @param {IProto_DataSetResponse=} [properties] Properties to set
     */
    function Proto_DataSetResponse(properties) {
        this.relationresponse = [];
        this.CachedString = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataSetResponse relationresponse.
     * @member {Array.<IProto_DataSetRelationResponse>} relationresponse
     * @memberof Proto_DataSetResponse
     * @instance
     */
    Proto_DataSetResponse.prototype.relationresponse = $util.emptyArray;

    /**
     * Proto_DataSetResponse ModelRevisionNo.
     * @member {number|Long} ModelRevisionNo
     * @memberof Proto_DataSetResponse
     * @instance
     */
    Proto_DataSetResponse.prototype.ModelRevisionNo = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_DataSetResponse CachedString.
     * @member {Array.<Uint8Array>} CachedString
     * @memberof Proto_DataSetResponse
     * @instance
     */
    Proto_DataSetResponse.prototype.CachedString = $util.emptyArray;

    /**
     * Creates a new Proto_DataSetResponse instance using the specified properties.
     * @function create
     * @memberof Proto_DataSetResponse
     * @static
     * @param {IProto_DataSetResponse=} [properties] Properties to set
     * @returns {Proto_DataSetResponse} Proto_DataSetResponse instance
     */
    Proto_DataSetResponse.create = function create(properties) {
        return new Proto_DataSetResponse(properties);
    };

    /**
     * Encodes the specified Proto_DataSetResponse message. Does not implicitly {@link Proto_DataSetResponse.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataSetResponse
     * @static
     * @param {IProto_DataSetResponse} message Proto_DataSetResponse message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetResponse.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.relationresponse != null && message.relationresponse.length)
            for (var i = 0; i < message.relationresponse.length; ++i)
                $root.Proto_DataSetRelationResponse.encode(message.relationresponse[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        if (message.ModelRevisionNo != null && Object.hasOwnProperty.call(message, "ModelRevisionNo"))
            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.ModelRevisionNo);
        if (message.CachedString != null && message.CachedString.length)
            for (var i = 0; i < message.CachedString.length; ++i)
                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.CachedString[i]);
        return writer;
    };

    /**
     * Encodes the specified Proto_DataSetResponse message, length delimited. Does not implicitly {@link Proto_DataSetResponse.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataSetResponse
     * @static
     * @param {IProto_DataSetResponse} message Proto_DataSetResponse message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetResponse.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataSetResponse message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataSetResponse
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataSetResponse} Proto_DataSetResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetResponse.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataSetResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.relationresponse && message.relationresponse.length))
                    message.relationresponse = [];
                message.relationresponse.push($root.Proto_DataSetRelationResponse.decode(reader, reader.uint32()));
                break;
            case 2:
                message.ModelRevisionNo = reader.int64();
                break;
            case 3:
                if (!(message.CachedString && message.CachedString.length))
                    message.CachedString = [];
                message.CachedString.push(reader.bytes());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataSetResponse message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataSetResponse
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataSetResponse} Proto_DataSetResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetResponse.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataSetResponse message.
     * @function verify
     * @memberof Proto_DataSetResponse
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataSetResponse.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.relationresponse != null && message.hasOwnProperty("relationresponse")) {
            if (!Array.isArray(message.relationresponse))
                return "relationresponse: array expected";
            for (var i = 0; i < message.relationresponse.length; ++i) {
                var error = $root.Proto_DataSetRelationResponse.verify(message.relationresponse[i]);
                if (error)
                    return "relationresponse." + error;
            }
        }
        if (message.ModelRevisionNo != null && message.hasOwnProperty("ModelRevisionNo"))
            if (!$util.isInteger(message.ModelRevisionNo) && !(message.ModelRevisionNo && $util.isInteger(message.ModelRevisionNo.low) && $util.isInteger(message.ModelRevisionNo.high)))
                return "ModelRevisionNo: integer|Long expected";
        if (message.CachedString != null && message.hasOwnProperty("CachedString")) {
            if (!Array.isArray(message.CachedString))
                return "CachedString: array expected";
            for (var i = 0; i < message.CachedString.length; ++i)
                if (!(message.CachedString[i] && typeof message.CachedString[i].length === "number" || $util.isString(message.CachedString[i])))
                    return "CachedString: buffer[] expected";
        }
        return null;
    };

    /**
     * Creates a Proto_DataSetResponse message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataSetResponse
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataSetResponse} Proto_DataSetResponse
     */
    Proto_DataSetResponse.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataSetResponse)
            return object;
        var message = new $root.Proto_DataSetResponse();
        if (object.relationresponse) {
            if (!Array.isArray(object.relationresponse))
                throw TypeError(".Proto_DataSetResponse.relationresponse: array expected");
            message.relationresponse = [];
            for (var i = 0; i < object.relationresponse.length; ++i) {
                if (typeof object.relationresponse[i] !== "object")
                    throw TypeError(".Proto_DataSetResponse.relationresponse: object expected");
                message.relationresponse[i] = $root.Proto_DataSetRelationResponse.fromObject(object.relationresponse[i]);
            }
        }
        if (object.ModelRevisionNo != null)
            if ($util.Long)
                (message.ModelRevisionNo = $util.Long.fromValue(object.ModelRevisionNo)).unsigned = false;
            else if (typeof object.ModelRevisionNo === "string")
                message.ModelRevisionNo = parseInt(object.ModelRevisionNo, 10);
            else if (typeof object.ModelRevisionNo === "number")
                message.ModelRevisionNo = object.ModelRevisionNo;
            else if (typeof object.ModelRevisionNo === "object")
                message.ModelRevisionNo = new $util.LongBits(object.ModelRevisionNo.low >>> 0, object.ModelRevisionNo.high >>> 0).toNumber();
        if (object.CachedString) {
            if (!Array.isArray(object.CachedString))
                throw TypeError(".Proto_DataSetResponse.CachedString: array expected");
            message.CachedString = [];
            for (var i = 0; i < object.CachedString.length; ++i)
                if (typeof object.CachedString[i] === "string")
                    $util.base64.decode(object.CachedString[i], message.CachedString[i] = $util.newBuffer($util.base64.length(object.CachedString[i])), 0);
                else if (object.CachedString[i].length)
                    message.CachedString[i] = object.CachedString[i];
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataSetResponse message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataSetResponse
     * @static
     * @param {Proto_DataSetResponse} message Proto_DataSetResponse
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataSetResponse.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.relationresponse = [];
            object.CachedString = [];
        }
        if (options.defaults)
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.ModelRevisionNo = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.ModelRevisionNo = options.longs === String ? "0" : 0;
        if (message.relationresponse && message.relationresponse.length) {
            object.relationresponse = [];
            for (var j = 0; j < message.relationresponse.length; ++j)
                object.relationresponse[j] = $root.Proto_DataSetRelationResponse.toObject(message.relationresponse[j], options);
        }
        if (message.ModelRevisionNo != null && message.hasOwnProperty("ModelRevisionNo"))
            if (typeof message.ModelRevisionNo === "number")
                object.ModelRevisionNo = options.longs === String ? String(message.ModelRevisionNo) : message.ModelRevisionNo;
            else
                object.ModelRevisionNo = options.longs === String ? $util.Long.prototype.toString.call(message.ModelRevisionNo) : options.longs === Number ? new $util.LongBits(message.ModelRevisionNo.low >>> 0, message.ModelRevisionNo.high >>> 0).toNumber() : message.ModelRevisionNo;
        if (message.CachedString && message.CachedString.length) {
            object.CachedString = [];
            for (var j = 0; j < message.CachedString.length; ++j)
                object.CachedString[j] = options.bytes === String ? $util.base64.encode(message.CachedString[j], 0, message.CachedString[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.CachedString[j]) : message.CachedString[j];
        }
        return object;
    };

    /**
     * Converts this Proto_DataSetResponse to JSON.
     * @function toJSON
     * @memberof Proto_DataSetResponse
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataSetResponse.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataSetResponse;
})();

$root.Proto_DataSetRelationResponse = (function() {

    /**
     * Properties of a Proto_DataSetRelationResponse.
     * @exports IProto_DataSetRelationResponse
     * @interface IProto_DataSetRelationResponse
     * @property {number|null} [RelationRequestID] Proto_DataSetRelationResponse RelationRequestID
     * @property {Uint8Array|null} [rowobjectclassname] Proto_DataSetRelationResponse rowobjectclassname
     * @property {Uint8Array|null} [lastrevisioninfo] Proto_DataSetRelationResponse lastrevisioninfo
     * @property {Uint8Array|null} [SelectedGroupType] Proto_DataSetRelationResponse SelectedGroupType
     * @property {Array.<IProto_GroupType>|null} [GroupType] Proto_DataSetRelationResponse GroupType
     * @property {Array.<IProto_DataSetRelationResponseColumn>|null} [column] Proto_DataSetRelationResponse column
     * @property {Array.<IProto_DataSetRelationResponseTable>|null} [table] Proto_DataSetRelationResponse table
     */

    /**
     * Constructs a new Proto_DataSetRelationResponse.
     * @exports Proto_DataSetRelationResponse
     * @classdesc Represents a Proto_DataSetRelationResponse.
     * @implements IProto_DataSetRelationResponse
     * @constructor
     * @param {IProto_DataSetRelationResponse=} [properties] Properties to set
     */
    function Proto_DataSetRelationResponse(properties) {
        this.GroupType = [];
        this.column = [];
        this.table = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataSetRelationResponse RelationRequestID.
     * @member {number} RelationRequestID
     * @memberof Proto_DataSetRelationResponse
     * @instance
     */
    Proto_DataSetRelationResponse.prototype.RelationRequestID = 0;

    /**
     * Proto_DataSetRelationResponse rowobjectclassname.
     * @member {Uint8Array} rowobjectclassname
     * @memberof Proto_DataSetRelationResponse
     * @instance
     */
    Proto_DataSetRelationResponse.prototype.rowobjectclassname = $util.newBuffer([]);

    /**
     * Proto_DataSetRelationResponse lastrevisioninfo.
     * @member {Uint8Array} lastrevisioninfo
     * @memberof Proto_DataSetRelationResponse
     * @instance
     */
    Proto_DataSetRelationResponse.prototype.lastrevisioninfo = $util.newBuffer([]);

    /**
     * Proto_DataSetRelationResponse SelectedGroupType.
     * @member {Uint8Array} SelectedGroupType
     * @memberof Proto_DataSetRelationResponse
     * @instance
     */
    Proto_DataSetRelationResponse.prototype.SelectedGroupType = $util.newBuffer([]);

    /**
     * Proto_DataSetRelationResponse GroupType.
     * @member {Array.<IProto_GroupType>} GroupType
     * @memberof Proto_DataSetRelationResponse
     * @instance
     */
    Proto_DataSetRelationResponse.prototype.GroupType = $util.emptyArray;

    /**
     * Proto_DataSetRelationResponse column.
     * @member {Array.<IProto_DataSetRelationResponseColumn>} column
     * @memberof Proto_DataSetRelationResponse
     * @instance
     */
    Proto_DataSetRelationResponse.prototype.column = $util.emptyArray;

    /**
     * Proto_DataSetRelationResponse table.
     * @member {Array.<IProto_DataSetRelationResponseTable>} table
     * @memberof Proto_DataSetRelationResponse
     * @instance
     */
    Proto_DataSetRelationResponse.prototype.table = $util.emptyArray;

    /**
     * Creates a new Proto_DataSetRelationResponse instance using the specified properties.
     * @function create
     * @memberof Proto_DataSetRelationResponse
     * @static
     * @param {IProto_DataSetRelationResponse=} [properties] Properties to set
     * @returns {Proto_DataSetRelationResponse} Proto_DataSetRelationResponse instance
     */
    Proto_DataSetRelationResponse.create = function create(properties) {
        return new Proto_DataSetRelationResponse(properties);
    };

    /**
     * Encodes the specified Proto_DataSetRelationResponse message. Does not implicitly {@link Proto_DataSetRelationResponse.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataSetRelationResponse
     * @static
     * @param {IProto_DataSetRelationResponse} message Proto_DataSetRelationResponse message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRelationResponse.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.RelationRequestID != null && Object.hasOwnProperty.call(message, "RelationRequestID"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.RelationRequestID);
        if (message.rowobjectclassname != null && Object.hasOwnProperty.call(message, "rowobjectclassname"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.rowobjectclassname);
        if (message.lastrevisioninfo != null && Object.hasOwnProperty.call(message, "lastrevisioninfo"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.lastrevisioninfo);
        if (message.column != null && message.column.length)
            for (var i = 0; i < message.column.length; ++i)
                $root.Proto_DataSetRelationResponseColumn.encode(message.column[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
        if (message.table != null && message.table.length)
            for (var i = 0; i < message.table.length; ++i)
                $root.Proto_DataSetRelationResponseTable.encode(message.table[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
        if (message.SelectedGroupType != null && Object.hasOwnProperty.call(message, "SelectedGroupType"))
            writer.uint32(/* id 11, wireType 2 =*/90).bytes(message.SelectedGroupType);
        if (message.GroupType != null && message.GroupType.length)
            for (var i = 0; i < message.GroupType.length; ++i)
                $root.Proto_GroupType.encode(message.GroupType[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_DataSetRelationResponse message, length delimited. Does not implicitly {@link Proto_DataSetRelationResponse.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataSetRelationResponse
     * @static
     * @param {IProto_DataSetRelationResponse} message Proto_DataSetRelationResponse message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRelationResponse.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataSetRelationResponse message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataSetRelationResponse
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataSetRelationResponse} Proto_DataSetRelationResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRelationResponse.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataSetRelationResponse();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.RelationRequestID = reader.int32();
                break;
            case 3:
                message.rowobjectclassname = reader.bytes();
                break;
            case 4:
                message.lastrevisioninfo = reader.bytes();
                break;
            case 11:
                message.SelectedGroupType = reader.bytes();
                break;
            case 12:
                if (!(message.GroupType && message.GroupType.length))
                    message.GroupType = [];
                message.GroupType.push($root.Proto_GroupType.decode(reader, reader.uint32()));
                break;
            case 6:
                if (!(message.column && message.column.length))
                    message.column = [];
                message.column.push($root.Proto_DataSetRelationResponseColumn.decode(reader, reader.uint32()));
                break;
            case 7:
                if (!(message.table && message.table.length))
                    message.table = [];
                message.table.push($root.Proto_DataSetRelationResponseTable.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataSetRelationResponse message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataSetRelationResponse
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataSetRelationResponse} Proto_DataSetRelationResponse
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRelationResponse.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataSetRelationResponse message.
     * @function verify
     * @memberof Proto_DataSetRelationResponse
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataSetRelationResponse.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.RelationRequestID != null && message.hasOwnProperty("RelationRequestID"))
            if (!$util.isInteger(message.RelationRequestID))
                return "RelationRequestID: integer expected";
        if (message.rowobjectclassname != null && message.hasOwnProperty("rowobjectclassname"))
            if (!(message.rowobjectclassname && typeof message.rowobjectclassname.length === "number" || $util.isString(message.rowobjectclassname)))
                return "rowobjectclassname: buffer expected";
        if (message.lastrevisioninfo != null && message.hasOwnProperty("lastrevisioninfo"))
            if (!(message.lastrevisioninfo && typeof message.lastrevisioninfo.length === "number" || $util.isString(message.lastrevisioninfo)))
                return "lastrevisioninfo: buffer expected";
        if (message.SelectedGroupType != null && message.hasOwnProperty("SelectedGroupType"))
            if (!(message.SelectedGroupType && typeof message.SelectedGroupType.length === "number" || $util.isString(message.SelectedGroupType)))
                return "SelectedGroupType: buffer expected";
        if (message.GroupType != null && message.hasOwnProperty("GroupType")) {
            if (!Array.isArray(message.GroupType))
                return "GroupType: array expected";
            for (var i = 0; i < message.GroupType.length; ++i) {
                var error = $root.Proto_GroupType.verify(message.GroupType[i]);
                if (error)
                    return "GroupType." + error;
            }
        }
        if (message.column != null && message.hasOwnProperty("column")) {
            if (!Array.isArray(message.column))
                return "column: array expected";
            for (var i = 0; i < message.column.length; ++i) {
                var error = $root.Proto_DataSetRelationResponseColumn.verify(message.column[i]);
                if (error)
                    return "column." + error;
            }
        }
        if (message.table != null && message.hasOwnProperty("table")) {
            if (!Array.isArray(message.table))
                return "table: array expected";
            for (var i = 0; i < message.table.length; ++i) {
                var error = $root.Proto_DataSetRelationResponseTable.verify(message.table[i]);
                if (error)
                    return "table." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_DataSetRelationResponse message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataSetRelationResponse
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataSetRelationResponse} Proto_DataSetRelationResponse
     */
    Proto_DataSetRelationResponse.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataSetRelationResponse)
            return object;
        var message = new $root.Proto_DataSetRelationResponse();
        if (object.RelationRequestID != null)
            message.RelationRequestID = object.RelationRequestID | 0;
        if (object.rowobjectclassname != null)
            if (typeof object.rowobjectclassname === "string")
                $util.base64.decode(object.rowobjectclassname, message.rowobjectclassname = $util.newBuffer($util.base64.length(object.rowobjectclassname)), 0);
            else if (object.rowobjectclassname.length)
                message.rowobjectclassname = object.rowobjectclassname;
        if (object.lastrevisioninfo != null)
            if (typeof object.lastrevisioninfo === "string")
                $util.base64.decode(object.lastrevisioninfo, message.lastrevisioninfo = $util.newBuffer($util.base64.length(object.lastrevisioninfo)), 0);
            else if (object.lastrevisioninfo.length)
                message.lastrevisioninfo = object.lastrevisioninfo;
        if (object.SelectedGroupType != null)
            if (typeof object.SelectedGroupType === "string")
                $util.base64.decode(object.SelectedGroupType, message.SelectedGroupType = $util.newBuffer($util.base64.length(object.SelectedGroupType)), 0);
            else if (object.SelectedGroupType.length)
                message.SelectedGroupType = object.SelectedGroupType;
        if (object.GroupType) {
            if (!Array.isArray(object.GroupType))
                throw TypeError(".Proto_DataSetRelationResponse.GroupType: array expected");
            message.GroupType = [];
            for (var i = 0; i < object.GroupType.length; ++i) {
                if (typeof object.GroupType[i] !== "object")
                    throw TypeError(".Proto_DataSetRelationResponse.GroupType: object expected");
                message.GroupType[i] = $root.Proto_GroupType.fromObject(object.GroupType[i]);
            }
        }
        if (object.column) {
            if (!Array.isArray(object.column))
                throw TypeError(".Proto_DataSetRelationResponse.column: array expected");
            message.column = [];
            for (var i = 0; i < object.column.length; ++i) {
                if (typeof object.column[i] !== "object")
                    throw TypeError(".Proto_DataSetRelationResponse.column: object expected");
                message.column[i] = $root.Proto_DataSetRelationResponseColumn.fromObject(object.column[i]);
            }
        }
        if (object.table) {
            if (!Array.isArray(object.table))
                throw TypeError(".Proto_DataSetRelationResponse.table: array expected");
            message.table = [];
            for (var i = 0; i < object.table.length; ++i) {
                if (typeof object.table[i] !== "object")
                    throw TypeError(".Proto_DataSetRelationResponse.table: object expected");
                message.table[i] = $root.Proto_DataSetRelationResponseTable.fromObject(object.table[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataSetRelationResponse message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataSetRelationResponse
     * @static
     * @param {Proto_DataSetRelationResponse} message Proto_DataSetRelationResponse
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataSetRelationResponse.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.column = [];
            object.table = [];
            object.GroupType = [];
        }
        if (options.defaults) {
            object.RelationRequestID = 0;
            if (options.bytes === String)
                object.rowobjectclassname = "";
            else {
                object.rowobjectclassname = [];
                if (options.bytes !== Array)
                    object.rowobjectclassname = $util.newBuffer(object.rowobjectclassname);
            }
            if (options.bytes === String)
                object.lastrevisioninfo = "";
            else {
                object.lastrevisioninfo = [];
                if (options.bytes !== Array)
                    object.lastrevisioninfo = $util.newBuffer(object.lastrevisioninfo);
            }
            if (options.bytes === String)
                object.SelectedGroupType = "";
            else {
                object.SelectedGroupType = [];
                if (options.bytes !== Array)
                    object.SelectedGroupType = $util.newBuffer(object.SelectedGroupType);
            }
        }
        if (message.RelationRequestID != null && message.hasOwnProperty("RelationRequestID"))
            object.RelationRequestID = message.RelationRequestID;
        if (message.rowobjectclassname != null && message.hasOwnProperty("rowobjectclassname"))
            object.rowobjectclassname = options.bytes === String ? $util.base64.encode(message.rowobjectclassname, 0, message.rowobjectclassname.length) : options.bytes === Array ? Array.prototype.slice.call(message.rowobjectclassname) : message.rowobjectclassname;
        if (message.lastrevisioninfo != null && message.hasOwnProperty("lastrevisioninfo"))
            object.lastrevisioninfo = options.bytes === String ? $util.base64.encode(message.lastrevisioninfo, 0, message.lastrevisioninfo.length) : options.bytes === Array ? Array.prototype.slice.call(message.lastrevisioninfo) : message.lastrevisioninfo;
        if (message.column && message.column.length) {
            object.column = [];
            for (var j = 0; j < message.column.length; ++j)
                object.column[j] = $root.Proto_DataSetRelationResponseColumn.toObject(message.column[j], options);
        }
        if (message.table && message.table.length) {
            object.table = [];
            for (var j = 0; j < message.table.length; ++j)
                object.table[j] = $root.Proto_DataSetRelationResponseTable.toObject(message.table[j], options);
        }
        if (message.SelectedGroupType != null && message.hasOwnProperty("SelectedGroupType"))
            object.SelectedGroupType = options.bytes === String ? $util.base64.encode(message.SelectedGroupType, 0, message.SelectedGroupType.length) : options.bytes === Array ? Array.prototype.slice.call(message.SelectedGroupType) : message.SelectedGroupType;
        if (message.GroupType && message.GroupType.length) {
            object.GroupType = [];
            for (var j = 0; j < message.GroupType.length; ++j)
                object.GroupType[j] = $root.Proto_GroupType.toObject(message.GroupType[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_DataSetRelationResponse to JSON.
     * @function toJSON
     * @memberof Proto_DataSetRelationResponse
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataSetRelationResponse.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataSetRelationResponse;
})();

$root.Proto_GroupType = (function() {

    /**
     * Properties of a Proto_GroupType.
     * @exports IProto_GroupType
     * @interface IProto_GroupType
     * @property {Uint8Array|null} [GroupType] Proto_GroupType GroupType
     * @property {Uint8Array|null} [Description] Proto_GroupType Description
     * @property {Uint8Array|null} [KeyFunctions] Proto_GroupType KeyFunctions
     * @property {Uint8Array|null} [FilterExpression] Proto_GroupType FilterExpression
     * @property {Uint8Array|null} [Error] Proto_GroupType Error
     * @property {boolean|null} [CanDelete] Proto_GroupType CanDelete
     * @property {boolean|null} [CanEdit] Proto_GroupType CanEdit
     * @property {number|null} [State] Proto_GroupType State
     */

    /**
     * Constructs a new Proto_GroupType.
     * @exports Proto_GroupType
     * @classdesc Represents a Proto_GroupType.
     * @implements IProto_GroupType
     * @constructor
     * @param {IProto_GroupType=} [properties] Properties to set
     */
    function Proto_GroupType(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GroupType GroupType.
     * @member {Uint8Array} GroupType
     * @memberof Proto_GroupType
     * @instance
     */
    Proto_GroupType.prototype.GroupType = $util.newBuffer([]);

    /**
     * Proto_GroupType Description.
     * @member {Uint8Array} Description
     * @memberof Proto_GroupType
     * @instance
     */
    Proto_GroupType.prototype.Description = $util.newBuffer([]);

    /**
     * Proto_GroupType KeyFunctions.
     * @member {Uint8Array} KeyFunctions
     * @memberof Proto_GroupType
     * @instance
     */
    Proto_GroupType.prototype.KeyFunctions = $util.newBuffer([]);

    /**
     * Proto_GroupType FilterExpression.
     * @member {Uint8Array} FilterExpression
     * @memberof Proto_GroupType
     * @instance
     */
    Proto_GroupType.prototype.FilterExpression = $util.newBuffer([]);

    /**
     * Proto_GroupType Error.
     * @member {Uint8Array} Error
     * @memberof Proto_GroupType
     * @instance
     */
    Proto_GroupType.prototype.Error = $util.newBuffer([]);

    /**
     * Proto_GroupType CanDelete.
     * @member {boolean} CanDelete
     * @memberof Proto_GroupType
     * @instance
     */
    Proto_GroupType.prototype.CanDelete = false;

    /**
     * Proto_GroupType CanEdit.
     * @member {boolean} CanEdit
     * @memberof Proto_GroupType
     * @instance
     */
    Proto_GroupType.prototype.CanEdit = false;

    /**
     * Proto_GroupType State.
     * @member {number} State
     * @memberof Proto_GroupType
     * @instance
     */
    Proto_GroupType.prototype.State = 0;

    /**
     * Creates a new Proto_GroupType instance using the specified properties.
     * @function create
     * @memberof Proto_GroupType
     * @static
     * @param {IProto_GroupType=} [properties] Properties to set
     * @returns {Proto_GroupType} Proto_GroupType instance
     */
    Proto_GroupType.create = function create(properties) {
        return new Proto_GroupType(properties);
    };

    /**
     * Encodes the specified Proto_GroupType message. Does not implicitly {@link Proto_GroupType.verify|verify} messages.
     * @function encode
     * @memberof Proto_GroupType
     * @static
     * @param {IProto_GroupType} message Proto_GroupType message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GroupType.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.GroupType != null && Object.hasOwnProperty.call(message, "GroupType"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.GroupType);
        if (message.Description != null && Object.hasOwnProperty.call(message, "Description"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.Description);
        if (message.KeyFunctions != null && Object.hasOwnProperty.call(message, "KeyFunctions"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.KeyFunctions);
        if (message.FilterExpression != null && Object.hasOwnProperty.call(message, "FilterExpression"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.FilterExpression);
        if (message.Error != null && Object.hasOwnProperty.call(message, "Error"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.Error);
        if (message.CanDelete != null && Object.hasOwnProperty.call(message, "CanDelete"))
            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.CanDelete);
        if (message.CanEdit != null && Object.hasOwnProperty.call(message, "CanEdit"))
            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.CanEdit);
        if (message.State != null && Object.hasOwnProperty.call(message, "State"))
            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.State);
        return writer;
    };

    /**
     * Encodes the specified Proto_GroupType message, length delimited. Does not implicitly {@link Proto_GroupType.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GroupType
     * @static
     * @param {IProto_GroupType} message Proto_GroupType message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GroupType.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GroupType message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GroupType
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GroupType} Proto_GroupType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GroupType.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GroupType();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.GroupType = reader.bytes();
                break;
            case 2:
                message.Description = reader.bytes();
                break;
            case 3:
                message.KeyFunctions = reader.bytes();
                break;
            case 4:
                message.FilterExpression = reader.bytes();
                break;
            case 5:
                message.Error = reader.bytes();
                break;
            case 6:
                message.CanDelete = reader.bool();
                break;
            case 7:
                message.CanEdit = reader.bool();
                break;
            case 8:
                message.State = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GroupType message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GroupType
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GroupType} Proto_GroupType
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GroupType.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GroupType message.
     * @function verify
     * @memberof Proto_GroupType
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GroupType.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.GroupType != null && message.hasOwnProperty("GroupType"))
            if (!(message.GroupType && typeof message.GroupType.length === "number" || $util.isString(message.GroupType)))
                return "GroupType: buffer expected";
        if (message.Description != null && message.hasOwnProperty("Description"))
            if (!(message.Description && typeof message.Description.length === "number" || $util.isString(message.Description)))
                return "Description: buffer expected";
        if (message.KeyFunctions != null && message.hasOwnProperty("KeyFunctions"))
            if (!(message.KeyFunctions && typeof message.KeyFunctions.length === "number" || $util.isString(message.KeyFunctions)))
                return "KeyFunctions: buffer expected";
        if (message.FilterExpression != null && message.hasOwnProperty("FilterExpression"))
            if (!(message.FilterExpression && typeof message.FilterExpression.length === "number" || $util.isString(message.FilterExpression)))
                return "FilterExpression: buffer expected";
        if (message.Error != null && message.hasOwnProperty("Error"))
            if (!(message.Error && typeof message.Error.length === "number" || $util.isString(message.Error)))
                return "Error: buffer expected";
        if (message.CanDelete != null && message.hasOwnProperty("CanDelete"))
            if (typeof message.CanDelete !== "boolean")
                return "CanDelete: boolean expected";
        if (message.CanEdit != null && message.hasOwnProperty("CanEdit"))
            if (typeof message.CanEdit !== "boolean")
                return "CanEdit: boolean expected";
        if (message.State != null && message.hasOwnProperty("State"))
            if (!$util.isInteger(message.State))
                return "State: integer expected";
        return null;
    };

    /**
     * Creates a Proto_GroupType message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GroupType
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GroupType} Proto_GroupType
     */
    Proto_GroupType.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GroupType)
            return object;
        var message = new $root.Proto_GroupType();
        if (object.GroupType != null)
            if (typeof object.GroupType === "string")
                $util.base64.decode(object.GroupType, message.GroupType = $util.newBuffer($util.base64.length(object.GroupType)), 0);
            else if (object.GroupType.length)
                message.GroupType = object.GroupType;
        if (object.Description != null)
            if (typeof object.Description === "string")
                $util.base64.decode(object.Description, message.Description = $util.newBuffer($util.base64.length(object.Description)), 0);
            else if (object.Description.length)
                message.Description = object.Description;
        if (object.KeyFunctions != null)
            if (typeof object.KeyFunctions === "string")
                $util.base64.decode(object.KeyFunctions, message.KeyFunctions = $util.newBuffer($util.base64.length(object.KeyFunctions)), 0);
            else if (object.KeyFunctions.length)
                message.KeyFunctions = object.KeyFunctions;
        if (object.FilterExpression != null)
            if (typeof object.FilterExpression === "string")
                $util.base64.decode(object.FilterExpression, message.FilterExpression = $util.newBuffer($util.base64.length(object.FilterExpression)), 0);
            else if (object.FilterExpression.length)
                message.FilterExpression = object.FilterExpression;
        if (object.Error != null)
            if (typeof object.Error === "string")
                $util.base64.decode(object.Error, message.Error = $util.newBuffer($util.base64.length(object.Error)), 0);
            else if (object.Error.length)
                message.Error = object.Error;
        if (object.CanDelete != null)
            message.CanDelete = Boolean(object.CanDelete);
        if (object.CanEdit != null)
            message.CanEdit = Boolean(object.CanEdit);
        if (object.State != null)
            message.State = object.State | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GroupType message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GroupType
     * @static
     * @param {Proto_GroupType} message Proto_GroupType
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GroupType.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.GroupType = "";
            else {
                object.GroupType = [];
                if (options.bytes !== Array)
                    object.GroupType = $util.newBuffer(object.GroupType);
            }
            if (options.bytes === String)
                object.Description = "";
            else {
                object.Description = [];
                if (options.bytes !== Array)
                    object.Description = $util.newBuffer(object.Description);
            }
            if (options.bytes === String)
                object.KeyFunctions = "";
            else {
                object.KeyFunctions = [];
                if (options.bytes !== Array)
                    object.KeyFunctions = $util.newBuffer(object.KeyFunctions);
            }
            if (options.bytes === String)
                object.FilterExpression = "";
            else {
                object.FilterExpression = [];
                if (options.bytes !== Array)
                    object.FilterExpression = $util.newBuffer(object.FilterExpression);
            }
            if (options.bytes === String)
                object.Error = "";
            else {
                object.Error = [];
                if (options.bytes !== Array)
                    object.Error = $util.newBuffer(object.Error);
            }
            object.CanDelete = false;
            object.CanEdit = false;
            object.State = 0;
        }
        if (message.GroupType != null && message.hasOwnProperty("GroupType"))
            object.GroupType = options.bytes === String ? $util.base64.encode(message.GroupType, 0, message.GroupType.length) : options.bytes === Array ? Array.prototype.slice.call(message.GroupType) : message.GroupType;
        if (message.Description != null && message.hasOwnProperty("Description"))
            object.Description = options.bytes === String ? $util.base64.encode(message.Description, 0, message.Description.length) : options.bytes === Array ? Array.prototype.slice.call(message.Description) : message.Description;
        if (message.KeyFunctions != null && message.hasOwnProperty("KeyFunctions"))
            object.KeyFunctions = options.bytes === String ? $util.base64.encode(message.KeyFunctions, 0, message.KeyFunctions.length) : options.bytes === Array ? Array.prototype.slice.call(message.KeyFunctions) : message.KeyFunctions;
        if (message.FilterExpression != null && message.hasOwnProperty("FilterExpression"))
            object.FilterExpression = options.bytes === String ? $util.base64.encode(message.FilterExpression, 0, message.FilterExpression.length) : options.bytes === Array ? Array.prototype.slice.call(message.FilterExpression) : message.FilterExpression;
        if (message.Error != null && message.hasOwnProperty("Error"))
            object.Error = options.bytes === String ? $util.base64.encode(message.Error, 0, message.Error.length) : options.bytes === Array ? Array.prototype.slice.call(message.Error) : message.Error;
        if (message.CanDelete != null && message.hasOwnProperty("CanDelete"))
            object.CanDelete = message.CanDelete;
        if (message.CanEdit != null && message.hasOwnProperty("CanEdit"))
            object.CanEdit = message.CanEdit;
        if (message.State != null && message.hasOwnProperty("State"))
            object.State = message.State;
        return object;
    };

    /**
     * Converts this Proto_GroupType to JSON.
     * @function toJSON
     * @memberof Proto_GroupType
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GroupType.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GroupType;
})();

$root.Proto_DataSetRelationResponseColumn = (function() {

    /**
     * Properties of a Proto_DataSetRelationResponseColumn.
     * @exports IProto_DataSetRelationResponseColumn
     * @interface IProto_DataSetRelationResponseColumn
     * @property {Uint8Array|null} [code] Proto_DataSetRelationResponseColumn code
     * @property {number|null} [accesstype] Proto_DataSetRelationResponseColumn accesstype
     */

    /**
     * Constructs a new Proto_DataSetRelationResponseColumn.
     * @exports Proto_DataSetRelationResponseColumn
     * @classdesc Represents a Proto_DataSetRelationResponseColumn.
     * @implements IProto_DataSetRelationResponseColumn
     * @constructor
     * @param {IProto_DataSetRelationResponseColumn=} [properties] Properties to set
     */
    function Proto_DataSetRelationResponseColumn(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataSetRelationResponseColumn code.
     * @member {Uint8Array} code
     * @memberof Proto_DataSetRelationResponseColumn
     * @instance
     */
    Proto_DataSetRelationResponseColumn.prototype.code = $util.newBuffer([]);

    /**
     * Proto_DataSetRelationResponseColumn accesstype.
     * @member {number} accesstype
     * @memberof Proto_DataSetRelationResponseColumn
     * @instance
     */
    Proto_DataSetRelationResponseColumn.prototype.accesstype = 0;

    /**
     * Creates a new Proto_DataSetRelationResponseColumn instance using the specified properties.
     * @function create
     * @memberof Proto_DataSetRelationResponseColumn
     * @static
     * @param {IProto_DataSetRelationResponseColumn=} [properties] Properties to set
     * @returns {Proto_DataSetRelationResponseColumn} Proto_DataSetRelationResponseColumn instance
     */
    Proto_DataSetRelationResponseColumn.create = function create(properties) {
        return new Proto_DataSetRelationResponseColumn(properties);
    };

    /**
     * Encodes the specified Proto_DataSetRelationResponseColumn message. Does not implicitly {@link Proto_DataSetRelationResponseColumn.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataSetRelationResponseColumn
     * @static
     * @param {IProto_DataSetRelationResponseColumn} message Proto_DataSetRelationResponseColumn message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRelationResponseColumn.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.code != null && Object.hasOwnProperty.call(message, "code"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.code);
        if (message.accesstype != null && Object.hasOwnProperty.call(message, "accesstype"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.accesstype);
        return writer;
    };

    /**
     * Encodes the specified Proto_DataSetRelationResponseColumn message, length delimited. Does not implicitly {@link Proto_DataSetRelationResponseColumn.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataSetRelationResponseColumn
     * @static
     * @param {IProto_DataSetRelationResponseColumn} message Proto_DataSetRelationResponseColumn message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRelationResponseColumn.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataSetRelationResponseColumn message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataSetRelationResponseColumn
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataSetRelationResponseColumn} Proto_DataSetRelationResponseColumn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRelationResponseColumn.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataSetRelationResponseColumn();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 3:
                message.code = reader.bytes();
                break;
            case 4:
                message.accesstype = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataSetRelationResponseColumn message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataSetRelationResponseColumn
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataSetRelationResponseColumn} Proto_DataSetRelationResponseColumn
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRelationResponseColumn.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataSetRelationResponseColumn message.
     * @function verify
     * @memberof Proto_DataSetRelationResponseColumn
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataSetRelationResponseColumn.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.code != null && message.hasOwnProperty("code"))
            if (!(message.code && typeof message.code.length === "number" || $util.isString(message.code)))
                return "code: buffer expected";
        if (message.accesstype != null && message.hasOwnProperty("accesstype"))
            if (!$util.isInteger(message.accesstype))
                return "accesstype: integer expected";
        return null;
    };

    /**
     * Creates a Proto_DataSetRelationResponseColumn message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataSetRelationResponseColumn
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataSetRelationResponseColumn} Proto_DataSetRelationResponseColumn
     */
    Proto_DataSetRelationResponseColumn.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataSetRelationResponseColumn)
            return object;
        var message = new $root.Proto_DataSetRelationResponseColumn();
        if (object.code != null)
            if (typeof object.code === "string")
                $util.base64.decode(object.code, message.code = $util.newBuffer($util.base64.length(object.code)), 0);
            else if (object.code.length)
                message.code = object.code;
        if (object.accesstype != null)
            message.accesstype = object.accesstype | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataSetRelationResponseColumn message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataSetRelationResponseColumn
     * @static
     * @param {Proto_DataSetRelationResponseColumn} message Proto_DataSetRelationResponseColumn
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataSetRelationResponseColumn.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.code = "";
            else {
                object.code = [];
                if (options.bytes !== Array)
                    object.code = $util.newBuffer(object.code);
            }
            object.accesstype = 0;
        }
        if (message.code != null && message.hasOwnProperty("code"))
            object.code = options.bytes === String ? $util.base64.encode(message.code, 0, message.code.length) : options.bytes === Array ? Array.prototype.slice.call(message.code) : message.code;
        if (message.accesstype != null && message.hasOwnProperty("accesstype"))
            object.accesstype = message.accesstype;
        return object;
    };

    /**
     * Converts this Proto_DataSetRelationResponseColumn to JSON.
     * @function toJSON
     * @memberof Proto_DataSetRelationResponseColumn
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataSetRelationResponseColumn.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataSetRelationResponseColumn;
})();

$root.Proto_DataSetRelationResponseTable = (function() {

    /**
     * Properties of a Proto_DataSetRelationResponseTable.
     * @exports IProto_DataSetRelationResponseTable
     * @interface IProto_DataSetRelationResponseTable
     * @property {Array.<number|Long>|null} [ParentReferenceID] Proto_DataSetRelationResponseTable ParentReferenceID
     * @property {Array.<IProto_DataSetRelationResponseRow>|null} [row] Proto_DataSetRelationResponseTable row
     */

    /**
     * Constructs a new Proto_DataSetRelationResponseTable.
     * @exports Proto_DataSetRelationResponseTable
     * @classdesc Represents a Proto_DataSetRelationResponseTable.
     * @implements IProto_DataSetRelationResponseTable
     * @constructor
     * @param {IProto_DataSetRelationResponseTable=} [properties] Properties to set
     */
    function Proto_DataSetRelationResponseTable(properties) {
        this.ParentReferenceID = [];
        this.row = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataSetRelationResponseTable ParentReferenceID.
     * @member {Array.<number|Long>} ParentReferenceID
     * @memberof Proto_DataSetRelationResponseTable
     * @instance
     */
    Proto_DataSetRelationResponseTable.prototype.ParentReferenceID = $util.emptyArray;

    /**
     * Proto_DataSetRelationResponseTable row.
     * @member {Array.<IProto_DataSetRelationResponseRow>} row
     * @memberof Proto_DataSetRelationResponseTable
     * @instance
     */
    Proto_DataSetRelationResponseTable.prototype.row = $util.emptyArray;

    /**
     * Creates a new Proto_DataSetRelationResponseTable instance using the specified properties.
     * @function create
     * @memberof Proto_DataSetRelationResponseTable
     * @static
     * @param {IProto_DataSetRelationResponseTable=} [properties] Properties to set
     * @returns {Proto_DataSetRelationResponseTable} Proto_DataSetRelationResponseTable instance
     */
    Proto_DataSetRelationResponseTable.create = function create(properties) {
        return new Proto_DataSetRelationResponseTable(properties);
    };

    /**
     * Encodes the specified Proto_DataSetRelationResponseTable message. Does not implicitly {@link Proto_DataSetRelationResponseTable.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataSetRelationResponseTable
     * @static
     * @param {IProto_DataSetRelationResponseTable} message Proto_DataSetRelationResponseTable message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRelationResponseTable.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ParentReferenceID != null && message.ParentReferenceID.length) {
            writer.uint32(/* id 1, wireType 2 =*/10).fork();
            for (var i = 0; i < message.ParentReferenceID.length; ++i)
                writer.int64(message.ParentReferenceID[i]);
            writer.ldelim();
        }
        if (message.row != null && message.row.length)
            for (var i = 0; i < message.row.length; ++i)
                $root.Proto_DataSetRelationResponseRow.encode(message.row[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_DataSetRelationResponseTable message, length delimited. Does not implicitly {@link Proto_DataSetRelationResponseTable.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataSetRelationResponseTable
     * @static
     * @param {IProto_DataSetRelationResponseTable} message Proto_DataSetRelationResponseTable message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRelationResponseTable.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataSetRelationResponseTable message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataSetRelationResponseTable
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataSetRelationResponseTable} Proto_DataSetRelationResponseTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRelationResponseTable.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataSetRelationResponseTable();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.ParentReferenceID && message.ParentReferenceID.length))
                    message.ParentReferenceID = [];
                if ((tag & 7) === 2) {
                    var end2 = reader.uint32() + reader.pos;
                    while (reader.pos < end2)
                        message.ParentReferenceID.push(reader.int64());
                } else
                    message.ParentReferenceID.push(reader.int64());
                break;
            case 7:
                if (!(message.row && message.row.length))
                    message.row = [];
                message.row.push($root.Proto_DataSetRelationResponseRow.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataSetRelationResponseTable message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataSetRelationResponseTable
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataSetRelationResponseTable} Proto_DataSetRelationResponseTable
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRelationResponseTable.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataSetRelationResponseTable message.
     * @function verify
     * @memberof Proto_DataSetRelationResponseTable
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataSetRelationResponseTable.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ParentReferenceID != null && message.hasOwnProperty("ParentReferenceID")) {
            if (!Array.isArray(message.ParentReferenceID))
                return "ParentReferenceID: array expected";
            for (var i = 0; i < message.ParentReferenceID.length; ++i)
                if (!$util.isInteger(message.ParentReferenceID[i]) && !(message.ParentReferenceID[i] && $util.isInteger(message.ParentReferenceID[i].low) && $util.isInteger(message.ParentReferenceID[i].high)))
                    return "ParentReferenceID: integer|Long[] expected";
        }
        if (message.row != null && message.hasOwnProperty("row")) {
            if (!Array.isArray(message.row))
                return "row: array expected";
            for (var i = 0; i < message.row.length; ++i) {
                var error = $root.Proto_DataSetRelationResponseRow.verify(message.row[i]);
                if (error)
                    return "row." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_DataSetRelationResponseTable message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataSetRelationResponseTable
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataSetRelationResponseTable} Proto_DataSetRelationResponseTable
     */
    Proto_DataSetRelationResponseTable.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataSetRelationResponseTable)
            return object;
        var message = new $root.Proto_DataSetRelationResponseTable();
        if (object.ParentReferenceID) {
            if (!Array.isArray(object.ParentReferenceID))
                throw TypeError(".Proto_DataSetRelationResponseTable.ParentReferenceID: array expected");
            message.ParentReferenceID = [];
            for (var i = 0; i < object.ParentReferenceID.length; ++i)
                if ($util.Long)
                    (message.ParentReferenceID[i] = $util.Long.fromValue(object.ParentReferenceID[i])).unsigned = false;
                else if (typeof object.ParentReferenceID[i] === "string")
                    message.ParentReferenceID[i] = parseInt(object.ParentReferenceID[i], 10);
                else if (typeof object.ParentReferenceID[i] === "number")
                    message.ParentReferenceID[i] = object.ParentReferenceID[i];
                else if (typeof object.ParentReferenceID[i] === "object")
                    message.ParentReferenceID[i] = new $util.LongBits(object.ParentReferenceID[i].low >>> 0, object.ParentReferenceID[i].high >>> 0).toNumber();
        }
        if (object.row) {
            if (!Array.isArray(object.row))
                throw TypeError(".Proto_DataSetRelationResponseTable.row: array expected");
            message.row = [];
            for (var i = 0; i < object.row.length; ++i) {
                if (typeof object.row[i] !== "object")
                    throw TypeError(".Proto_DataSetRelationResponseTable.row: object expected");
                message.row[i] = $root.Proto_DataSetRelationResponseRow.fromObject(object.row[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataSetRelationResponseTable message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataSetRelationResponseTable
     * @static
     * @param {Proto_DataSetRelationResponseTable} message Proto_DataSetRelationResponseTable
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataSetRelationResponseTable.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.ParentReferenceID = [];
            object.row = [];
        }
        if (message.ParentReferenceID && message.ParentReferenceID.length) {
            object.ParentReferenceID = [];
            for (var j = 0; j < message.ParentReferenceID.length; ++j)
                if (typeof message.ParentReferenceID[j] === "number")
                    object.ParentReferenceID[j] = options.longs === String ? String(message.ParentReferenceID[j]) : message.ParentReferenceID[j];
                else
                    object.ParentReferenceID[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ParentReferenceID[j]) : options.longs === Number ? new $util.LongBits(message.ParentReferenceID[j].low >>> 0, message.ParentReferenceID[j].high >>> 0).toNumber() : message.ParentReferenceID[j];
        }
        if (message.row && message.row.length) {
            object.row = [];
            for (var j = 0; j < message.row.length; ++j)
                object.row[j] = $root.Proto_DataSetRelationResponseRow.toObject(message.row[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_DataSetRelationResponseTable to JSON.
     * @function toJSON
     * @memberof Proto_DataSetRelationResponseTable
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataSetRelationResponseTable.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataSetRelationResponseTable;
})();

$root.Proto_DataSetRelationResponseRow = (function() {

    /**
     * Properties of a Proto_DataSetRelationResponseRow.
     * @exports IProto_DataSetRelationResponseRow
     * @interface IProto_DataSetRelationResponseRow
     * @property {number|Long|null} [RowObjectReferenceID] Proto_DataSetRelationResponseRow RowObjectReferenceID
     * @property {number|null} [Status] Proto_DataSetRelationResponseRow Status
     * @property {number|null} [Sequence] Proto_DataSetRelationResponseRow Sequence
     * @property {boolean|null} [IsRW] Proto_DataSetRelationResponseRow IsRW
     * @property {Array.<IProto_DataTableValue>|null} [value] Proto_DataSetRelationResponseRow value
     * @property {number|Long|null} [RowObjectDBID] Proto_DataSetRelationResponseRow RowObjectDBID
     * @property {Uint8Array|null} [RowObjectRevisionInfo] Proto_DataSetRelationResponseRow RowObjectRevisionInfo
     */

    /**
     * Constructs a new Proto_DataSetRelationResponseRow.
     * @exports Proto_DataSetRelationResponseRow
     * @classdesc Represents a Proto_DataSetRelationResponseRow.
     * @implements IProto_DataSetRelationResponseRow
     * @constructor
     * @param {IProto_DataSetRelationResponseRow=} [properties] Properties to set
     */
    function Proto_DataSetRelationResponseRow(properties) {
        this.value = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_DataSetRelationResponseRow RowObjectReferenceID.
     * @member {number|Long} RowObjectReferenceID
     * @memberof Proto_DataSetRelationResponseRow
     * @instance
     */
    Proto_DataSetRelationResponseRow.prototype.RowObjectReferenceID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_DataSetRelationResponseRow Status.
     * @member {number} Status
     * @memberof Proto_DataSetRelationResponseRow
     * @instance
     */
    Proto_DataSetRelationResponseRow.prototype.Status = 0;

    /**
     * Proto_DataSetRelationResponseRow Sequence.
     * @member {number} Sequence
     * @memberof Proto_DataSetRelationResponseRow
     * @instance
     */
    Proto_DataSetRelationResponseRow.prototype.Sequence = 0;

    /**
     * Proto_DataSetRelationResponseRow IsRW.
     * @member {boolean} IsRW
     * @memberof Proto_DataSetRelationResponseRow
     * @instance
     */
    Proto_DataSetRelationResponseRow.prototype.IsRW = false;

    /**
     * Proto_DataSetRelationResponseRow value.
     * @member {Array.<IProto_DataTableValue>} value
     * @memberof Proto_DataSetRelationResponseRow
     * @instance
     */
    Proto_DataSetRelationResponseRow.prototype.value = $util.emptyArray;

    /**
     * Proto_DataSetRelationResponseRow RowObjectDBID.
     * @member {number|Long} RowObjectDBID
     * @memberof Proto_DataSetRelationResponseRow
     * @instance
     */
    Proto_DataSetRelationResponseRow.prototype.RowObjectDBID = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

    /**
     * Proto_DataSetRelationResponseRow RowObjectRevisionInfo.
     * @member {Uint8Array} RowObjectRevisionInfo
     * @memberof Proto_DataSetRelationResponseRow
     * @instance
     */
    Proto_DataSetRelationResponseRow.prototype.RowObjectRevisionInfo = $util.newBuffer([]);

    /**
     * Creates a new Proto_DataSetRelationResponseRow instance using the specified properties.
     * @function create
     * @memberof Proto_DataSetRelationResponseRow
     * @static
     * @param {IProto_DataSetRelationResponseRow=} [properties] Properties to set
     * @returns {Proto_DataSetRelationResponseRow} Proto_DataSetRelationResponseRow instance
     */
    Proto_DataSetRelationResponseRow.create = function create(properties) {
        return new Proto_DataSetRelationResponseRow(properties);
    };

    /**
     * Encodes the specified Proto_DataSetRelationResponseRow message. Does not implicitly {@link Proto_DataSetRelationResponseRow.verify|verify} messages.
     * @function encode
     * @memberof Proto_DataSetRelationResponseRow
     * @static
     * @param {IProto_DataSetRelationResponseRow} message Proto_DataSetRelationResponseRow message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRelationResponseRow.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.RowObjectReferenceID != null && Object.hasOwnProperty.call(message, "RowObjectReferenceID"))
            writer.uint32(/* id 1, wireType 0 =*/8).int64(message.RowObjectReferenceID);
        if (message.Status != null && Object.hasOwnProperty.call(message, "Status"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.Status);
        if (message.Sequence != null && Object.hasOwnProperty.call(message, "Sequence"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.Sequence);
        if (message.IsRW != null && Object.hasOwnProperty.call(message, "IsRW"))
            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.IsRW);
        if (message.value != null && message.value.length)
            for (var i = 0; i < message.value.length; ++i)
                $root.Proto_DataTableValue.encode(message.value[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
        if (message.RowObjectDBID != null && Object.hasOwnProperty.call(message, "RowObjectDBID"))
            writer.uint32(/* id 6, wireType 0 =*/48).int64(message.RowObjectDBID);
        if (message.RowObjectRevisionInfo != null && Object.hasOwnProperty.call(message, "RowObjectRevisionInfo"))
            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.RowObjectRevisionInfo);
        return writer;
    };

    /**
     * Encodes the specified Proto_DataSetRelationResponseRow message, length delimited. Does not implicitly {@link Proto_DataSetRelationResponseRow.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_DataSetRelationResponseRow
     * @static
     * @param {IProto_DataSetRelationResponseRow} message Proto_DataSetRelationResponseRow message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_DataSetRelationResponseRow.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_DataSetRelationResponseRow message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_DataSetRelationResponseRow
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_DataSetRelationResponseRow} Proto_DataSetRelationResponseRow
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRelationResponseRow.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_DataSetRelationResponseRow();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.RowObjectReferenceID = reader.int64();
                break;
            case 2:
                message.Status = reader.int32();
                break;
            case 3:
                message.Sequence = reader.int32();
                break;
            case 4:
                message.IsRW = reader.bool();
                break;
            case 5:
                if (!(message.value && message.value.length))
                    message.value = [];
                message.value.push($root.Proto_DataTableValue.decode(reader, reader.uint32()));
                break;
            case 6:
                message.RowObjectDBID = reader.int64();
                break;
            case 7:
                message.RowObjectRevisionInfo = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_DataSetRelationResponseRow message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_DataSetRelationResponseRow
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_DataSetRelationResponseRow} Proto_DataSetRelationResponseRow
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_DataSetRelationResponseRow.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_DataSetRelationResponseRow message.
     * @function verify
     * @memberof Proto_DataSetRelationResponseRow
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_DataSetRelationResponseRow.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.RowObjectReferenceID != null && message.hasOwnProperty("RowObjectReferenceID"))
            if (!$util.isInteger(message.RowObjectReferenceID) && !(message.RowObjectReferenceID && $util.isInteger(message.RowObjectReferenceID.low) && $util.isInteger(message.RowObjectReferenceID.high)))
                return "RowObjectReferenceID: integer|Long expected";
        if (message.Status != null && message.hasOwnProperty("Status"))
            if (!$util.isInteger(message.Status))
                return "Status: integer expected";
        if (message.Sequence != null && message.hasOwnProperty("Sequence"))
            if (!$util.isInteger(message.Sequence))
                return "Sequence: integer expected";
        if (message.IsRW != null && message.hasOwnProperty("IsRW"))
            if (typeof message.IsRW !== "boolean")
                return "IsRW: boolean expected";
        if (message.value != null && message.hasOwnProperty("value")) {
            if (!Array.isArray(message.value))
                return "value: array expected";
            for (var i = 0; i < message.value.length; ++i) {
                var error = $root.Proto_DataTableValue.verify(message.value[i]);
                if (error)
                    return "value." + error;
            }
        }
        if (message.RowObjectDBID != null && message.hasOwnProperty("RowObjectDBID"))
            if (!$util.isInteger(message.RowObjectDBID) && !(message.RowObjectDBID && $util.isInteger(message.RowObjectDBID.low) && $util.isInteger(message.RowObjectDBID.high)))
                return "RowObjectDBID: integer|Long expected";
        if (message.RowObjectRevisionInfo != null && message.hasOwnProperty("RowObjectRevisionInfo"))
            if (!(message.RowObjectRevisionInfo && typeof message.RowObjectRevisionInfo.length === "number" || $util.isString(message.RowObjectRevisionInfo)))
                return "RowObjectRevisionInfo: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_DataSetRelationResponseRow message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_DataSetRelationResponseRow
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_DataSetRelationResponseRow} Proto_DataSetRelationResponseRow
     */
    Proto_DataSetRelationResponseRow.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_DataSetRelationResponseRow)
            return object;
        var message = new $root.Proto_DataSetRelationResponseRow();
        if (object.RowObjectReferenceID != null)
            if ($util.Long)
                (message.RowObjectReferenceID = $util.Long.fromValue(object.RowObjectReferenceID)).unsigned = false;
            else if (typeof object.RowObjectReferenceID === "string")
                message.RowObjectReferenceID = parseInt(object.RowObjectReferenceID, 10);
            else if (typeof object.RowObjectReferenceID === "number")
                message.RowObjectReferenceID = object.RowObjectReferenceID;
            else if (typeof object.RowObjectReferenceID === "object")
                message.RowObjectReferenceID = new $util.LongBits(object.RowObjectReferenceID.low >>> 0, object.RowObjectReferenceID.high >>> 0).toNumber();
        if (object.Status != null)
            message.Status = object.Status | 0;
        if (object.Sequence != null)
            message.Sequence = object.Sequence | 0;
        if (object.IsRW != null)
            message.IsRW = Boolean(object.IsRW);
        if (object.value) {
            if (!Array.isArray(object.value))
                throw TypeError(".Proto_DataSetRelationResponseRow.value: array expected");
            message.value = [];
            for (var i = 0; i < object.value.length; ++i) {
                if (typeof object.value[i] !== "object")
                    throw TypeError(".Proto_DataSetRelationResponseRow.value: object expected");
                message.value[i] = $root.Proto_DataTableValue.fromObject(object.value[i]);
            }
        }
        if (object.RowObjectDBID != null)
            if ($util.Long)
                (message.RowObjectDBID = $util.Long.fromValue(object.RowObjectDBID)).unsigned = false;
            else if (typeof object.RowObjectDBID === "string")
                message.RowObjectDBID = parseInt(object.RowObjectDBID, 10);
            else if (typeof object.RowObjectDBID === "number")
                message.RowObjectDBID = object.RowObjectDBID;
            else if (typeof object.RowObjectDBID === "object")
                message.RowObjectDBID = new $util.LongBits(object.RowObjectDBID.low >>> 0, object.RowObjectDBID.high >>> 0).toNumber();
        if (object.RowObjectRevisionInfo != null)
            if (typeof object.RowObjectRevisionInfo === "string")
                $util.base64.decode(object.RowObjectRevisionInfo, message.RowObjectRevisionInfo = $util.newBuffer($util.base64.length(object.RowObjectRevisionInfo)), 0);
            else if (object.RowObjectRevisionInfo.length)
                message.RowObjectRevisionInfo = object.RowObjectRevisionInfo;
        return message;
    };

    /**
     * Creates a plain object from a Proto_DataSetRelationResponseRow message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_DataSetRelationResponseRow
     * @static
     * @param {Proto_DataSetRelationResponseRow} message Proto_DataSetRelationResponseRow
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_DataSetRelationResponseRow.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.value = [];
        if (options.defaults) {
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.RowObjectReferenceID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.RowObjectReferenceID = options.longs === String ? "0" : 0;
            object.Status = 0;
            object.Sequence = 0;
            object.IsRW = false;
            if ($util.Long) {
                var long = new $util.Long(0, 0, false);
                object.RowObjectDBID = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
            } else
                object.RowObjectDBID = options.longs === String ? "0" : 0;
            if (options.bytes === String)
                object.RowObjectRevisionInfo = "";
            else {
                object.RowObjectRevisionInfo = [];
                if (options.bytes !== Array)
                    object.RowObjectRevisionInfo = $util.newBuffer(object.RowObjectRevisionInfo);
            }
        }
        if (message.RowObjectReferenceID != null && message.hasOwnProperty("RowObjectReferenceID"))
            if (typeof message.RowObjectReferenceID === "number")
                object.RowObjectReferenceID = options.longs === String ? String(message.RowObjectReferenceID) : message.RowObjectReferenceID;
            else
                object.RowObjectReferenceID = options.longs === String ? $util.Long.prototype.toString.call(message.RowObjectReferenceID) : options.longs === Number ? new $util.LongBits(message.RowObjectReferenceID.low >>> 0, message.RowObjectReferenceID.high >>> 0).toNumber() : message.RowObjectReferenceID;
        if (message.Status != null && message.hasOwnProperty("Status"))
            object.Status = message.Status;
        if (message.Sequence != null && message.hasOwnProperty("Sequence"))
            object.Sequence = message.Sequence;
        if (message.IsRW != null && message.hasOwnProperty("IsRW"))
            object.IsRW = message.IsRW;
        if (message.value && message.value.length) {
            object.value = [];
            for (var j = 0; j < message.value.length; ++j)
                object.value[j] = $root.Proto_DataTableValue.toObject(message.value[j], options);
        }
        if (message.RowObjectDBID != null && message.hasOwnProperty("RowObjectDBID"))
            if (typeof message.RowObjectDBID === "number")
                object.RowObjectDBID = options.longs === String ? String(message.RowObjectDBID) : message.RowObjectDBID;
            else
                object.RowObjectDBID = options.longs === String ? $util.Long.prototype.toString.call(message.RowObjectDBID) : options.longs === Number ? new $util.LongBits(message.RowObjectDBID.low >>> 0, message.RowObjectDBID.high >>> 0).toNumber() : message.RowObjectDBID;
        if (message.RowObjectRevisionInfo != null && message.hasOwnProperty("RowObjectRevisionInfo"))
            object.RowObjectRevisionInfo = options.bytes === String ? $util.base64.encode(message.RowObjectRevisionInfo, 0, message.RowObjectRevisionInfo.length) : options.bytes === Array ? Array.prototype.slice.call(message.RowObjectRevisionInfo) : message.RowObjectRevisionInfo;
        return object;
    };

    /**
     * Converts this Proto_DataSetRelationResponseRow to JSON.
     * @function toJSON
     * @memberof Proto_DataSetRelationResponseRow
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_DataSetRelationResponseRow.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_DataSetRelationResponseRow;
})();

$root.Proto_GSAMS_ParseExpression = (function() {

    /**
     * Properties of a Proto_GSAMS_ParseExpression.
     * @exports IProto_GSAMS_ParseExpression
     * @interface IProto_GSAMS_ParseExpression
     * @property {Uint8Array|null} [ClassName] Proto_GSAMS_ParseExpression ClassName
     * @property {Uint8Array|null} [Expression] Proto_GSAMS_ParseExpression Expression
     * @property {number|null} [ReturnTypeOption] Proto_GSAMS_ParseExpression ReturnTypeOption
     * @property {boolean|null} [IsPartialExpression] Proto_GSAMS_ParseExpression IsPartialExpression
     * @property {number|null} [SuggestionLimit] Proto_GSAMS_ParseExpression SuggestionLimit
     */

    /**
     * Constructs a new Proto_GSAMS_ParseExpression.
     * @exports Proto_GSAMS_ParseExpression
     * @classdesc Represents a Proto_GSAMS_ParseExpression.
     * @implements IProto_GSAMS_ParseExpression
     * @constructor
     * @param {IProto_GSAMS_ParseExpression=} [properties] Properties to set
     */
    function Proto_GSAMS_ParseExpression(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GSAMS_ParseExpression ClassName.
     * @member {Uint8Array} ClassName
     * @memberof Proto_GSAMS_ParseExpression
     * @instance
     */
    Proto_GSAMS_ParseExpression.prototype.ClassName = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression Expression.
     * @member {Uint8Array} Expression
     * @memberof Proto_GSAMS_ParseExpression
     * @instance
     */
    Proto_GSAMS_ParseExpression.prototype.Expression = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression ReturnTypeOption.
     * @member {number} ReturnTypeOption
     * @memberof Proto_GSAMS_ParseExpression
     * @instance
     */
    Proto_GSAMS_ParseExpression.prototype.ReturnTypeOption = 0;

    /**
     * Proto_GSAMS_ParseExpression IsPartialExpression.
     * @member {boolean} IsPartialExpression
     * @memberof Proto_GSAMS_ParseExpression
     * @instance
     */
    Proto_GSAMS_ParseExpression.prototype.IsPartialExpression = false;

    /**
     * Proto_GSAMS_ParseExpression SuggestionLimit.
     * @member {number} SuggestionLimit
     * @memberof Proto_GSAMS_ParseExpression
     * @instance
     */
    Proto_GSAMS_ParseExpression.prototype.SuggestionLimit = 0;

    /**
     * Creates a new Proto_GSAMS_ParseExpression instance using the specified properties.
     * @function create
     * @memberof Proto_GSAMS_ParseExpression
     * @static
     * @param {IProto_GSAMS_ParseExpression=} [properties] Properties to set
     * @returns {Proto_GSAMS_ParseExpression} Proto_GSAMS_ParseExpression instance
     */
    Proto_GSAMS_ParseExpression.create = function create(properties) {
        return new Proto_GSAMS_ParseExpression(properties);
    };

    /**
     * Encodes the specified Proto_GSAMS_ParseExpression message. Does not implicitly {@link Proto_GSAMS_ParseExpression.verify|verify} messages.
     * @function encode
     * @memberof Proto_GSAMS_ParseExpression
     * @static
     * @param {IProto_GSAMS_ParseExpression} message Proto_GSAMS_ParseExpression message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_ParseExpression.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ClassName != null && Object.hasOwnProperty.call(message, "ClassName"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ClassName);
        if (message.Expression != null && Object.hasOwnProperty.call(message, "Expression"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.Expression);
        if (message.ReturnTypeOption != null && Object.hasOwnProperty.call(message, "ReturnTypeOption"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.ReturnTypeOption);
        if (message.IsPartialExpression != null && Object.hasOwnProperty.call(message, "IsPartialExpression"))
            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.IsPartialExpression);
        if (message.SuggestionLimit != null && Object.hasOwnProperty.call(message, "SuggestionLimit"))
            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.SuggestionLimit);
        return writer;
    };

    /**
     * Encodes the specified Proto_GSAMS_ParseExpression message, length delimited. Does not implicitly {@link Proto_GSAMS_ParseExpression.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GSAMS_ParseExpression
     * @static
     * @param {IProto_GSAMS_ParseExpression} message Proto_GSAMS_ParseExpression message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_ParseExpression.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GSAMS_ParseExpression message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GSAMS_ParseExpression
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GSAMS_ParseExpression} Proto_GSAMS_ParseExpression
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_ParseExpression.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GSAMS_ParseExpression();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ClassName = reader.bytes();
                break;
            case 2:
                message.Expression = reader.bytes();
                break;
            case 3:
                message.ReturnTypeOption = reader.int32();
                break;
            case 4:
                message.IsPartialExpression = reader.bool();
                break;
            case 5:
                message.SuggestionLimit = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GSAMS_ParseExpression message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GSAMS_ParseExpression
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GSAMS_ParseExpression} Proto_GSAMS_ParseExpression
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_ParseExpression.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GSAMS_ParseExpression message.
     * @function verify
     * @memberof Proto_GSAMS_ParseExpression
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GSAMS_ParseExpression.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            if (!(message.ClassName && typeof message.ClassName.length === "number" || $util.isString(message.ClassName)))
                return "ClassName: buffer expected";
        if (message.Expression != null && message.hasOwnProperty("Expression"))
            if (!(message.Expression && typeof message.Expression.length === "number" || $util.isString(message.Expression)))
                return "Expression: buffer expected";
        if (message.ReturnTypeOption != null && message.hasOwnProperty("ReturnTypeOption"))
            if (!$util.isInteger(message.ReturnTypeOption))
                return "ReturnTypeOption: integer expected";
        if (message.IsPartialExpression != null && message.hasOwnProperty("IsPartialExpression"))
            if (typeof message.IsPartialExpression !== "boolean")
                return "IsPartialExpression: boolean expected";
        if (message.SuggestionLimit != null && message.hasOwnProperty("SuggestionLimit"))
            if (!$util.isInteger(message.SuggestionLimit))
                return "SuggestionLimit: integer expected";
        return null;
    };

    /**
     * Creates a Proto_GSAMS_ParseExpression message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GSAMS_ParseExpression
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GSAMS_ParseExpression} Proto_GSAMS_ParseExpression
     */
    Proto_GSAMS_ParseExpression.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GSAMS_ParseExpression)
            return object;
        var message = new $root.Proto_GSAMS_ParseExpression();
        if (object.ClassName != null)
            if (typeof object.ClassName === "string")
                $util.base64.decode(object.ClassName, message.ClassName = $util.newBuffer($util.base64.length(object.ClassName)), 0);
            else if (object.ClassName.length)
                message.ClassName = object.ClassName;
        if (object.Expression != null)
            if (typeof object.Expression === "string")
                $util.base64.decode(object.Expression, message.Expression = $util.newBuffer($util.base64.length(object.Expression)), 0);
            else if (object.Expression.length)
                message.Expression = object.Expression;
        if (object.ReturnTypeOption != null)
            message.ReturnTypeOption = object.ReturnTypeOption | 0;
        if (object.IsPartialExpression != null)
            message.IsPartialExpression = Boolean(object.IsPartialExpression);
        if (object.SuggestionLimit != null)
            message.SuggestionLimit = object.SuggestionLimit | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GSAMS_ParseExpression message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GSAMS_ParseExpression
     * @static
     * @param {Proto_GSAMS_ParseExpression} message Proto_GSAMS_ParseExpression
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GSAMS_ParseExpression.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ClassName = "";
            else {
                object.ClassName = [];
                if (options.bytes !== Array)
                    object.ClassName = $util.newBuffer(object.ClassName);
            }
            if (options.bytes === String)
                object.Expression = "";
            else {
                object.Expression = [];
                if (options.bytes !== Array)
                    object.Expression = $util.newBuffer(object.Expression);
            }
            object.ReturnTypeOption = 0;
            object.IsPartialExpression = false;
            object.SuggestionLimit = 0;
        }
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            object.ClassName = options.bytes === String ? $util.base64.encode(message.ClassName, 0, message.ClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ClassName) : message.ClassName;
        if (message.Expression != null && message.hasOwnProperty("Expression"))
            object.Expression = options.bytes === String ? $util.base64.encode(message.Expression, 0, message.Expression.length) : options.bytes === Array ? Array.prototype.slice.call(message.Expression) : message.Expression;
        if (message.ReturnTypeOption != null && message.hasOwnProperty("ReturnTypeOption"))
            object.ReturnTypeOption = message.ReturnTypeOption;
        if (message.IsPartialExpression != null && message.hasOwnProperty("IsPartialExpression"))
            object.IsPartialExpression = message.IsPartialExpression;
        if (message.SuggestionLimit != null && message.hasOwnProperty("SuggestionLimit"))
            object.SuggestionLimit = message.SuggestionLimit;
        return object;
    };

    /**
     * Converts this Proto_GSAMS_ParseExpression to JSON.
     * @function toJSON
     * @memberof Proto_GSAMS_ParseExpression
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GSAMS_ParseExpression.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GSAMS_ParseExpression;
})();

$root.Proto_GSAMS_ParseExpression_Response = (function() {

    /**
     * Properties of a Proto_GSAMS_ParseExpression_Response.
     * @exports IProto_GSAMS_ParseExpression_Response
     * @interface IProto_GSAMS_ParseExpression_Response
     * @property {Uint8Array|null} [ClassName] Proto_GSAMS_ParseExpression_Response ClassName
     * @property {Uint8Array|null} [Expression] Proto_GSAMS_ParseExpression_Response Expression
     * @property {Uint8Array|null} [ObjCN] Proto_GSAMS_ParseExpression_Response ObjCN
     * @property {Uint8Array|null} [LastClassName] Proto_GSAMS_ParseExpression_Response LastClassName
     * @property {Uint8Array|null} [LastParsedFunctionCode] Proto_GSAMS_ParseExpression_Response LastParsedFunctionCode
     * @property {number|null} [ET] Proto_GSAMS_ParseExpression_Response ET
     * @property {boolean|null} [ThereIsErrorAtTheTail] Proto_GSAMS_ParseExpression_Response ThereIsErrorAtTheTail
     * @property {boolean|null} [successful] Proto_GSAMS_ParseExpression_Response successful
     * @property {Uint8Array|null} [ErrorText] Proto_GSAMS_ParseExpression_Response ErrorText
     * @property {number|null} [ErrorStartIndex] Proto_GSAMS_ParseExpression_Response ErrorStartIndex
     * @property {number|null} [ErrorEndIndex] Proto_GSAMS_ParseExpression_Response ErrorEndIndex
     * @property {Uint8Array|null} [ErrorItem] Proto_GSAMS_ParseExpression_Response ErrorItem
     * @property {Array.<IProto_GSAMS_ParseExpression_Response_Token>|null} [Token] Proto_GSAMS_ParseExpression_Response Token
     * @property {Array.<IProto_GSAMS_ParseExpression_Response_Function>|null} [Function] Proto_GSAMS_ParseExpression_Response Function
     */

    /**
     * Constructs a new Proto_GSAMS_ParseExpression_Response.
     * @exports Proto_GSAMS_ParseExpression_Response
     * @classdesc Represents a Proto_GSAMS_ParseExpression_Response.
     * @implements IProto_GSAMS_ParseExpression_Response
     * @constructor
     * @param {IProto_GSAMS_ParseExpression_Response=} [properties] Properties to set
     */
    function Proto_GSAMS_ParseExpression_Response(properties) {
        this.Token = [];
        this.Function = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GSAMS_ParseExpression_Response ClassName.
     * @member {Uint8Array} ClassName
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.ClassName = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response Expression.
     * @member {Uint8Array} Expression
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.Expression = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response ObjCN.
     * @member {Uint8Array} ObjCN
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.ObjCN = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response LastClassName.
     * @member {Uint8Array} LastClassName
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.LastClassName = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response LastParsedFunctionCode.
     * @member {Uint8Array} LastParsedFunctionCode
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.LastParsedFunctionCode = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response ET.
     * @member {number} ET
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.ET = 0;

    /**
     * Proto_GSAMS_ParseExpression_Response ThereIsErrorAtTheTail.
     * @member {boolean} ThereIsErrorAtTheTail
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.ThereIsErrorAtTheTail = false;

    /**
     * Proto_GSAMS_ParseExpression_Response successful.
     * @member {boolean} successful
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.successful = false;

    /**
     * Proto_GSAMS_ParseExpression_Response ErrorText.
     * @member {Uint8Array} ErrorText
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.ErrorText = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response ErrorStartIndex.
     * @member {number} ErrorStartIndex
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.ErrorStartIndex = 0;

    /**
     * Proto_GSAMS_ParseExpression_Response ErrorEndIndex.
     * @member {number} ErrorEndIndex
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.ErrorEndIndex = 0;

    /**
     * Proto_GSAMS_ParseExpression_Response ErrorItem.
     * @member {Uint8Array} ErrorItem
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.ErrorItem = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response Token.
     * @member {Array.<IProto_GSAMS_ParseExpression_Response_Token>} Token
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.Token = $util.emptyArray;

    /**
     * Proto_GSAMS_ParseExpression_Response Function.
     * @member {Array.<IProto_GSAMS_ParseExpression_Response_Function>} Function
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response.prototype.Function = $util.emptyArray;

    /**
     * Creates a new Proto_GSAMS_ParseExpression_Response instance using the specified properties.
     * @function create
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @static
     * @param {IProto_GSAMS_ParseExpression_Response=} [properties] Properties to set
     * @returns {Proto_GSAMS_ParseExpression_Response} Proto_GSAMS_ParseExpression_Response instance
     */
    Proto_GSAMS_ParseExpression_Response.create = function create(properties) {
        return new Proto_GSAMS_ParseExpression_Response(properties);
    };

    /**
     * Encodes the specified Proto_GSAMS_ParseExpression_Response message. Does not implicitly {@link Proto_GSAMS_ParseExpression_Response.verify|verify} messages.
     * @function encode
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @static
     * @param {IProto_GSAMS_ParseExpression_Response} message Proto_GSAMS_ParseExpression_Response message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_ParseExpression_Response.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ClassName != null && Object.hasOwnProperty.call(message, "ClassName"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.ClassName);
        if (message.Expression != null && Object.hasOwnProperty.call(message, "Expression"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.Expression);
        if (message.ObjCN != null && Object.hasOwnProperty.call(message, "ObjCN"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.ObjCN);
        if (message.LastClassName != null && Object.hasOwnProperty.call(message, "LastClassName"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.LastClassName);
        if (message.LastParsedFunctionCode != null && Object.hasOwnProperty.call(message, "LastParsedFunctionCode"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.LastParsedFunctionCode);
        if (message.ET != null && Object.hasOwnProperty.call(message, "ET"))
            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.ET);
        if (message.ThereIsErrorAtTheTail != null && Object.hasOwnProperty.call(message, "ThereIsErrorAtTheTail"))
            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.ThereIsErrorAtTheTail);
        if (message.successful != null && Object.hasOwnProperty.call(message, "successful"))
            writer.uint32(/* id 10, wireType 0 =*/80).bool(message.successful);
        if (message.ErrorText != null && Object.hasOwnProperty.call(message, "ErrorText"))
            writer.uint32(/* id 11, wireType 2 =*/90).bytes(message.ErrorText);
        if (message.ErrorStartIndex != null && Object.hasOwnProperty.call(message, "ErrorStartIndex"))
            writer.uint32(/* id 12, wireType 0 =*/96).int32(message.ErrorStartIndex);
        if (message.ErrorEndIndex != null && Object.hasOwnProperty.call(message, "ErrorEndIndex"))
            writer.uint32(/* id 13, wireType 0 =*/104).int32(message.ErrorEndIndex);
        if (message.ErrorItem != null && Object.hasOwnProperty.call(message, "ErrorItem"))
            writer.uint32(/* id 14, wireType 2 =*/114).bytes(message.ErrorItem);
        if (message.Token != null && message.Token.length)
            for (var i = 0; i < message.Token.length; ++i)
                $root.Proto_GSAMS_ParseExpression_Response_Token.encode(message.Token[i], writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
        if (message.Function != null && message.Function.length)
            for (var i = 0; i < message.Function.length; ++i)
                $root.Proto_GSAMS_ParseExpression_Response_Function.encode(message.Function[i], writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_GSAMS_ParseExpression_Response message, length delimited. Does not implicitly {@link Proto_GSAMS_ParseExpression_Response.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @static
     * @param {IProto_GSAMS_ParseExpression_Response} message Proto_GSAMS_ParseExpression_Response message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_ParseExpression_Response.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GSAMS_ParseExpression_Response message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GSAMS_ParseExpression_Response} Proto_GSAMS_ParseExpression_Response
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_ParseExpression_Response.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GSAMS_ParseExpression_Response();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.ClassName = reader.bytes();
                break;
            case 2:
                message.Expression = reader.bytes();
                break;
            case 3:
                message.ObjCN = reader.bytes();
                break;
            case 4:
                message.LastClassName = reader.bytes();
                break;
            case 5:
                message.LastParsedFunctionCode = reader.bytes();
                break;
            case 6:
                message.ET = reader.int32();
                break;
            case 7:
                message.ThereIsErrorAtTheTail = reader.bool();
                break;
            case 10:
                message.successful = reader.bool();
                break;
            case 11:
                message.ErrorText = reader.bytes();
                break;
            case 12:
                message.ErrorStartIndex = reader.int32();
                break;
            case 13:
                message.ErrorEndIndex = reader.int32();
                break;
            case 14:
                message.ErrorItem = reader.bytes();
                break;
            case 21:
                if (!(message.Token && message.Token.length))
                    message.Token = [];
                message.Token.push($root.Proto_GSAMS_ParseExpression_Response_Token.decode(reader, reader.uint32()));
                break;
            case 22:
                if (!(message.Function && message.Function.length))
                    message.Function = [];
                message.Function.push($root.Proto_GSAMS_ParseExpression_Response_Function.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GSAMS_ParseExpression_Response message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GSAMS_ParseExpression_Response} Proto_GSAMS_ParseExpression_Response
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_ParseExpression_Response.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GSAMS_ParseExpression_Response message.
     * @function verify
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GSAMS_ParseExpression_Response.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            if (!(message.ClassName && typeof message.ClassName.length === "number" || $util.isString(message.ClassName)))
                return "ClassName: buffer expected";
        if (message.Expression != null && message.hasOwnProperty("Expression"))
            if (!(message.Expression && typeof message.Expression.length === "number" || $util.isString(message.Expression)))
                return "Expression: buffer expected";
        if (message.ObjCN != null && message.hasOwnProperty("ObjCN"))
            if (!(message.ObjCN && typeof message.ObjCN.length === "number" || $util.isString(message.ObjCN)))
                return "ObjCN: buffer expected";
        if (message.LastClassName != null && message.hasOwnProperty("LastClassName"))
            if (!(message.LastClassName && typeof message.LastClassName.length === "number" || $util.isString(message.LastClassName)))
                return "LastClassName: buffer expected";
        if (message.LastParsedFunctionCode != null && message.hasOwnProperty("LastParsedFunctionCode"))
            if (!(message.LastParsedFunctionCode && typeof message.LastParsedFunctionCode.length === "number" || $util.isString(message.LastParsedFunctionCode)))
                return "LastParsedFunctionCode: buffer expected";
        if (message.ET != null && message.hasOwnProperty("ET"))
            if (!$util.isInteger(message.ET))
                return "ET: integer expected";
        if (message.ThereIsErrorAtTheTail != null && message.hasOwnProperty("ThereIsErrorAtTheTail"))
            if (typeof message.ThereIsErrorAtTheTail !== "boolean")
                return "ThereIsErrorAtTheTail: boolean expected";
        if (message.successful != null && message.hasOwnProperty("successful"))
            if (typeof message.successful !== "boolean")
                return "successful: boolean expected";
        if (message.ErrorText != null && message.hasOwnProperty("ErrorText"))
            if (!(message.ErrorText && typeof message.ErrorText.length === "number" || $util.isString(message.ErrorText)))
                return "ErrorText: buffer expected";
        if (message.ErrorStartIndex != null && message.hasOwnProperty("ErrorStartIndex"))
            if (!$util.isInteger(message.ErrorStartIndex))
                return "ErrorStartIndex: integer expected";
        if (message.ErrorEndIndex != null && message.hasOwnProperty("ErrorEndIndex"))
            if (!$util.isInteger(message.ErrorEndIndex))
                return "ErrorEndIndex: integer expected";
        if (message.ErrorItem != null && message.hasOwnProperty("ErrorItem"))
            if (!(message.ErrorItem && typeof message.ErrorItem.length === "number" || $util.isString(message.ErrorItem)))
                return "ErrorItem: buffer expected";
        if (message.Token != null && message.hasOwnProperty("Token")) {
            if (!Array.isArray(message.Token))
                return "Token: array expected";
            for (var i = 0; i < message.Token.length; ++i) {
                var error = $root.Proto_GSAMS_ParseExpression_Response_Token.verify(message.Token[i]);
                if (error)
                    return "Token." + error;
            }
        }
        if (message.Function != null && message.hasOwnProperty("Function")) {
            if (!Array.isArray(message.Function))
                return "Function: array expected";
            for (var i = 0; i < message.Function.length; ++i) {
                var error = $root.Proto_GSAMS_ParseExpression_Response_Function.verify(message.Function[i]);
                if (error)
                    return "Function." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_GSAMS_ParseExpression_Response message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GSAMS_ParseExpression_Response} Proto_GSAMS_ParseExpression_Response
     */
    Proto_GSAMS_ParseExpression_Response.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GSAMS_ParseExpression_Response)
            return object;
        var message = new $root.Proto_GSAMS_ParseExpression_Response();
        if (object.ClassName != null)
            if (typeof object.ClassName === "string")
                $util.base64.decode(object.ClassName, message.ClassName = $util.newBuffer($util.base64.length(object.ClassName)), 0);
            else if (object.ClassName.length)
                message.ClassName = object.ClassName;
        if (object.Expression != null)
            if (typeof object.Expression === "string")
                $util.base64.decode(object.Expression, message.Expression = $util.newBuffer($util.base64.length(object.Expression)), 0);
            else if (object.Expression.length)
                message.Expression = object.Expression;
        if (object.ObjCN != null)
            if (typeof object.ObjCN === "string")
                $util.base64.decode(object.ObjCN, message.ObjCN = $util.newBuffer($util.base64.length(object.ObjCN)), 0);
            else if (object.ObjCN.length)
                message.ObjCN = object.ObjCN;
        if (object.LastClassName != null)
            if (typeof object.LastClassName === "string")
                $util.base64.decode(object.LastClassName, message.LastClassName = $util.newBuffer($util.base64.length(object.LastClassName)), 0);
            else if (object.LastClassName.length)
                message.LastClassName = object.LastClassName;
        if (object.LastParsedFunctionCode != null)
            if (typeof object.LastParsedFunctionCode === "string")
                $util.base64.decode(object.LastParsedFunctionCode, message.LastParsedFunctionCode = $util.newBuffer($util.base64.length(object.LastParsedFunctionCode)), 0);
            else if (object.LastParsedFunctionCode.length)
                message.LastParsedFunctionCode = object.LastParsedFunctionCode;
        if (object.ET != null)
            message.ET = object.ET | 0;
        if (object.ThereIsErrorAtTheTail != null)
            message.ThereIsErrorAtTheTail = Boolean(object.ThereIsErrorAtTheTail);
        if (object.successful != null)
            message.successful = Boolean(object.successful);
        if (object.ErrorText != null)
            if (typeof object.ErrorText === "string")
                $util.base64.decode(object.ErrorText, message.ErrorText = $util.newBuffer($util.base64.length(object.ErrorText)), 0);
            else if (object.ErrorText.length)
                message.ErrorText = object.ErrorText;
        if (object.ErrorStartIndex != null)
            message.ErrorStartIndex = object.ErrorStartIndex | 0;
        if (object.ErrorEndIndex != null)
            message.ErrorEndIndex = object.ErrorEndIndex | 0;
        if (object.ErrorItem != null)
            if (typeof object.ErrorItem === "string")
                $util.base64.decode(object.ErrorItem, message.ErrorItem = $util.newBuffer($util.base64.length(object.ErrorItem)), 0);
            else if (object.ErrorItem.length)
                message.ErrorItem = object.ErrorItem;
        if (object.Token) {
            if (!Array.isArray(object.Token))
                throw TypeError(".Proto_GSAMS_ParseExpression_Response.Token: array expected");
            message.Token = [];
            for (var i = 0; i < object.Token.length; ++i) {
                if (typeof object.Token[i] !== "object")
                    throw TypeError(".Proto_GSAMS_ParseExpression_Response.Token: object expected");
                message.Token[i] = $root.Proto_GSAMS_ParseExpression_Response_Token.fromObject(object.Token[i]);
            }
        }
        if (object.Function) {
            if (!Array.isArray(object.Function))
                throw TypeError(".Proto_GSAMS_ParseExpression_Response.Function: array expected");
            message.Function = [];
            for (var i = 0; i < object.Function.length; ++i) {
                if (typeof object.Function[i] !== "object")
                    throw TypeError(".Proto_GSAMS_ParseExpression_Response.Function: object expected");
                message.Function[i] = $root.Proto_GSAMS_ParseExpression_Response_Function.fromObject(object.Function[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_GSAMS_ParseExpression_Response message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @static
     * @param {Proto_GSAMS_ParseExpression_Response} message Proto_GSAMS_ParseExpression_Response
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GSAMS_ParseExpression_Response.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults) {
            object.Token = [];
            object.Function = [];
        }
        if (options.defaults) {
            if (options.bytes === String)
                object.ClassName = "";
            else {
                object.ClassName = [];
                if (options.bytes !== Array)
                    object.ClassName = $util.newBuffer(object.ClassName);
            }
            if (options.bytes === String)
                object.Expression = "";
            else {
                object.Expression = [];
                if (options.bytes !== Array)
                    object.Expression = $util.newBuffer(object.Expression);
            }
            if (options.bytes === String)
                object.ObjCN = "";
            else {
                object.ObjCN = [];
                if (options.bytes !== Array)
                    object.ObjCN = $util.newBuffer(object.ObjCN);
            }
            if (options.bytes === String)
                object.LastClassName = "";
            else {
                object.LastClassName = [];
                if (options.bytes !== Array)
                    object.LastClassName = $util.newBuffer(object.LastClassName);
            }
            if (options.bytes === String)
                object.LastParsedFunctionCode = "";
            else {
                object.LastParsedFunctionCode = [];
                if (options.bytes !== Array)
                    object.LastParsedFunctionCode = $util.newBuffer(object.LastParsedFunctionCode);
            }
            object.ET = 0;
            object.ThereIsErrorAtTheTail = false;
            object.successful = false;
            if (options.bytes === String)
                object.ErrorText = "";
            else {
                object.ErrorText = [];
                if (options.bytes !== Array)
                    object.ErrorText = $util.newBuffer(object.ErrorText);
            }
            object.ErrorStartIndex = 0;
            object.ErrorEndIndex = 0;
            if (options.bytes === String)
                object.ErrorItem = "";
            else {
                object.ErrorItem = [];
                if (options.bytes !== Array)
                    object.ErrorItem = $util.newBuffer(object.ErrorItem);
            }
        }
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            object.ClassName = options.bytes === String ? $util.base64.encode(message.ClassName, 0, message.ClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ClassName) : message.ClassName;
        if (message.Expression != null && message.hasOwnProperty("Expression"))
            object.Expression = options.bytes === String ? $util.base64.encode(message.Expression, 0, message.Expression.length) : options.bytes === Array ? Array.prototype.slice.call(message.Expression) : message.Expression;
        if (message.ObjCN != null && message.hasOwnProperty("ObjCN"))
            object.ObjCN = options.bytes === String ? $util.base64.encode(message.ObjCN, 0, message.ObjCN.length) : options.bytes === Array ? Array.prototype.slice.call(message.ObjCN) : message.ObjCN;
        if (message.LastClassName != null && message.hasOwnProperty("LastClassName"))
            object.LastClassName = options.bytes === String ? $util.base64.encode(message.LastClassName, 0, message.LastClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.LastClassName) : message.LastClassName;
        if (message.LastParsedFunctionCode != null && message.hasOwnProperty("LastParsedFunctionCode"))
            object.LastParsedFunctionCode = options.bytes === String ? $util.base64.encode(message.LastParsedFunctionCode, 0, message.LastParsedFunctionCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.LastParsedFunctionCode) : message.LastParsedFunctionCode;
        if (message.ET != null && message.hasOwnProperty("ET"))
            object.ET = message.ET;
        if (message.ThereIsErrorAtTheTail != null && message.hasOwnProperty("ThereIsErrorAtTheTail"))
            object.ThereIsErrorAtTheTail = message.ThereIsErrorAtTheTail;
        if (message.successful != null && message.hasOwnProperty("successful"))
            object.successful = message.successful;
        if (message.ErrorText != null && message.hasOwnProperty("ErrorText"))
            object.ErrorText = options.bytes === String ? $util.base64.encode(message.ErrorText, 0, message.ErrorText.length) : options.bytes === Array ? Array.prototype.slice.call(message.ErrorText) : message.ErrorText;
        if (message.ErrorStartIndex != null && message.hasOwnProperty("ErrorStartIndex"))
            object.ErrorStartIndex = message.ErrorStartIndex;
        if (message.ErrorEndIndex != null && message.hasOwnProperty("ErrorEndIndex"))
            object.ErrorEndIndex = message.ErrorEndIndex;
        if (message.ErrorItem != null && message.hasOwnProperty("ErrorItem"))
            object.ErrorItem = options.bytes === String ? $util.base64.encode(message.ErrorItem, 0, message.ErrorItem.length) : options.bytes === Array ? Array.prototype.slice.call(message.ErrorItem) : message.ErrorItem;
        if (message.Token && message.Token.length) {
            object.Token = [];
            for (var j = 0; j < message.Token.length; ++j)
                object.Token[j] = $root.Proto_GSAMS_ParseExpression_Response_Token.toObject(message.Token[j], options);
        }
        if (message.Function && message.Function.length) {
            object.Function = [];
            for (var j = 0; j < message.Function.length; ++j)
                object.Function[j] = $root.Proto_GSAMS_ParseExpression_Response_Function.toObject(message.Function[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_GSAMS_ParseExpression_Response to JSON.
     * @function toJSON
     * @memberof Proto_GSAMS_ParseExpression_Response
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GSAMS_ParseExpression_Response.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GSAMS_ParseExpression_Response;
})();

$root.Proto_GSAMS_ParseExpression_Response_Token = (function() {

    /**
     * Properties of a Proto_GSAMS_ParseExpression_Response_Token.
     * @exports IProto_GSAMS_ParseExpression_Response_Token
     * @interface IProto_GSAMS_ParseExpression_Response_Token
     * @property {number|null} [StartIndex] Proto_GSAMS_ParseExpression_Response_Token StartIndex
     * @property {number|null} [EndIndex] Proto_GSAMS_ParseExpression_Response_Token EndIndex
     * @property {number|null} [TokenType] Proto_GSAMS_ParseExpression_Response_Token TokenType
     * @property {Uint8Array|null} [TokenTypeAsString] Proto_GSAMS_ParseExpression_Response_Token TokenTypeAsString
     * @property {Uint8Array|null} [Token] Proto_GSAMS_ParseExpression_Response_Token Token
     * @property {Uint8Array|null} [DetailedType] Proto_GSAMS_ParseExpression_Response_Token DetailedType
     * @property {Uint8Array|null} [FunctionClassName] Proto_GSAMS_ParseExpression_Response_Token FunctionClassName
     */

    /**
     * Constructs a new Proto_GSAMS_ParseExpression_Response_Token.
     * @exports Proto_GSAMS_ParseExpression_Response_Token
     * @classdesc Represents a Proto_GSAMS_ParseExpression_Response_Token.
     * @implements IProto_GSAMS_ParseExpression_Response_Token
     * @constructor
     * @param {IProto_GSAMS_ParseExpression_Response_Token=} [properties] Properties to set
     */
    function Proto_GSAMS_ParseExpression_Response_Token(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GSAMS_ParseExpression_Response_Token StartIndex.
     * @member {number} StartIndex
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Token.prototype.StartIndex = 0;

    /**
     * Proto_GSAMS_ParseExpression_Response_Token EndIndex.
     * @member {number} EndIndex
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Token.prototype.EndIndex = 0;

    /**
     * Proto_GSAMS_ParseExpression_Response_Token TokenType.
     * @member {number} TokenType
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Token.prototype.TokenType = 0;

    /**
     * Proto_GSAMS_ParseExpression_Response_Token TokenTypeAsString.
     * @member {Uint8Array} TokenTypeAsString
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Token.prototype.TokenTypeAsString = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response_Token Token.
     * @member {Uint8Array} Token
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Token.prototype.Token = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response_Token DetailedType.
     * @member {Uint8Array} DetailedType
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Token.prototype.DetailedType = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response_Token FunctionClassName.
     * @member {Uint8Array} FunctionClassName
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Token.prototype.FunctionClassName = $util.newBuffer([]);

    /**
     * Creates a new Proto_GSAMS_ParseExpression_Response_Token instance using the specified properties.
     * @function create
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @static
     * @param {IProto_GSAMS_ParseExpression_Response_Token=} [properties] Properties to set
     * @returns {Proto_GSAMS_ParseExpression_Response_Token} Proto_GSAMS_ParseExpression_Response_Token instance
     */
    Proto_GSAMS_ParseExpression_Response_Token.create = function create(properties) {
        return new Proto_GSAMS_ParseExpression_Response_Token(properties);
    };

    /**
     * Encodes the specified Proto_GSAMS_ParseExpression_Response_Token message. Does not implicitly {@link Proto_GSAMS_ParseExpression_Response_Token.verify|verify} messages.
     * @function encode
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @static
     * @param {IProto_GSAMS_ParseExpression_Response_Token} message Proto_GSAMS_ParseExpression_Response_Token message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_ParseExpression_Response_Token.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.StartIndex != null && Object.hasOwnProperty.call(message, "StartIndex"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.StartIndex);
        if (message.EndIndex != null && Object.hasOwnProperty.call(message, "EndIndex"))
            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.EndIndex);
        if (message.TokenType != null && Object.hasOwnProperty.call(message, "TokenType"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.TokenType);
        if (message.TokenTypeAsString != null && Object.hasOwnProperty.call(message, "TokenTypeAsString"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.TokenTypeAsString);
        if (message.Token != null && Object.hasOwnProperty.call(message, "Token"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.Token);
        if (message.DetailedType != null && Object.hasOwnProperty.call(message, "DetailedType"))
            writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.DetailedType);
        if (message.FunctionClassName != null && Object.hasOwnProperty.call(message, "FunctionClassName"))
            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.FunctionClassName);
        return writer;
    };

    /**
     * Encodes the specified Proto_GSAMS_ParseExpression_Response_Token message, length delimited. Does not implicitly {@link Proto_GSAMS_ParseExpression_Response_Token.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @static
     * @param {IProto_GSAMS_ParseExpression_Response_Token} message Proto_GSAMS_ParseExpression_Response_Token message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_ParseExpression_Response_Token.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GSAMS_ParseExpression_Response_Token message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GSAMS_ParseExpression_Response_Token} Proto_GSAMS_ParseExpression_Response_Token
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_ParseExpression_Response_Token.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GSAMS_ParseExpression_Response_Token();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.StartIndex = reader.int32();
                break;
            case 2:
                message.EndIndex = reader.int32();
                break;
            case 3:
                message.TokenType = reader.int32();
                break;
            case 4:
                message.TokenTypeAsString = reader.bytes();
                break;
            case 5:
                message.Token = reader.bytes();
                break;
            case 6:
                message.DetailedType = reader.bytes();
                break;
            case 7:
                message.FunctionClassName = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GSAMS_ParseExpression_Response_Token message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GSAMS_ParseExpression_Response_Token} Proto_GSAMS_ParseExpression_Response_Token
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_ParseExpression_Response_Token.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GSAMS_ParseExpression_Response_Token message.
     * @function verify
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GSAMS_ParseExpression_Response_Token.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.StartIndex != null && message.hasOwnProperty("StartIndex"))
            if (!$util.isInteger(message.StartIndex))
                return "StartIndex: integer expected";
        if (message.EndIndex != null && message.hasOwnProperty("EndIndex"))
            if (!$util.isInteger(message.EndIndex))
                return "EndIndex: integer expected";
        if (message.TokenType != null && message.hasOwnProperty("TokenType"))
            if (!$util.isInteger(message.TokenType))
                return "TokenType: integer expected";
        if (message.TokenTypeAsString != null && message.hasOwnProperty("TokenTypeAsString"))
            if (!(message.TokenTypeAsString && typeof message.TokenTypeAsString.length === "number" || $util.isString(message.TokenTypeAsString)))
                return "TokenTypeAsString: buffer expected";
        if (message.Token != null && message.hasOwnProperty("Token"))
            if (!(message.Token && typeof message.Token.length === "number" || $util.isString(message.Token)))
                return "Token: buffer expected";
        if (message.DetailedType != null && message.hasOwnProperty("DetailedType"))
            if (!(message.DetailedType && typeof message.DetailedType.length === "number" || $util.isString(message.DetailedType)))
                return "DetailedType: buffer expected";
        if (message.FunctionClassName != null && message.hasOwnProperty("FunctionClassName"))
            if (!(message.FunctionClassName && typeof message.FunctionClassName.length === "number" || $util.isString(message.FunctionClassName)))
                return "FunctionClassName: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_GSAMS_ParseExpression_Response_Token message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GSAMS_ParseExpression_Response_Token} Proto_GSAMS_ParseExpression_Response_Token
     */
    Proto_GSAMS_ParseExpression_Response_Token.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GSAMS_ParseExpression_Response_Token)
            return object;
        var message = new $root.Proto_GSAMS_ParseExpression_Response_Token();
        if (object.StartIndex != null)
            message.StartIndex = object.StartIndex | 0;
        if (object.EndIndex != null)
            message.EndIndex = object.EndIndex | 0;
        if (object.TokenType != null)
            message.TokenType = object.TokenType | 0;
        if (object.TokenTypeAsString != null)
            if (typeof object.TokenTypeAsString === "string")
                $util.base64.decode(object.TokenTypeAsString, message.TokenTypeAsString = $util.newBuffer($util.base64.length(object.TokenTypeAsString)), 0);
            else if (object.TokenTypeAsString.length)
                message.TokenTypeAsString = object.TokenTypeAsString;
        if (object.Token != null)
            if (typeof object.Token === "string")
                $util.base64.decode(object.Token, message.Token = $util.newBuffer($util.base64.length(object.Token)), 0);
            else if (object.Token.length)
                message.Token = object.Token;
        if (object.DetailedType != null)
            if (typeof object.DetailedType === "string")
                $util.base64.decode(object.DetailedType, message.DetailedType = $util.newBuffer($util.base64.length(object.DetailedType)), 0);
            else if (object.DetailedType.length)
                message.DetailedType = object.DetailedType;
        if (object.FunctionClassName != null)
            if (typeof object.FunctionClassName === "string")
                $util.base64.decode(object.FunctionClassName, message.FunctionClassName = $util.newBuffer($util.base64.length(object.FunctionClassName)), 0);
            else if (object.FunctionClassName.length)
                message.FunctionClassName = object.FunctionClassName;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GSAMS_ParseExpression_Response_Token message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @static
     * @param {Proto_GSAMS_ParseExpression_Response_Token} message Proto_GSAMS_ParseExpression_Response_Token
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GSAMS_ParseExpression_Response_Token.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            object.StartIndex = 0;
            object.EndIndex = 0;
            object.TokenType = 0;
            if (options.bytes === String)
                object.TokenTypeAsString = "";
            else {
                object.TokenTypeAsString = [];
                if (options.bytes !== Array)
                    object.TokenTypeAsString = $util.newBuffer(object.TokenTypeAsString);
            }
            if (options.bytes === String)
                object.Token = "";
            else {
                object.Token = [];
                if (options.bytes !== Array)
                    object.Token = $util.newBuffer(object.Token);
            }
            if (options.bytes === String)
                object.DetailedType = "";
            else {
                object.DetailedType = [];
                if (options.bytes !== Array)
                    object.DetailedType = $util.newBuffer(object.DetailedType);
            }
            if (options.bytes === String)
                object.FunctionClassName = "";
            else {
                object.FunctionClassName = [];
                if (options.bytes !== Array)
                    object.FunctionClassName = $util.newBuffer(object.FunctionClassName);
            }
        }
        if (message.StartIndex != null && message.hasOwnProperty("StartIndex"))
            object.StartIndex = message.StartIndex;
        if (message.EndIndex != null && message.hasOwnProperty("EndIndex"))
            object.EndIndex = message.EndIndex;
        if (message.TokenType != null && message.hasOwnProperty("TokenType"))
            object.TokenType = message.TokenType;
        if (message.TokenTypeAsString != null && message.hasOwnProperty("TokenTypeAsString"))
            object.TokenTypeAsString = options.bytes === String ? $util.base64.encode(message.TokenTypeAsString, 0, message.TokenTypeAsString.length) : options.bytes === Array ? Array.prototype.slice.call(message.TokenTypeAsString) : message.TokenTypeAsString;
        if (message.Token != null && message.hasOwnProperty("Token"))
            object.Token = options.bytes === String ? $util.base64.encode(message.Token, 0, message.Token.length) : options.bytes === Array ? Array.prototype.slice.call(message.Token) : message.Token;
        if (message.DetailedType != null && message.hasOwnProperty("DetailedType"))
            object.DetailedType = options.bytes === String ? $util.base64.encode(message.DetailedType, 0, message.DetailedType.length) : options.bytes === Array ? Array.prototype.slice.call(message.DetailedType) : message.DetailedType;
        if (message.FunctionClassName != null && message.hasOwnProperty("FunctionClassName"))
            object.FunctionClassName = options.bytes === String ? $util.base64.encode(message.FunctionClassName, 0, message.FunctionClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.FunctionClassName) : message.FunctionClassName;
        return object;
    };

    /**
     * Converts this Proto_GSAMS_ParseExpression_Response_Token to JSON.
     * @function toJSON
     * @memberof Proto_GSAMS_ParseExpression_Response_Token
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GSAMS_ParseExpression_Response_Token.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GSAMS_ParseExpression_Response_Token;
})();

$root.Proto_GSAMS_ParseExpression_Response_Function = (function() {

    /**
     * Properties of a Proto_GSAMS_ParseExpression_Response_Function.
     * @exports IProto_GSAMS_ParseExpression_Response_Function
     * @interface IProto_GSAMS_ParseExpression_Response_Function
     * @property {Uint8Array|null} [Name] Proto_GSAMS_ParseExpression_Response_Function Name
     * @property {Uint8Array|null} [ExplanatoryCode] Proto_GSAMS_ParseExpression_Response_Function ExplanatoryCode
     * @property {Uint8Array|null} [FunctionType] Proto_GSAMS_ParseExpression_Response_Function FunctionType
     * @property {Uint8Array|null} [FunctionClassName] Proto_GSAMS_ParseExpression_Response_Function FunctionClassName
     * @property {number|null} [ReturnType] Proto_GSAMS_ParseExpression_Response_Function ReturnType
     * @property {Uint8Array|null} [ReturnClassName] Proto_GSAMS_ParseExpression_Response_Function ReturnClassName
     */

    /**
     * Constructs a new Proto_GSAMS_ParseExpression_Response_Function.
     * @exports Proto_GSAMS_ParseExpression_Response_Function
     * @classdesc Represents a Proto_GSAMS_ParseExpression_Response_Function.
     * @implements IProto_GSAMS_ParseExpression_Response_Function
     * @constructor
     * @param {IProto_GSAMS_ParseExpression_Response_Function=} [properties] Properties to set
     */
    function Proto_GSAMS_ParseExpression_Response_Function(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GSAMS_ParseExpression_Response_Function Name.
     * @member {Uint8Array} Name
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Function.prototype.Name = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response_Function ExplanatoryCode.
     * @member {Uint8Array} ExplanatoryCode
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Function.prototype.ExplanatoryCode = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response_Function FunctionType.
     * @member {Uint8Array} FunctionType
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Function.prototype.FunctionType = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response_Function FunctionClassName.
     * @member {Uint8Array} FunctionClassName
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Function.prototype.FunctionClassName = $util.newBuffer([]);

    /**
     * Proto_GSAMS_ParseExpression_Response_Function ReturnType.
     * @member {number} ReturnType
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Function.prototype.ReturnType = 0;

    /**
     * Proto_GSAMS_ParseExpression_Response_Function ReturnClassName.
     * @member {Uint8Array} ReturnClassName
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @instance
     */
    Proto_GSAMS_ParseExpression_Response_Function.prototype.ReturnClassName = $util.newBuffer([]);

    /**
     * Creates a new Proto_GSAMS_ParseExpression_Response_Function instance using the specified properties.
     * @function create
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @static
     * @param {IProto_GSAMS_ParseExpression_Response_Function=} [properties] Properties to set
     * @returns {Proto_GSAMS_ParseExpression_Response_Function} Proto_GSAMS_ParseExpression_Response_Function instance
     */
    Proto_GSAMS_ParseExpression_Response_Function.create = function create(properties) {
        return new Proto_GSAMS_ParseExpression_Response_Function(properties);
    };

    /**
     * Encodes the specified Proto_GSAMS_ParseExpression_Response_Function message. Does not implicitly {@link Proto_GSAMS_ParseExpression_Response_Function.verify|verify} messages.
     * @function encode
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @static
     * @param {IProto_GSAMS_ParseExpression_Response_Function} message Proto_GSAMS_ParseExpression_Response_Function message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_ParseExpression_Response_Function.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Name != null && Object.hasOwnProperty.call(message, "Name"))
            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.Name);
        if (message.ExplanatoryCode != null && Object.hasOwnProperty.call(message, "ExplanatoryCode"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.ExplanatoryCode);
        if (message.FunctionType != null && Object.hasOwnProperty.call(message, "FunctionType"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.FunctionType);
        if (message.FunctionClassName != null && Object.hasOwnProperty.call(message, "FunctionClassName"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.FunctionClassName);
        if (message.ReturnType != null && Object.hasOwnProperty.call(message, "ReturnType"))
            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.ReturnType);
        if (message.ReturnClassName != null && Object.hasOwnProperty.call(message, "ReturnClassName"))
            writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.ReturnClassName);
        return writer;
    };

    /**
     * Encodes the specified Proto_GSAMS_ParseExpression_Response_Function message, length delimited. Does not implicitly {@link Proto_GSAMS_ParseExpression_Response_Function.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @static
     * @param {IProto_GSAMS_ParseExpression_Response_Function} message Proto_GSAMS_ParseExpression_Response_Function message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_ParseExpression_Response_Function.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GSAMS_ParseExpression_Response_Function message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GSAMS_ParseExpression_Response_Function} Proto_GSAMS_ParseExpression_Response_Function
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_ParseExpression_Response_Function.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GSAMS_ParseExpression_Response_Function();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.Name = reader.bytes();
                break;
            case 2:
                message.ExplanatoryCode = reader.bytes();
                break;
            case 3:
                message.FunctionType = reader.bytes();
                break;
            case 4:
                message.FunctionClassName = reader.bytes();
                break;
            case 5:
                message.ReturnType = reader.int32();
                break;
            case 6:
                message.ReturnClassName = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GSAMS_ParseExpression_Response_Function message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GSAMS_ParseExpression_Response_Function} Proto_GSAMS_ParseExpression_Response_Function
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_ParseExpression_Response_Function.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GSAMS_ParseExpression_Response_Function message.
     * @function verify
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GSAMS_ParseExpression_Response_Function.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Name != null && message.hasOwnProperty("Name"))
            if (!(message.Name && typeof message.Name.length === "number" || $util.isString(message.Name)))
                return "Name: buffer expected";
        if (message.ExplanatoryCode != null && message.hasOwnProperty("ExplanatoryCode"))
            if (!(message.ExplanatoryCode && typeof message.ExplanatoryCode.length === "number" || $util.isString(message.ExplanatoryCode)))
                return "ExplanatoryCode: buffer expected";
        if (message.FunctionType != null && message.hasOwnProperty("FunctionType"))
            if (!(message.FunctionType && typeof message.FunctionType.length === "number" || $util.isString(message.FunctionType)))
                return "FunctionType: buffer expected";
        if (message.FunctionClassName != null && message.hasOwnProperty("FunctionClassName"))
            if (!(message.FunctionClassName && typeof message.FunctionClassName.length === "number" || $util.isString(message.FunctionClassName)))
                return "FunctionClassName: buffer expected";
        if (message.ReturnType != null && message.hasOwnProperty("ReturnType"))
            if (!$util.isInteger(message.ReturnType))
                return "ReturnType: integer expected";
        if (message.ReturnClassName != null && message.hasOwnProperty("ReturnClassName"))
            if (!(message.ReturnClassName && typeof message.ReturnClassName.length === "number" || $util.isString(message.ReturnClassName)))
                return "ReturnClassName: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_GSAMS_ParseExpression_Response_Function message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GSAMS_ParseExpression_Response_Function} Proto_GSAMS_ParseExpression_Response_Function
     */
    Proto_GSAMS_ParseExpression_Response_Function.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GSAMS_ParseExpression_Response_Function)
            return object;
        var message = new $root.Proto_GSAMS_ParseExpression_Response_Function();
        if (object.Name != null)
            if (typeof object.Name === "string")
                $util.base64.decode(object.Name, message.Name = $util.newBuffer($util.base64.length(object.Name)), 0);
            else if (object.Name.length)
                message.Name = object.Name;
        if (object.ExplanatoryCode != null)
            if (typeof object.ExplanatoryCode === "string")
                $util.base64.decode(object.ExplanatoryCode, message.ExplanatoryCode = $util.newBuffer($util.base64.length(object.ExplanatoryCode)), 0);
            else if (object.ExplanatoryCode.length)
                message.ExplanatoryCode = object.ExplanatoryCode;
        if (object.FunctionType != null)
            if (typeof object.FunctionType === "string")
                $util.base64.decode(object.FunctionType, message.FunctionType = $util.newBuffer($util.base64.length(object.FunctionType)), 0);
            else if (object.FunctionType.length)
                message.FunctionType = object.FunctionType;
        if (object.FunctionClassName != null)
            if (typeof object.FunctionClassName === "string")
                $util.base64.decode(object.FunctionClassName, message.FunctionClassName = $util.newBuffer($util.base64.length(object.FunctionClassName)), 0);
            else if (object.FunctionClassName.length)
                message.FunctionClassName = object.FunctionClassName;
        if (object.ReturnType != null)
            message.ReturnType = object.ReturnType | 0;
        if (object.ReturnClassName != null)
            if (typeof object.ReturnClassName === "string")
                $util.base64.decode(object.ReturnClassName, message.ReturnClassName = $util.newBuffer($util.base64.length(object.ReturnClassName)), 0);
            else if (object.ReturnClassName.length)
                message.ReturnClassName = object.ReturnClassName;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GSAMS_ParseExpression_Response_Function message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @static
     * @param {Proto_GSAMS_ParseExpression_Response_Function} message Proto_GSAMS_ParseExpression_Response_Function
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GSAMS_ParseExpression_Response_Function.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.Name = "";
            else {
                object.Name = [];
                if (options.bytes !== Array)
                    object.Name = $util.newBuffer(object.Name);
            }
            if (options.bytes === String)
                object.ExplanatoryCode = "";
            else {
                object.ExplanatoryCode = [];
                if (options.bytes !== Array)
                    object.ExplanatoryCode = $util.newBuffer(object.ExplanatoryCode);
            }
            if (options.bytes === String)
                object.FunctionType = "";
            else {
                object.FunctionType = [];
                if (options.bytes !== Array)
                    object.FunctionType = $util.newBuffer(object.FunctionType);
            }
            if (options.bytes === String)
                object.FunctionClassName = "";
            else {
                object.FunctionClassName = [];
                if (options.bytes !== Array)
                    object.FunctionClassName = $util.newBuffer(object.FunctionClassName);
            }
            object.ReturnType = 0;
            if (options.bytes === String)
                object.ReturnClassName = "";
            else {
                object.ReturnClassName = [];
                if (options.bytes !== Array)
                    object.ReturnClassName = $util.newBuffer(object.ReturnClassName);
            }
        }
        if (message.Name != null && message.hasOwnProperty("Name"))
            object.Name = options.bytes === String ? $util.base64.encode(message.Name, 0, message.Name.length) : options.bytes === Array ? Array.prototype.slice.call(message.Name) : message.Name;
        if (message.ExplanatoryCode != null && message.hasOwnProperty("ExplanatoryCode"))
            object.ExplanatoryCode = options.bytes === String ? $util.base64.encode(message.ExplanatoryCode, 0, message.ExplanatoryCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ExplanatoryCode) : message.ExplanatoryCode;
        if (message.FunctionType != null && message.hasOwnProperty("FunctionType"))
            object.FunctionType = options.bytes === String ? $util.base64.encode(message.FunctionType, 0, message.FunctionType.length) : options.bytes === Array ? Array.prototype.slice.call(message.FunctionType) : message.FunctionType;
        if (message.FunctionClassName != null && message.hasOwnProperty("FunctionClassName"))
            object.FunctionClassName = options.bytes === String ? $util.base64.encode(message.FunctionClassName, 0, message.FunctionClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.FunctionClassName) : message.FunctionClassName;
        if (message.ReturnType != null && message.hasOwnProperty("ReturnType"))
            object.ReturnType = message.ReturnType;
        if (message.ReturnClassName != null && message.hasOwnProperty("ReturnClassName"))
            object.ReturnClassName = options.bytes === String ? $util.base64.encode(message.ReturnClassName, 0, message.ReturnClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ReturnClassName) : message.ReturnClassName;
        return object;
    };

    /**
     * Converts this Proto_GSAMS_ParseExpression_Response_Function to JSON.
     * @function toJSON
     * @memberof Proto_GSAMS_ParseExpression_Response_Function
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GSAMS_ParseExpression_Response_Function.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GSAMS_ParseExpression_Response_Function;
})();

$root.Proto_GSAMS_GroupRelation = (function() {

    /**
     * Properties of a Proto_GSAMS_GroupRelation.
     * @exports IProto_GSAMS_GroupRelation
     * @interface IProto_GSAMS_GroupRelation
     * @property {number|null} [Operation] Proto_GSAMS_GroupRelation Operation
     * @property {Uint8Array|null} [GroupClassName] Proto_GSAMS_GroupRelation GroupClassName
     * @property {Uint8Array|null} [GroupType] Proto_GSAMS_GroupRelation GroupType
     * @property {Uint8Array|null} [MemberFilterExpStr] Proto_GSAMS_GroupRelation MemberFilterExpStr
     * @property {Uint8Array|null} [Description] Proto_GSAMS_GroupRelation Description
     * @property {Array.<Uint8Array>|null} [KeyGroupField] Proto_GSAMS_GroupRelation KeyGroupField
     */

    /**
     * Constructs a new Proto_GSAMS_GroupRelation.
     * @exports Proto_GSAMS_GroupRelation
     * @classdesc Represents a Proto_GSAMS_GroupRelation.
     * @implements IProto_GSAMS_GroupRelation
     * @constructor
     * @param {IProto_GSAMS_GroupRelation=} [properties] Properties to set
     */
    function Proto_GSAMS_GroupRelation(properties) {
        this.KeyGroupField = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GSAMS_GroupRelation Operation.
     * @member {number} Operation
     * @memberof Proto_GSAMS_GroupRelation
     * @instance
     */
    Proto_GSAMS_GroupRelation.prototype.Operation = 0;

    /**
     * Proto_GSAMS_GroupRelation GroupClassName.
     * @member {Uint8Array} GroupClassName
     * @memberof Proto_GSAMS_GroupRelation
     * @instance
     */
    Proto_GSAMS_GroupRelation.prototype.GroupClassName = $util.newBuffer([]);

    /**
     * Proto_GSAMS_GroupRelation GroupType.
     * @member {Uint8Array} GroupType
     * @memberof Proto_GSAMS_GroupRelation
     * @instance
     */
    Proto_GSAMS_GroupRelation.prototype.GroupType = $util.newBuffer([]);

    /**
     * Proto_GSAMS_GroupRelation MemberFilterExpStr.
     * @member {Uint8Array} MemberFilterExpStr
     * @memberof Proto_GSAMS_GroupRelation
     * @instance
     */
    Proto_GSAMS_GroupRelation.prototype.MemberFilterExpStr = $util.newBuffer([]);

    /**
     * Proto_GSAMS_GroupRelation Description.
     * @member {Uint8Array} Description
     * @memberof Proto_GSAMS_GroupRelation
     * @instance
     */
    Proto_GSAMS_GroupRelation.prototype.Description = $util.newBuffer([]);

    /**
     * Proto_GSAMS_GroupRelation KeyGroupField.
     * @member {Array.<Uint8Array>} KeyGroupField
     * @memberof Proto_GSAMS_GroupRelation
     * @instance
     */
    Proto_GSAMS_GroupRelation.prototype.KeyGroupField = $util.emptyArray;

    /**
     * Creates a new Proto_GSAMS_GroupRelation instance using the specified properties.
     * @function create
     * @memberof Proto_GSAMS_GroupRelation
     * @static
     * @param {IProto_GSAMS_GroupRelation=} [properties] Properties to set
     * @returns {Proto_GSAMS_GroupRelation} Proto_GSAMS_GroupRelation instance
     */
    Proto_GSAMS_GroupRelation.create = function create(properties) {
        return new Proto_GSAMS_GroupRelation(properties);
    };

    /**
     * Encodes the specified Proto_GSAMS_GroupRelation message. Does not implicitly {@link Proto_GSAMS_GroupRelation.verify|verify} messages.
     * @function encode
     * @memberof Proto_GSAMS_GroupRelation
     * @static
     * @param {IProto_GSAMS_GroupRelation} message Proto_GSAMS_GroupRelation message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_GroupRelation.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Operation != null && Object.hasOwnProperty.call(message, "Operation"))
            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.Operation);
        if (message.GroupClassName != null && Object.hasOwnProperty.call(message, "GroupClassName"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.GroupClassName);
        if (message.GroupType != null && Object.hasOwnProperty.call(message, "GroupType"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.GroupType);
        if (message.MemberFilterExpStr != null && Object.hasOwnProperty.call(message, "MemberFilterExpStr"))
            writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.MemberFilterExpStr);
        if (message.Description != null && Object.hasOwnProperty.call(message, "Description"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.Description);
        if (message.KeyGroupField != null && message.KeyGroupField.length)
            for (var i = 0; i < message.KeyGroupField.length; ++i)
                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.KeyGroupField[i]);
        return writer;
    };

    /**
     * Encodes the specified Proto_GSAMS_GroupRelation message, length delimited. Does not implicitly {@link Proto_GSAMS_GroupRelation.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GSAMS_GroupRelation
     * @static
     * @param {IProto_GSAMS_GroupRelation} message Proto_GSAMS_GroupRelation message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_GroupRelation.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GSAMS_GroupRelation message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GSAMS_GroupRelation
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GSAMS_GroupRelation} Proto_GSAMS_GroupRelation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_GroupRelation.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GSAMS_GroupRelation();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                message.Operation = reader.int32();
                break;
            case 2:
                message.GroupClassName = reader.bytes();
                break;
            case 3:
                message.GroupType = reader.bytes();
                break;
            case 4:
                message.MemberFilterExpStr = reader.bytes();
                break;
            case 5:
                message.Description = reader.bytes();
                break;
            case 6:
                if (!(message.KeyGroupField && message.KeyGroupField.length))
                    message.KeyGroupField = [];
                message.KeyGroupField.push(reader.bytes());
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GSAMS_GroupRelation message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GSAMS_GroupRelation
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GSAMS_GroupRelation} Proto_GSAMS_GroupRelation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_GroupRelation.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GSAMS_GroupRelation message.
     * @function verify
     * @memberof Proto_GSAMS_GroupRelation
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GSAMS_GroupRelation.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            if (!$util.isInteger(message.Operation))
                return "Operation: integer expected";
        if (message.GroupClassName != null && message.hasOwnProperty("GroupClassName"))
            if (!(message.GroupClassName && typeof message.GroupClassName.length === "number" || $util.isString(message.GroupClassName)))
                return "GroupClassName: buffer expected";
        if (message.GroupType != null && message.hasOwnProperty("GroupType"))
            if (!(message.GroupType && typeof message.GroupType.length === "number" || $util.isString(message.GroupType)))
                return "GroupType: buffer expected";
        if (message.MemberFilterExpStr != null && message.hasOwnProperty("MemberFilterExpStr"))
            if (!(message.MemberFilterExpStr && typeof message.MemberFilterExpStr.length === "number" || $util.isString(message.MemberFilterExpStr)))
                return "MemberFilterExpStr: buffer expected";
        if (message.Description != null && message.hasOwnProperty("Description"))
            if (!(message.Description && typeof message.Description.length === "number" || $util.isString(message.Description)))
                return "Description: buffer expected";
        if (message.KeyGroupField != null && message.hasOwnProperty("KeyGroupField")) {
            if (!Array.isArray(message.KeyGroupField))
                return "KeyGroupField: array expected";
            for (var i = 0; i < message.KeyGroupField.length; ++i)
                if (!(message.KeyGroupField[i] && typeof message.KeyGroupField[i].length === "number" || $util.isString(message.KeyGroupField[i])))
                    return "KeyGroupField: buffer[] expected";
        }
        return null;
    };

    /**
     * Creates a Proto_GSAMS_GroupRelation message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GSAMS_GroupRelation
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GSAMS_GroupRelation} Proto_GSAMS_GroupRelation
     */
    Proto_GSAMS_GroupRelation.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GSAMS_GroupRelation)
            return object;
        var message = new $root.Proto_GSAMS_GroupRelation();
        if (object.Operation != null)
            message.Operation = object.Operation | 0;
        if (object.GroupClassName != null)
            if (typeof object.GroupClassName === "string")
                $util.base64.decode(object.GroupClassName, message.GroupClassName = $util.newBuffer($util.base64.length(object.GroupClassName)), 0);
            else if (object.GroupClassName.length)
                message.GroupClassName = object.GroupClassName;
        if (object.GroupType != null)
            if (typeof object.GroupType === "string")
                $util.base64.decode(object.GroupType, message.GroupType = $util.newBuffer($util.base64.length(object.GroupType)), 0);
            else if (object.GroupType.length)
                message.GroupType = object.GroupType;
        if (object.MemberFilterExpStr != null)
            if (typeof object.MemberFilterExpStr === "string")
                $util.base64.decode(object.MemberFilterExpStr, message.MemberFilterExpStr = $util.newBuffer($util.base64.length(object.MemberFilterExpStr)), 0);
            else if (object.MemberFilterExpStr.length)
                message.MemberFilterExpStr = object.MemberFilterExpStr;
        if (object.Description != null)
            if (typeof object.Description === "string")
                $util.base64.decode(object.Description, message.Description = $util.newBuffer($util.base64.length(object.Description)), 0);
            else if (object.Description.length)
                message.Description = object.Description;
        if (object.KeyGroupField) {
            if (!Array.isArray(object.KeyGroupField))
                throw TypeError(".Proto_GSAMS_GroupRelation.KeyGroupField: array expected");
            message.KeyGroupField = [];
            for (var i = 0; i < object.KeyGroupField.length; ++i)
                if (typeof object.KeyGroupField[i] === "string")
                    $util.base64.decode(object.KeyGroupField[i], message.KeyGroupField[i] = $util.newBuffer($util.base64.length(object.KeyGroupField[i])), 0);
                else if (object.KeyGroupField[i].length)
                    message.KeyGroupField[i] = object.KeyGroupField[i];
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_GSAMS_GroupRelation message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GSAMS_GroupRelation
     * @static
     * @param {Proto_GSAMS_GroupRelation} message Proto_GSAMS_GroupRelation
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GSAMS_GroupRelation.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.KeyGroupField = [];
        if (options.defaults) {
            object.Operation = 0;
            if (options.bytes === String)
                object.GroupClassName = "";
            else {
                object.GroupClassName = [];
                if (options.bytes !== Array)
                    object.GroupClassName = $util.newBuffer(object.GroupClassName);
            }
            if (options.bytes === String)
                object.GroupType = "";
            else {
                object.GroupType = [];
                if (options.bytes !== Array)
                    object.GroupType = $util.newBuffer(object.GroupType);
            }
            if (options.bytes === String)
                object.MemberFilterExpStr = "";
            else {
                object.MemberFilterExpStr = [];
                if (options.bytes !== Array)
                    object.MemberFilterExpStr = $util.newBuffer(object.MemberFilterExpStr);
            }
            if (options.bytes === String)
                object.Description = "";
            else {
                object.Description = [];
                if (options.bytes !== Array)
                    object.Description = $util.newBuffer(object.Description);
            }
        }
        if (message.Operation != null && message.hasOwnProperty("Operation"))
            object.Operation = message.Operation;
        if (message.GroupClassName != null && message.hasOwnProperty("GroupClassName"))
            object.GroupClassName = options.bytes === String ? $util.base64.encode(message.GroupClassName, 0, message.GroupClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.GroupClassName) : message.GroupClassName;
        if (message.GroupType != null && message.hasOwnProperty("GroupType"))
            object.GroupType = options.bytes === String ? $util.base64.encode(message.GroupType, 0, message.GroupType.length) : options.bytes === Array ? Array.prototype.slice.call(message.GroupType) : message.GroupType;
        if (message.MemberFilterExpStr != null && message.hasOwnProperty("MemberFilterExpStr"))
            object.MemberFilterExpStr = options.bytes === String ? $util.base64.encode(message.MemberFilterExpStr, 0, message.MemberFilterExpStr.length) : options.bytes === Array ? Array.prototype.slice.call(message.MemberFilterExpStr) : message.MemberFilterExpStr;
        if (message.Description != null && message.hasOwnProperty("Description"))
            object.Description = options.bytes === String ? $util.base64.encode(message.Description, 0, message.Description.length) : options.bytes === Array ? Array.prototype.slice.call(message.Description) : message.Description;
        if (message.KeyGroupField && message.KeyGroupField.length) {
            object.KeyGroupField = [];
            for (var j = 0; j < message.KeyGroupField.length; ++j)
                object.KeyGroupField[j] = options.bytes === String ? $util.base64.encode(message.KeyGroupField[j], 0, message.KeyGroupField[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.KeyGroupField[j]) : message.KeyGroupField[j];
        }
        return object;
    };

    /**
     * Converts this Proto_GSAMS_GroupRelation to JSON.
     * @function toJSON
     * @memberof Proto_GSAMS_GroupRelation
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GSAMS_GroupRelation.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GSAMS_GroupRelation;
})();

$root.Proto_GSAMS_CalculatedField_List = (function() {

    /**
     * Properties of a Proto_GSAMS_CalculatedField_List.
     * @exports IProto_GSAMS_CalculatedField_List
     * @interface IProto_GSAMS_CalculatedField_List
     * @property {Array.<IProto_GSAMS_CalculatedField>|null} [CalculatedField] Proto_GSAMS_CalculatedField_List CalculatedField
     */

    /**
     * Constructs a new Proto_GSAMS_CalculatedField_List.
     * @exports Proto_GSAMS_CalculatedField_List
     * @classdesc Represents a Proto_GSAMS_CalculatedField_List.
     * @implements IProto_GSAMS_CalculatedField_List
     * @constructor
     * @param {IProto_GSAMS_CalculatedField_List=} [properties] Properties to set
     */
    function Proto_GSAMS_CalculatedField_List(properties) {
        this.CalculatedField = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GSAMS_CalculatedField_List CalculatedField.
     * @member {Array.<IProto_GSAMS_CalculatedField>} CalculatedField
     * @memberof Proto_GSAMS_CalculatedField_List
     * @instance
     */
    Proto_GSAMS_CalculatedField_List.prototype.CalculatedField = $util.emptyArray;

    /**
     * Creates a new Proto_GSAMS_CalculatedField_List instance using the specified properties.
     * @function create
     * @memberof Proto_GSAMS_CalculatedField_List
     * @static
     * @param {IProto_GSAMS_CalculatedField_List=} [properties] Properties to set
     * @returns {Proto_GSAMS_CalculatedField_List} Proto_GSAMS_CalculatedField_List instance
     */
    Proto_GSAMS_CalculatedField_List.create = function create(properties) {
        return new Proto_GSAMS_CalculatedField_List(properties);
    };

    /**
     * Encodes the specified Proto_GSAMS_CalculatedField_List message. Does not implicitly {@link Proto_GSAMS_CalculatedField_List.verify|verify} messages.
     * @function encode
     * @memberof Proto_GSAMS_CalculatedField_List
     * @static
     * @param {IProto_GSAMS_CalculatedField_List} message Proto_GSAMS_CalculatedField_List message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_CalculatedField_List.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.CalculatedField != null && message.CalculatedField.length)
            for (var i = 0; i < message.CalculatedField.length; ++i)
                $root.Proto_GSAMS_CalculatedField.encode(message.CalculatedField[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_GSAMS_CalculatedField_List message, length delimited. Does not implicitly {@link Proto_GSAMS_CalculatedField_List.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GSAMS_CalculatedField_List
     * @static
     * @param {IProto_GSAMS_CalculatedField_List} message Proto_GSAMS_CalculatedField_List message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_CalculatedField_List.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GSAMS_CalculatedField_List message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GSAMS_CalculatedField_List
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GSAMS_CalculatedField_List} Proto_GSAMS_CalculatedField_List
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_CalculatedField_List.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GSAMS_CalculatedField_List();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.CalculatedField && message.CalculatedField.length))
                    message.CalculatedField = [];
                message.CalculatedField.push($root.Proto_GSAMS_CalculatedField.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GSAMS_CalculatedField_List message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GSAMS_CalculatedField_List
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GSAMS_CalculatedField_List} Proto_GSAMS_CalculatedField_List
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_CalculatedField_List.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GSAMS_CalculatedField_List message.
     * @function verify
     * @memberof Proto_GSAMS_CalculatedField_List
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GSAMS_CalculatedField_List.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.CalculatedField != null && message.hasOwnProperty("CalculatedField")) {
            if (!Array.isArray(message.CalculatedField))
                return "CalculatedField: array expected";
            for (var i = 0; i < message.CalculatedField.length; ++i) {
                var error = $root.Proto_GSAMS_CalculatedField.verify(message.CalculatedField[i]);
                if (error)
                    return "CalculatedField." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_GSAMS_CalculatedField_List message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GSAMS_CalculatedField_List
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GSAMS_CalculatedField_List} Proto_GSAMS_CalculatedField_List
     */
    Proto_GSAMS_CalculatedField_List.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GSAMS_CalculatedField_List)
            return object;
        var message = new $root.Proto_GSAMS_CalculatedField_List();
        if (object.CalculatedField) {
            if (!Array.isArray(object.CalculatedField))
                throw TypeError(".Proto_GSAMS_CalculatedField_List.CalculatedField: array expected");
            message.CalculatedField = [];
            for (var i = 0; i < object.CalculatedField.length; ++i) {
                if (typeof object.CalculatedField[i] !== "object")
                    throw TypeError(".Proto_GSAMS_CalculatedField_List.CalculatedField: object expected");
                message.CalculatedField[i] = $root.Proto_GSAMS_CalculatedField.fromObject(object.CalculatedField[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_GSAMS_CalculatedField_List message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GSAMS_CalculatedField_List
     * @static
     * @param {Proto_GSAMS_CalculatedField_List} message Proto_GSAMS_CalculatedField_List
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GSAMS_CalculatedField_List.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.CalculatedField = [];
        if (message.CalculatedField && message.CalculatedField.length) {
            object.CalculatedField = [];
            for (var j = 0; j < message.CalculatedField.length; ++j)
                object.CalculatedField[j] = $root.Proto_GSAMS_CalculatedField.toObject(message.CalculatedField[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_GSAMS_CalculatedField_List to JSON.
     * @function toJSON
     * @memberof Proto_GSAMS_CalculatedField_List
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GSAMS_CalculatedField_List.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GSAMS_CalculatedField_List;
})();

$root.Proto_GSAMS_CalculatedField = (function() {

    /**
     * Properties of a Proto_GSAMS_CalculatedField.
     * @exports IProto_GSAMS_CalculatedField
     * @interface IProto_GSAMS_CalculatedField
     * @property {Uint8Array|null} [ClassName] Proto_GSAMS_CalculatedField ClassName
     * @property {Uint8Array|null} [Code] Proto_GSAMS_CalculatedField Code
     * @property {number|null} [ReturnType] Proto_GSAMS_CalculatedField ReturnType
     * @property {number|null} [SubReturnType] Proto_GSAMS_CalculatedField SubReturnType
     * @property {Uint8Array|null} [Expression] Proto_GSAMS_CalculatedField Expression
     * @property {Uint8Array|null} [DisplayFormat] Proto_GSAMS_CalculatedField DisplayFormat
     * @property {Uint8Array|null} [WEBDisplayFormat] Proto_GSAMS_CalculatedField WEBDisplayFormat
     * @property {Uint8Array|null} [Tooltip] Proto_GSAMS_CalculatedField Tooltip
     */

    /**
     * Constructs a new Proto_GSAMS_CalculatedField.
     * @exports Proto_GSAMS_CalculatedField
     * @classdesc Represents a Proto_GSAMS_CalculatedField.
     * @implements IProto_GSAMS_CalculatedField
     * @constructor
     * @param {IProto_GSAMS_CalculatedField=} [properties] Properties to set
     */
    function Proto_GSAMS_CalculatedField(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_GSAMS_CalculatedField ClassName.
     * @member {Uint8Array} ClassName
     * @memberof Proto_GSAMS_CalculatedField
     * @instance
     */
    Proto_GSAMS_CalculatedField.prototype.ClassName = $util.newBuffer([]);

    /**
     * Proto_GSAMS_CalculatedField Code.
     * @member {Uint8Array} Code
     * @memberof Proto_GSAMS_CalculatedField
     * @instance
     */
    Proto_GSAMS_CalculatedField.prototype.Code = $util.newBuffer([]);

    /**
     * Proto_GSAMS_CalculatedField ReturnType.
     * @member {number} ReturnType
     * @memberof Proto_GSAMS_CalculatedField
     * @instance
     */
    Proto_GSAMS_CalculatedField.prototype.ReturnType = 0;

    /**
     * Proto_GSAMS_CalculatedField SubReturnType.
     * @member {number} SubReturnType
     * @memberof Proto_GSAMS_CalculatedField
     * @instance
     */
    Proto_GSAMS_CalculatedField.prototype.SubReturnType = 0;

    /**
     * Proto_GSAMS_CalculatedField Expression.
     * @member {Uint8Array} Expression
     * @memberof Proto_GSAMS_CalculatedField
     * @instance
     */
    Proto_GSAMS_CalculatedField.prototype.Expression = $util.newBuffer([]);

    /**
     * Proto_GSAMS_CalculatedField DisplayFormat.
     * @member {Uint8Array} DisplayFormat
     * @memberof Proto_GSAMS_CalculatedField
     * @instance
     */
    Proto_GSAMS_CalculatedField.prototype.DisplayFormat = $util.newBuffer([]);

    /**
     * Proto_GSAMS_CalculatedField WEBDisplayFormat.
     * @member {Uint8Array} WEBDisplayFormat
     * @memberof Proto_GSAMS_CalculatedField
     * @instance
     */
    Proto_GSAMS_CalculatedField.prototype.WEBDisplayFormat = $util.newBuffer([]);

    /**
     * Proto_GSAMS_CalculatedField Tooltip.
     * @member {Uint8Array} Tooltip
     * @memberof Proto_GSAMS_CalculatedField
     * @instance
     */
    Proto_GSAMS_CalculatedField.prototype.Tooltip = $util.newBuffer([]);

    /**
     * Creates a new Proto_GSAMS_CalculatedField instance using the specified properties.
     * @function create
     * @memberof Proto_GSAMS_CalculatedField
     * @static
     * @param {IProto_GSAMS_CalculatedField=} [properties] Properties to set
     * @returns {Proto_GSAMS_CalculatedField} Proto_GSAMS_CalculatedField instance
     */
    Proto_GSAMS_CalculatedField.create = function create(properties) {
        return new Proto_GSAMS_CalculatedField(properties);
    };

    /**
     * Encodes the specified Proto_GSAMS_CalculatedField message. Does not implicitly {@link Proto_GSAMS_CalculatedField.verify|verify} messages.
     * @function encode
     * @memberof Proto_GSAMS_CalculatedField
     * @static
     * @param {IProto_GSAMS_CalculatedField} message Proto_GSAMS_CalculatedField message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_CalculatedField.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ClassName != null && Object.hasOwnProperty.call(message, "ClassName"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.ClassName);
        if (message.Code != null && Object.hasOwnProperty.call(message, "Code"))
            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.Code);
        if (message.ReturnType != null && Object.hasOwnProperty.call(message, "ReturnType"))
            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.ReturnType);
        if (message.Expression != null && Object.hasOwnProperty.call(message, "Expression"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.Expression);
        if (message.DisplayFormat != null && Object.hasOwnProperty.call(message, "DisplayFormat"))
            writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.DisplayFormat);
        if (message.WEBDisplayFormat != null && Object.hasOwnProperty.call(message, "WEBDisplayFormat"))
            writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.WEBDisplayFormat);
        if (message.SubReturnType != null && Object.hasOwnProperty.call(message, "SubReturnType"))
            writer.uint32(/* id 8, wireType 0 =*/64).int32(message.SubReturnType);
        if (message.Tooltip != null && Object.hasOwnProperty.call(message, "Tooltip"))
            writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.Tooltip);
        return writer;
    };

    /**
     * Encodes the specified Proto_GSAMS_CalculatedField message, length delimited. Does not implicitly {@link Proto_GSAMS_CalculatedField.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_GSAMS_CalculatedField
     * @static
     * @param {IProto_GSAMS_CalculatedField} message Proto_GSAMS_CalculatedField message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_GSAMS_CalculatedField.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_GSAMS_CalculatedField message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_GSAMS_CalculatedField
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_GSAMS_CalculatedField} Proto_GSAMS_CalculatedField
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_CalculatedField.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_GSAMS_CalculatedField();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 2:
                message.ClassName = reader.bytes();
                break;
            case 3:
                message.Code = reader.bytes();
                break;
            case 4:
                message.ReturnType = reader.int32();
                break;
            case 8:
                message.SubReturnType = reader.int32();
                break;
            case 5:
                message.Expression = reader.bytes();
                break;
            case 6:
                message.DisplayFormat = reader.bytes();
                break;
            case 7:
                message.WEBDisplayFormat = reader.bytes();
                break;
            case 9:
                message.Tooltip = reader.bytes();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_GSAMS_CalculatedField message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_GSAMS_CalculatedField
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_GSAMS_CalculatedField} Proto_GSAMS_CalculatedField
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_GSAMS_CalculatedField.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_GSAMS_CalculatedField message.
     * @function verify
     * @memberof Proto_GSAMS_CalculatedField
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_GSAMS_CalculatedField.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            if (!(message.ClassName && typeof message.ClassName.length === "number" || $util.isString(message.ClassName)))
                return "ClassName: buffer expected";
        if (message.Code != null && message.hasOwnProperty("Code"))
            if (!(message.Code && typeof message.Code.length === "number" || $util.isString(message.Code)))
                return "Code: buffer expected";
        if (message.ReturnType != null && message.hasOwnProperty("ReturnType"))
            if (!$util.isInteger(message.ReturnType))
                return "ReturnType: integer expected";
        if (message.SubReturnType != null && message.hasOwnProperty("SubReturnType"))
            if (!$util.isInteger(message.SubReturnType))
                return "SubReturnType: integer expected";
        if (message.Expression != null && message.hasOwnProperty("Expression"))
            if (!(message.Expression && typeof message.Expression.length === "number" || $util.isString(message.Expression)))
                return "Expression: buffer expected";
        if (message.DisplayFormat != null && message.hasOwnProperty("DisplayFormat"))
            if (!(message.DisplayFormat && typeof message.DisplayFormat.length === "number" || $util.isString(message.DisplayFormat)))
                return "DisplayFormat: buffer expected";
        if (message.WEBDisplayFormat != null && message.hasOwnProperty("WEBDisplayFormat"))
            if (!(message.WEBDisplayFormat && typeof message.WEBDisplayFormat.length === "number" || $util.isString(message.WEBDisplayFormat)))
                return "WEBDisplayFormat: buffer expected";
        if (message.Tooltip != null && message.hasOwnProperty("Tooltip"))
            if (!(message.Tooltip && typeof message.Tooltip.length === "number" || $util.isString(message.Tooltip)))
                return "Tooltip: buffer expected";
        return null;
    };

    /**
     * Creates a Proto_GSAMS_CalculatedField message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_GSAMS_CalculatedField
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_GSAMS_CalculatedField} Proto_GSAMS_CalculatedField
     */
    Proto_GSAMS_CalculatedField.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_GSAMS_CalculatedField)
            return object;
        var message = new $root.Proto_GSAMS_CalculatedField();
        if (object.ClassName != null)
            if (typeof object.ClassName === "string")
                $util.base64.decode(object.ClassName, message.ClassName = $util.newBuffer($util.base64.length(object.ClassName)), 0);
            else if (object.ClassName.length)
                message.ClassName = object.ClassName;
        if (object.Code != null)
            if (typeof object.Code === "string")
                $util.base64.decode(object.Code, message.Code = $util.newBuffer($util.base64.length(object.Code)), 0);
            else if (object.Code.length)
                message.Code = object.Code;
        if (object.ReturnType != null)
            message.ReturnType = object.ReturnType | 0;
        if (object.SubReturnType != null)
            message.SubReturnType = object.SubReturnType | 0;
        if (object.Expression != null)
            if (typeof object.Expression === "string")
                $util.base64.decode(object.Expression, message.Expression = $util.newBuffer($util.base64.length(object.Expression)), 0);
            else if (object.Expression.length)
                message.Expression = object.Expression;
        if (object.DisplayFormat != null)
            if (typeof object.DisplayFormat === "string")
                $util.base64.decode(object.DisplayFormat, message.DisplayFormat = $util.newBuffer($util.base64.length(object.DisplayFormat)), 0);
            else if (object.DisplayFormat.length)
                message.DisplayFormat = object.DisplayFormat;
        if (object.WEBDisplayFormat != null)
            if (typeof object.WEBDisplayFormat === "string")
                $util.base64.decode(object.WEBDisplayFormat, message.WEBDisplayFormat = $util.newBuffer($util.base64.length(object.WEBDisplayFormat)), 0);
            else if (object.WEBDisplayFormat.length)
                message.WEBDisplayFormat = object.WEBDisplayFormat;
        if (object.Tooltip != null)
            if (typeof object.Tooltip === "string")
                $util.base64.decode(object.Tooltip, message.Tooltip = $util.newBuffer($util.base64.length(object.Tooltip)), 0);
            else if (object.Tooltip.length)
                message.Tooltip = object.Tooltip;
        return message;
    };

    /**
     * Creates a plain object from a Proto_GSAMS_CalculatedField message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_GSAMS_CalculatedField
     * @static
     * @param {Proto_GSAMS_CalculatedField} message Proto_GSAMS_CalculatedField
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_GSAMS_CalculatedField.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ClassName = "";
            else {
                object.ClassName = [];
                if (options.bytes !== Array)
                    object.ClassName = $util.newBuffer(object.ClassName);
            }
            if (options.bytes === String)
                object.Code = "";
            else {
                object.Code = [];
                if (options.bytes !== Array)
                    object.Code = $util.newBuffer(object.Code);
            }
            object.ReturnType = 0;
            if (options.bytes === String)
                object.Expression = "";
            else {
                object.Expression = [];
                if (options.bytes !== Array)
                    object.Expression = $util.newBuffer(object.Expression);
            }
            if (options.bytes === String)
                object.DisplayFormat = "";
            else {
                object.DisplayFormat = [];
                if (options.bytes !== Array)
                    object.DisplayFormat = $util.newBuffer(object.DisplayFormat);
            }
            if (options.bytes === String)
                object.WEBDisplayFormat = "";
            else {
                object.WEBDisplayFormat = [];
                if (options.bytes !== Array)
                    object.WEBDisplayFormat = $util.newBuffer(object.WEBDisplayFormat);
            }
            object.SubReturnType = 0;
            if (options.bytes === String)
                object.Tooltip = "";
            else {
                object.Tooltip = [];
                if (options.bytes !== Array)
                    object.Tooltip = $util.newBuffer(object.Tooltip);
            }
        }
        if (message.ClassName != null && message.hasOwnProperty("ClassName"))
            object.ClassName = options.bytes === String ? $util.base64.encode(message.ClassName, 0, message.ClassName.length) : options.bytes === Array ? Array.prototype.slice.call(message.ClassName) : message.ClassName;
        if (message.Code != null && message.hasOwnProperty("Code"))
            object.Code = options.bytes === String ? $util.base64.encode(message.Code, 0, message.Code.length) : options.bytes === Array ? Array.prototype.slice.call(message.Code) : message.Code;
        if (message.ReturnType != null && message.hasOwnProperty("ReturnType"))
            object.ReturnType = message.ReturnType;
        if (message.Expression != null && message.hasOwnProperty("Expression"))
            object.Expression = options.bytes === String ? $util.base64.encode(message.Expression, 0, message.Expression.length) : options.bytes === Array ? Array.prototype.slice.call(message.Expression) : message.Expression;
        if (message.DisplayFormat != null && message.hasOwnProperty("DisplayFormat"))
            object.DisplayFormat = options.bytes === String ? $util.base64.encode(message.DisplayFormat, 0, message.DisplayFormat.length) : options.bytes === Array ? Array.prototype.slice.call(message.DisplayFormat) : message.DisplayFormat;
        if (message.WEBDisplayFormat != null && message.hasOwnProperty("WEBDisplayFormat"))
            object.WEBDisplayFormat = options.bytes === String ? $util.base64.encode(message.WEBDisplayFormat, 0, message.WEBDisplayFormat.length) : options.bytes === Array ? Array.prototype.slice.call(message.WEBDisplayFormat) : message.WEBDisplayFormat;
        if (message.SubReturnType != null && message.hasOwnProperty("SubReturnType"))
            object.SubReturnType = message.SubReturnType;
        if (message.Tooltip != null && message.hasOwnProperty("Tooltip"))
            object.Tooltip = options.bytes === String ? $util.base64.encode(message.Tooltip, 0, message.Tooltip.length) : options.bytes === Array ? Array.prototype.slice.call(message.Tooltip) : message.Tooltip;
        return object;
    };

    /**
     * Converts this Proto_GSAMS_CalculatedField to JSON.
     * @function toJSON
     * @memberof Proto_GSAMS_CalculatedField
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_GSAMS_CalculatedField.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_GSAMS_CalculatedField;
})();

$root.Proto_SharedParticipants = (function() {

    /**
     * Properties of a Proto_SharedParticipants.
     * @exports IProto_SharedParticipants
     * @interface IProto_SharedParticipants
     * @property {Array.<IProto_Participant>|null} [Participant] Proto_SharedParticipants Participant
     */

    /**
     * Constructs a new Proto_SharedParticipants.
     * @exports Proto_SharedParticipants
     * @classdesc Represents a Proto_SharedParticipants.
     * @implements IProto_SharedParticipants
     * @constructor
     * @param {IProto_SharedParticipants=} [properties] Properties to set
     */
    function Proto_SharedParticipants(properties) {
        this.Participant = [];
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_SharedParticipants Participant.
     * @member {Array.<IProto_Participant>} Participant
     * @memberof Proto_SharedParticipants
     * @instance
     */
    Proto_SharedParticipants.prototype.Participant = $util.emptyArray;

    /**
     * Creates a new Proto_SharedParticipants instance using the specified properties.
     * @function create
     * @memberof Proto_SharedParticipants
     * @static
     * @param {IProto_SharedParticipants=} [properties] Properties to set
     * @returns {Proto_SharedParticipants} Proto_SharedParticipants instance
     */
    Proto_SharedParticipants.create = function create(properties) {
        return new Proto_SharedParticipants(properties);
    };

    /**
     * Encodes the specified Proto_SharedParticipants message. Does not implicitly {@link Proto_SharedParticipants.verify|verify} messages.
     * @function encode
     * @memberof Proto_SharedParticipants
     * @static
     * @param {IProto_SharedParticipants} message Proto_SharedParticipants message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_SharedParticipants.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.Participant != null && message.Participant.length)
            for (var i = 0; i < message.Participant.length; ++i)
                $root.Proto_Participant.encode(message.Participant[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
        return writer;
    };

    /**
     * Encodes the specified Proto_SharedParticipants message, length delimited. Does not implicitly {@link Proto_SharedParticipants.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_SharedParticipants
     * @static
     * @param {IProto_SharedParticipants} message Proto_SharedParticipants message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_SharedParticipants.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_SharedParticipants message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_SharedParticipants
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_SharedParticipants} Proto_SharedParticipants
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_SharedParticipants.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_SharedParticipants();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 1:
                if (!(message.Participant && message.Participant.length))
                    message.Participant = [];
                message.Participant.push($root.Proto_Participant.decode(reader, reader.uint32()));
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_SharedParticipants message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_SharedParticipants
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_SharedParticipants} Proto_SharedParticipants
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_SharedParticipants.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_SharedParticipants message.
     * @function verify
     * @memberof Proto_SharedParticipants
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_SharedParticipants.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.Participant != null && message.hasOwnProperty("Participant")) {
            if (!Array.isArray(message.Participant))
                return "Participant: array expected";
            for (var i = 0; i < message.Participant.length; ++i) {
                var error = $root.Proto_Participant.verify(message.Participant[i]);
                if (error)
                    return "Participant." + error;
            }
        }
        return null;
    };

    /**
     * Creates a Proto_SharedParticipants message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_SharedParticipants
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_SharedParticipants} Proto_SharedParticipants
     */
    Proto_SharedParticipants.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_SharedParticipants)
            return object;
        var message = new $root.Proto_SharedParticipants();
        if (object.Participant) {
            if (!Array.isArray(object.Participant))
                throw TypeError(".Proto_SharedParticipants.Participant: array expected");
            message.Participant = [];
            for (var i = 0; i < object.Participant.length; ++i) {
                if (typeof object.Participant[i] !== "object")
                    throw TypeError(".Proto_SharedParticipants.Participant: object expected");
                message.Participant[i] = $root.Proto_Participant.fromObject(object.Participant[i]);
            }
        }
        return message;
    };

    /**
     * Creates a plain object from a Proto_SharedParticipants message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_SharedParticipants
     * @static
     * @param {Proto_SharedParticipants} message Proto_SharedParticipants
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_SharedParticipants.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.arrays || options.defaults)
            object.Participant = [];
        if (message.Participant && message.Participant.length) {
            object.Participant = [];
            for (var j = 0; j < message.Participant.length; ++j)
                object.Participant[j] = $root.Proto_Participant.toObject(message.Participant[j], options);
        }
        return object;
    };

    /**
     * Converts this Proto_SharedParticipants to JSON.
     * @function toJSON
     * @memberof Proto_SharedParticipants
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_SharedParticipants.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_SharedParticipants;
})();

$root.Proto_Participant = (function() {

    /**
     * Properties of a Proto_Participant.
     * @exports IProto_Participant
     * @interface IProto_Participant
     * @property {Uint8Array|null} [ParticipantCode] Proto_Participant ParticipantCode
     * @property {number|null} [ParticipantType] Proto_Participant ParticipantType
     * @property {Uint8Array|null} [DisplayName] Proto_Participant DisplayName
     * @property {number|null} [AccessType] Proto_Participant AccessType
     */

    /**
     * Constructs a new Proto_Participant.
     * @exports Proto_Participant
     * @classdesc Represents a Proto_Participant.
     * @implements IProto_Participant
     * @constructor
     * @param {IProto_Participant=} [properties] Properties to set
     */
    function Proto_Participant(properties) {
        if (properties)
            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                if (properties[keys[i]] != null)
                    this[keys[i]] = properties[keys[i]];
    }

    /**
     * Proto_Participant ParticipantCode.
     * @member {Uint8Array} ParticipantCode
     * @memberof Proto_Participant
     * @instance
     */
    Proto_Participant.prototype.ParticipantCode = $util.newBuffer([]);

    /**
     * Proto_Participant ParticipantType.
     * @member {number} ParticipantType
     * @memberof Proto_Participant
     * @instance
     */
    Proto_Participant.prototype.ParticipantType = 0;

    /**
     * Proto_Participant DisplayName.
     * @member {Uint8Array} DisplayName
     * @memberof Proto_Participant
     * @instance
     */
    Proto_Participant.prototype.DisplayName = $util.newBuffer([]);

    /**
     * Proto_Participant AccessType.
     * @member {number} AccessType
     * @memberof Proto_Participant
     * @instance
     */
    Proto_Participant.prototype.AccessType = 0;

    /**
     * Creates a new Proto_Participant instance using the specified properties.
     * @function create
     * @memberof Proto_Participant
     * @static
     * @param {IProto_Participant=} [properties] Properties to set
     * @returns {Proto_Participant} Proto_Participant instance
     */
    Proto_Participant.create = function create(properties) {
        return new Proto_Participant(properties);
    };

    /**
     * Encodes the specified Proto_Participant message. Does not implicitly {@link Proto_Participant.verify|verify} messages.
     * @function encode
     * @memberof Proto_Participant
     * @static
     * @param {IProto_Participant} message Proto_Participant message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Participant.encode = function encode(message, writer) {
        if (!writer)
            writer = $Writer.create();
        if (message.ParticipantCode != null && Object.hasOwnProperty.call(message, "ParticipantCode"))
            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.ParticipantCode);
        if (message.ParticipantType != null && Object.hasOwnProperty.call(message, "ParticipantType"))
            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.ParticipantType);
        if (message.DisplayName != null && Object.hasOwnProperty.call(message, "DisplayName"))
            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.DisplayName);
        if (message.AccessType != null && Object.hasOwnProperty.call(message, "AccessType"))
            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.AccessType);
        return writer;
    };

    /**
     * Encodes the specified Proto_Participant message, length delimited. Does not implicitly {@link Proto_Participant.verify|verify} messages.
     * @function encodeDelimited
     * @memberof Proto_Participant
     * @static
     * @param {IProto_Participant} message Proto_Participant message or plain object to encode
     * @param {$protobuf.Writer} [writer] Writer to encode to
     * @returns {$protobuf.Writer} Writer
     */
    Proto_Participant.encodeDelimited = function encodeDelimited(message, writer) {
        return this.encode(message, writer).ldelim();
    };

    /**
     * Decodes a Proto_Participant message from the specified reader or buffer.
     * @function decode
     * @memberof Proto_Participant
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @param {number} [length] Message length if known beforehand
     * @returns {Proto_Participant} Proto_Participant
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Participant.decode = function decode(reader, length) {
        if (!(reader instanceof $Reader))
            reader = $Reader.create(reader);
        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.Proto_Participant();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
            case 2:
                message.ParticipantCode = reader.bytes();
                break;
            case 3:
                message.ParticipantType = reader.int32();
                break;
            case 5:
                message.DisplayName = reader.bytes();
                break;
            case 6:
                message.AccessType = reader.int32();
                break;
            default:
                reader.skipType(tag & 7);
                break;
            }
        }
        return message;
    };

    /**
     * Decodes a Proto_Participant message from the specified reader or buffer, length delimited.
     * @function decodeDelimited
     * @memberof Proto_Participant
     * @static
     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
     * @returns {Proto_Participant} Proto_Participant
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    Proto_Participant.decodeDelimited = function decodeDelimited(reader) {
        if (!(reader instanceof $Reader))
            reader = new $Reader(reader);
        return this.decode(reader, reader.uint32());
    };

    /**
     * Verifies a Proto_Participant message.
     * @function verify
     * @memberof Proto_Participant
     * @static
     * @param {Object.<string,*>} message Plain object to verify
     * @returns {string|null} `null` if valid, otherwise the reason why it is not
     */
    Proto_Participant.verify = function verify(message) {
        if (typeof message !== "object" || message === null)
            return "object expected";
        if (message.ParticipantCode != null && message.hasOwnProperty("ParticipantCode"))
            if (!(message.ParticipantCode && typeof message.ParticipantCode.length === "number" || $util.isString(message.ParticipantCode)))
                return "ParticipantCode: buffer expected";
        if (message.ParticipantType != null && message.hasOwnProperty("ParticipantType"))
            if (!$util.isInteger(message.ParticipantType))
                return "ParticipantType: integer expected";
        if (message.DisplayName != null && message.hasOwnProperty("DisplayName"))
            if (!(message.DisplayName && typeof message.DisplayName.length === "number" || $util.isString(message.DisplayName)))
                return "DisplayName: buffer expected";
        if (message.AccessType != null && message.hasOwnProperty("AccessType"))
            if (!$util.isInteger(message.AccessType))
                return "AccessType: integer expected";
        return null;
    };

    /**
     * Creates a Proto_Participant message from a plain object. Also converts values to their respective internal types.
     * @function fromObject
     * @memberof Proto_Participant
     * @static
     * @param {Object.<string,*>} object Plain object
     * @returns {Proto_Participant} Proto_Participant
     */
    Proto_Participant.fromObject = function fromObject(object) {
        if (object instanceof $root.Proto_Participant)
            return object;
        var message = new $root.Proto_Participant();
        if (object.ParticipantCode != null)
            if (typeof object.ParticipantCode === "string")
                $util.base64.decode(object.ParticipantCode, message.ParticipantCode = $util.newBuffer($util.base64.length(object.ParticipantCode)), 0);
            else if (object.ParticipantCode.length)
                message.ParticipantCode = object.ParticipantCode;
        if (object.ParticipantType != null)
            message.ParticipantType = object.ParticipantType | 0;
        if (object.DisplayName != null)
            if (typeof object.DisplayName === "string")
                $util.base64.decode(object.DisplayName, message.DisplayName = $util.newBuffer($util.base64.length(object.DisplayName)), 0);
            else if (object.DisplayName.length)
                message.DisplayName = object.DisplayName;
        if (object.AccessType != null)
            message.AccessType = object.AccessType | 0;
        return message;
    };

    /**
     * Creates a plain object from a Proto_Participant message. Also converts values to other types if specified.
     * @function toObject
     * @memberof Proto_Participant
     * @static
     * @param {Proto_Participant} message Proto_Participant
     * @param {$protobuf.IConversionOptions} [options] Conversion options
     * @returns {Object.<string,*>} Plain object
     */
    Proto_Participant.toObject = function toObject(message, options) {
        if (!options)
            options = {};
        var object = {};
        if (options.defaults) {
            if (options.bytes === String)
                object.ParticipantCode = "";
            else {
                object.ParticipantCode = [];
                if (options.bytes !== Array)
                    object.ParticipantCode = $util.newBuffer(object.ParticipantCode);
            }
            object.ParticipantType = 0;
            if (options.bytes === String)
                object.DisplayName = "";
            else {
                object.DisplayName = [];
                if (options.bytes !== Array)
                    object.DisplayName = $util.newBuffer(object.DisplayName);
            }
            object.AccessType = 0;
        }
        if (message.ParticipantCode != null && message.hasOwnProperty("ParticipantCode"))
            object.ParticipantCode = options.bytes === String ? $util.base64.encode(message.ParticipantCode, 0, message.ParticipantCode.length) : options.bytes === Array ? Array.prototype.slice.call(message.ParticipantCode) : message.ParticipantCode;
        if (message.ParticipantType != null && message.hasOwnProperty("ParticipantType"))
            object.ParticipantType = message.ParticipantType;
        if (message.DisplayName != null && message.hasOwnProperty("DisplayName"))
            object.DisplayName = options.bytes === String ? $util.base64.encode(message.DisplayName, 0, message.DisplayName.length) : options.bytes === Array ? Array.prototype.slice.call(message.DisplayName) : message.DisplayName;
        if (message.AccessType != null && message.hasOwnProperty("AccessType"))
            object.AccessType = message.AccessType;
        return object;
    };

    /**
     * Converts this Proto_Participant to JSON.
     * @function toJSON
     * @memberof Proto_Participant
     * @instance
     * @returns {Object.<string,*>} JSON object
     */
    Proto_Participant.prototype.toJSON = function toJSON() {
        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
    };

    return Proto_Participant;
})();

/**
 * ICRONConstants enum.
 * @exports ICRONConstants
 * @enum {number}
 * @property {number} ZERO_VALUE=0 ZERO_VALUE value
 * @property {number} PROTO_FILE_VERSION=7 PROTO_FILE_VERSION value
 */
$root.ICRONConstants = (function() {
    var valuesById = {}, values = Object.create(valuesById);
    values[valuesById[0] = "ZERO_VALUE"] = 0;
    values[valuesById[7] = "PROTO_FILE_VERSION"] = 7;
    return values;
})();

module.exports = $root;
